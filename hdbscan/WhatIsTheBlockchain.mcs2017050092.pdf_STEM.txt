











































section titl 
editors: konrad hinsen, hinsen@cnrs-orleans.fr | konstantin läufer, laufer@cs.luc.edu 

92 comput in scienc & engin 1521-9615/17/$33.00 © 2017 ieee copublish by the ieee CS and the aip september/octob 2017 

comput prescript 
editors: franci sullivan, fran@super.org | ernst mucke, ernst.mucke@gmail.com 

what Is the blockchain? 

massimo Di pierro | depaul univers 

T 
he technolog know a the blockchain be first re- 
veal by satoshi nakamoto in hi paper “bitcoin: 
A peer-to-p electron cash system” (https:// 
bitcoin.org/bitcoin.pdf), which laid out the math- 

emat foundat for the bitcoin cryptocurrency. although 
thi be a groundbreak paper, it be never actual sub- 
mit to a tradit peer-review journal, and the author’ 
true ident be unknown. blockchain technolog be not onli 
at the foundat of all crytocurrencies, but it have found wide 
applic in the more tradit financi industry. It also 
open the door to new applic such a smart contracts. 

it’ a matter of trust 
the problem that nakamoto solv with the blockchain 
be that of establish trust in a distribut system. more 
specifically, the problem of creat a distribut storag of 
timestamp document where no parti can tamper with the 
content of the data or the timestamp without detection. 

note that thi problem be orthogon to the problem 
of authentication, integrity, and nonrepudiation, which 
be solv by digit signatures. If a parti creat a digi- 
tal signatur for a document, it establish onli a verifi 
link between the parti and the document. the exist 
of a valid digit signatur prof that the parti inde 
intend to sign the document and that the document 
hasn’t be altered. yet the digit signatur guarante 
noth about the time when the document be signed: 
the timestamp requir trust in the parti that sign it. In 
the case of financi transact and other form of legal 
contracts, time be of the essence, and the order of those 
financi transact need to be independ certifi 
to be auditable. 

consid the case of hous sales. the owner can be de- 
fin a the parti to whom the hous be last sell to, but 
ownership can onli be verifi from the full paper trail 
of all transact relat to the house, a paper trail that’ 



www.computer.org/cis 93 

usual kept and verifi by titl companies. note thi 
system doesn’t complet prevent fraudul transact 
(such a a person sell a hous that he or she doesn’t 
own or sell the same properti to more than one party), 
but fraudul activ eventu get detected, and true 
ownership be established. the same ownership verif 
problem aris in financi transactions—for sure, in the 
sale of cryptocurrency, but also in the sale of ani other 
tradit financi instrument. the problem be normal 
solv by record all transact in a singl trust cen- 
traliz ledger, but a ledger isn’t alway a practic solu- 
tion becaus it doesn’t scale to larg number of frequent 
transact and becaus it requir all parti to trust the 
ledger’ maintainer. In the same way you need to trust 
your bank with your money (and bank employe steal 
custom fund be not unheard of). To address this, the 
blockchain provid a distribut trust mechanism: mul- 
tipl parti keep a record of transactions, and everi parti 
can verifi that the order and timestamp of the transac- 
tion haven’t be tamper with. 

A unit of bitcoin be noth other than a number, but 
onli some number be valid bitcoins. these number be 
solut of a well-defin equation, and whoever find a 
new solut own it (thi process be call mining). onc 
a bitcoin be discovered, it can be traded, with transact 
store in a ledger. transact be digit sign with 
the credenti of the seller to avoid nonrepudiation. there 
be no central ledger becaus user wouldn’t trust one 
and becaus there be too mani transact to store them 
all in one place. henc bitcoin and other cryptocurren- 
cie provid a distribut ledger in which everi comput 
involv in the transact of a specif coin (or fraction 
of a coin) keep a copi of the histori of that coin’ trans- 
actions. the blockchain technolog make sure that no 
parti store thi histori can tamper with it without be- 
ing detected. 

hash function 
transact be unit of data contain the transact 
detail plu a timestamp. both can be repres a com- 
puter number or strings. A blockchain can be thought of 
a a tabl with three columns, where each row repres 
a distinct transaction, the first column store the transac- 
tion’ timestamp, the second column store the transac- 
tion’ details, and the third column store a hash of the 
current transact plu it detail plu the hash of the pre- 
viou transaction. when a new record be insert into a 
blockchain, the last comput hash be broadcast to everi 
interest party. It isn’t necessari for everi parti to keep a 
copi of the entir transact history—it’ suffici that 
a few parti do. becaus everyon know the last hash, 
anyon can verifi that the data hasn’t be alter sinc 
it would be imposs without obtain a differ and 

thu invalid hash. the onli way to tamper with the data 
while preserv the hash would be to find a collis in 
the data, and that’ comput impossible. It would 
requir so much comput power that it’ practic 
uneconomical. 

A hash can be thought of a an encrypt version of 
the origin string from which it be imposs to deriv the 
origin string. In fact, one way to comput the hash of a 
string be by encrypt it and perform some scrambl 
and xore of the output bits. mathematically, a hash be 
produc by a hash function, f, which must have two im- 
portant properties: the size of the input space and the out- 
put space must be large; it must be practic imposs 
to find collisions, that is, two input x1 and x2 that produc 
the same output f(x1) 5 f(x2). A typic applic of hash 
function be in password storage—when you regist on a 
website, you don’t want the site to store your password p 
in it database, otherwis anyon with access to the data- 
base could read it. the websit should store the hash of the 
password, f(p) 5 y. when you login, the input password p 
be hash again and compar with the store value, f(p) 5 
y. the probabl of an incorrect password produc the 
same hash valu y a the actual password be zero for practi- 
cal purposes. 

exampl of hash function be the secur hash 
algorithm (sha1, sha128, sha512, and so on), 
which be implement in the standard python modul 
hashlib. they can take ani string a input and alway 
produc an output string that’ a hexadecim representa- 
tion of the output number of the function with a fix 
number of digits: 

>>> print hashlib.sha1(‘hello world’).hexdigest() 
2aae6c35c94fcfb415dbe95f408b9ce91ee846 

let’ look at a simpl implement of a blockchain in 
python. first, we defin a function that we call bhash that, 
give the timestamp and detail (a string or other serializ- 
abl object) of a new transact along with the hash of the 
previou transaction, comput a new hash use the sha1 
algorithm: 

import hashlib, json, time 

def bhash (timestamp, details, prev_hash): 
token = json.dumps([timestamp, details, prev_hash]) 
return hashlib.sha1(details).hexdigest() 

notic that we use the json serial to combin the 
element togeth into a hashabl string that we then pa 
to the hash sha1 hash function. our choic of serial 
in json be an implement detail and not the onli way to 
achiev the goal. 



comput prescript 

94 september/octob 2017 

next we creat a blockchain class to encapsul a list 
of blocks: 

class blockchain(object): 
def __init__(self, details=’new-chain’): 
self.block = [(time.time(), details, ”)] 
def record(self, details, timestamp = none): 
timestamp = timestamp or time.time() 
prev_hash = self.blocks[21] [2] 
new_hash = bhash(timestamp, details, prev_hash) 
self.blocks.append((timestamp, details, new_hash)) 

the class have a constructor, “init”, which creat a list 
of block and store the first block in the list. thi first block 
contain an initi timestamp and detail but no hash. In 
the case of a bitcoin, thi would store inform about the 
discoveri of a new unit and it owner. 

the class also have a second method, “record”, that, 
give the detail of a new transact and an option 
timestamp (otherwis automat computed), store 
them in a new block. thi be do by retriev the hash 
of the previou block from self.blocks[21][2], 
call the bhash function, and append the trip- 
let (timestamp, details, new_hash) to the list of 
blocks. notic that self.blocks[i][j] repres a 
cell in the blockchain tabl where i be the row number 
start from 0, and j be the column number also start- 
ing from 0. 

We use our blockchain class by creat an instanc 
of it, which we call “bc”, and record transact repre- 
sent a self-descript strings: 

>>> bc = blockchain(‘a found $1’) 
>>> bc.record(‘a give $1 to b’) 
>>> bc.record(‘b give $1 to c’) 
>>> bc.record(‘c give $1 to d’) 

then we can print the block in the blockchain: 

>>> print bc.block 
[(1495941516.704196, ‘A found $1’, ”), 
(1495941516.704201, ‘A give $1 to b’, ‘a75a9227f...’), 
(1495941516.704277, ‘B give $1 to c’, ‘ca911be27...’), 
(1495941516.704290, ‘C give $1 to d’, ‘cb462885e...’)] 

the last hash be ‘cb462885e...’. for thi technolog 
to work, we must make sure we broadcast the last hash and 
that there a few copi of the full chain store by differ 
parties. the parti in thi context be the comput node 
in the peer-to-p network in charg of record and stor- 
ing the transactions. thi be a network problem and beyond 
thi article’ scope. 

it’ also import that everi parti can verifi the 
chain’ integrity. thi can easili be do by use the func- 
tion below: 

def verify(blockchain): 
prev 5 blockchain.blocks[0] 
for block in blockchain.blocks[1:]: 
new_hash = bhash(block[0], block[1], prev[2]) 
if block[2] != new_hash: return fals 
prev = block 
return true 

In the code, abov we loop over all the block start 
from the second one, recomput each hash, and then com- 
pare it with the store one in block[2], the third column. 
If the code find ani hash that doesn’t match, it return 
false, or els it return true. We can call thi code on our 
blockchain with 

>>> print verify(bc) 
true 

from a technolog viewpoint, there’ a lot more than 
thi to the bitcoin network. there be algorithm for data 
distribution, for sync nodes, for effici storag and que- 
rying, for conflict resolutions, and so on, yet the blockchain 
technolog be at the heart of it. 

cryptocurr and beyond 
it’ import to observ that differ cryptocurr 
run on differ platform and make differ storag and 
hash choices. In addition, for the same type of crypto- 
currency, for example, bitcoin, there be differ implemen- 
tation of the algorithm, even though they’r all compat 
and can commun with each other. moreover, for each 
unit of coin, there’ one set of block (replic in multipl 
locations). 

it use for cryptocurr be the first and best-known 
applic of the blockchain, but it isn’t the onli one, and 
probabl not the most important. mani compani provid 
proprietari implement of the blockchain technolog 
and sell their solut to the financi industry, which us 
them to record variou type of transactions. these propri- 
etari solut be integr into the authent infra- 
structur of financi institut and allow differ agent 
to record transact in a distribut fashion, therebi al- 
low differ institut (or part of the same institu- 
tion) to transact without reciproc trust. 

becaus a transact be basic a string, it can contain 
arbitrari information. It should be evid to the reader at thi 
point that thi technolog can be use for ani kind of nota- 
rization, and not necessarili involv money. for example, 



www.computer.org/cis 95 

chicago’ cook counti have be experi with use 
the bitcoin network to record hous titl (https://bitcoinmaga- 
zine.com/articles/chicago-s-cook-county-to-test-bitcoin-block- 
chain-based-public-records-1475768860). similarly, someon 
could store an idea for a patent in the blockchain to late prove 
a first-to-inv claim. you could also store a promis to do 
someth at a late time, with the promis store in the form 
of code that would execut the promis in an autom man- 
ner. thi be what’ call a smart contract; for example, let’ 
say we have thi promise: “alic promis to pay bob $1 if on 
1 januari 2028 it rain in chicago.” As long a the promis be 
in the blockchain, and an api can check whether the condi- 
tion be met, the system can automat execut the trans- 
action should the condit be fulfilled. 

the bitcoin network be the first, but new one be emerg- all the time to trade and specif handl smart 

contracts, “applic that run exactli a program 
without ani possibl of downtime, censorship, fraud, or 
third-parti interference” (thereum.com). 

On one hand, the idea of trade cryptocurr 
might be noth more than stamp collecting, but the oth- 
er, the underli technolog have onli start to revolution- 
ize contract and human interactions. It will displac mani 
white collar job the same way robot have displac blue 
collar ones. It will also creat new job that we can’t even 
imagin today. onli time will tell if cryptocurr can 
soar and prosper becaus of the increas trust peopl put 
into blockchain technology. 

massimo Di pierro be a professor in the school of comput at 
depaul univers and co-director of the MS program in com- 
putat finance. contact him at massimo.dipierro@depaul 
.edu. 

take the 
CS librari 
wherev 
you go! 

ieee comput societi magazin and transact be now 
avail to subscrib in the portabl epub format. 

just download the articl from the ieee comput societi digit 
library, and you can read them on ani devic that support epub. 
for more information, includ a list of compat devices, visit 

www.computer.org/epub 


