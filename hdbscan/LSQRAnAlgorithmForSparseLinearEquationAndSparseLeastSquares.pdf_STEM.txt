

































lsqr: An algorithm for spars linear 
equat and spars least squar 

christoph C. paig 
mcgill university, canada 
and 
michael A. saunder 
stanford univers 

An iter method be give for solv Ax ~ffi b and minu Ax - b 112, where the matrix A be larg and 
sparse. the method be base on the bidiagon procedur of golub and kahan. It be analyt 
equival to the standard method of conjug gradients, but poss more favor numer 
properties. 

reliabl stop criterion be derived, along with estim of standard error for x and the 
condit number of A. these be use in the fortran implement of the method, subroutin 
lsqr. numer test be describ compar i~qr with sever other conjugate-gradi algori- 
thms, indic that i~qr be the most reliabl algorithm when A be ill-conditioned. 

categori and subject descriptors: g.1.2 [numer analysis]: approrjmation--least squar 
approximation; g.1.3 [numer analysis]: numer linear algebra--linear system (direct and 
tter methods); spars and veri larg system 

gener terms: algorithm 

addit key word and phrases: analysi of varianc 

the algorithm: lsqr: spars linear equat and least squar problems. acm trans. math. 
softw. 8, 2 (june 1982). 

1. introduct 

A n u m e r i c a l m e t h o d be p r e s e n t e d he re for c o m p u t i n g a so lu t i on x to e i the r of the 

fol low prob lems: 

U n s y m m e t r i c equa t ion : solv A x ffi b 

L i n e a r lea t squar : m i n i m i z e ][ A x - b 112 

thi work be support in part by the natur scienc and engin research council of 
canada grant a8652, the new zealand depart of scientif and industri research, the u.s. 
offic of naval research under contract n00014-75-c-0267, nation scienc foundat grant 
mc 76-20019 and eng 77-06761, and the depart of energi under contract de.ac03- 
76sf00326, PA no. de-at03-76er72018. 
authors' addresses: c.c. paige, school of comput science, mcgill university, montreal, p.q., 
canada h3c 3g1; m.a. saunders, depart of oper research, stanford university, stanford, 
CA 94305. 
permiss to copi without fee all or part of thi materi be grant provid that the copi be not 
make or distribut for direct commerci advantage, the acm copyright notic and the titl of the 
public and it date appear, and notic be give that copi be by permiss of the associ 
for comput machinery. To copi otherwise, or to republish, requir a fee and/or specif 
permission. 
© 1982 acm 0098-3500/82/0300-0043 $00.75 

acm transact on mathematw software, vol 8, no. 1, march 1982, page 43-71. 



44 • C .c. paig and M. A. saunder 

where A be a real matrix with m row and n column and b be a real vector. It will 
usual be true that m _> n and rank(a) = n, but these condit be not 
essential. the method, to be call algorithm lsqr, be similar in style to the 
well-known method of conjug gradient (cg) a appli to the least-squar 
problem [10]. the matrix A be use onli to comput product of the form A v and 
atu for variou vector v and u. henc A will normal be larg and spars or will 
be express a a product of matrix that be spars or have special structure. 
A typic applic be to the larg least-squar problem aris from analysi 
of varianc (6.g., [12]). 

cg-like method be iter in nature. they be character by t h e i r need 
for onli a few vector of work storag and by their theoret converg 
within at most n iter (if exact arithmet could be performed). In practic 
such method may requir far few or far more than n iter to reach an 
accept approxim to x. the method be most use when A be well 
condit and have mani nearli equal singular values. these properti occur 
natur in mani applications. In other case it be often possibl to divid the 
solut procedur into a direct and an iter part, such that the iter part 
have a good condit matrix for which cg-like method will converg more 
quickly. some such transform method be consid in [21]. 

algorithm lsqr be base on the bidiagon procedur of golub and 
kahan [9]. It gener a sequenc of approxim {xk } such that the residu 
norm II rk [[2 decreas monotonically, where rk = b - A x k . analytically, the 
sequenc (xh} be ident to the sequenc gener by the standard CG algo- 
rithm and by sever other publish algorithms. however, lsqr be show by 
exampl to be numer more reliabl in variou circumst than the other 
method considered. 

the fortran implement of lsqr [22] be design for practic appli- 
cation. It incorpor reliabl stop criterion and provid the user with 
comput estim of the follow quantities: x , r = b - A x , A tr, II r 112, It A II F, 
standard error for x , and the condit number of A. 

1.1 notat 

matric be denot by A, B . . . . . vector by v, w , . . . , and scalar by ~, f l , . . . . 
two except be c and s, which denot the signific compon of an 
elementari orthogon matrix, such that c 2 + s 2 = 1. for a vector v, H v [[ alway 
denot the euclidean norm H v [[2 = (vtv) 1/2. for a matrix A, [[a [[ will usual 
mean the frobeniu norm, HA HF = ( ~ a 2 ) 1/2, and the condit number for an 
unsymmetr matrix A be defin by cond(a) = ]] A ]] II A + ]], where A + denot the 
pseudoinvers of A. the rel precis of floating-point arithmet be e, the 
small machine-represent number such that 1 + e > 1. 

2. motiv via the lanczo process 

In thi section we review the symmetr lanczo process [13] and it use in 
solv symmetr linear equat B x = b. algorithm lsqr be then deriv by 
appli the lanczo process to a particular symmetr system. although a more 
direct develop be give in section 4, the present deriv may remain 
use for a futur error analysi of lsqr, sinc mani of the round error 
properti of the lanczo process be alreadi know [18]. 

acm transact on mathematm software, vol 8, No 1, march 1982. 



lsqr: An algorithm for spars linear equatton and spars least squar • 45 

given a symmetr matrix B and a start vector b, the lanczo process be a 
method for gener a sequenc of vector { v,) and scalar { a, ), (fli} such that 
B be reduc to tridiagon form. A reliabl comput form of the method be 
the following. 

T h e L a n c z o s p roce s (reduct to tridiagon form): 

fll vl -- b, 

w, = bvt - fl, v,-~ ] 

a, vtw' I ' i = 1, 2 , . . . , (2.1) 

~ t+ l vt+l W t ~ oltvt 

where vo - 0 and each fl, _> 0 be chosen so that II v, II = 1 (i > 0). the situat after 
k step be summar by 

B V k = Vk Tk + flk+lvk+le T (2.2) 

where Tk - tridiag(fl, a,, fl,+l) and Vk ~ [vl, v2 . . . . . vk]. If there be no round 
error we would have V T Vk = I, and the process would therefor termin with 
fl,+~ = 0 for some k ___ n. some other stop criterion be need in practice, sinc 
ilk+, be unlik to be neglig for ani k. In ani event, eq. (2.2) hold to within 
machin precision. 

now suppos we wish to solv the symmetr system B x = b. multipli (2.2) 
by an arbitrari k-vector yk, whose last element be ~/h, give B V k y k ~- Vk tkyk + 
flk+~vk+~k. sinc Vk (fl~ el) = b by definition, it follow that ifyk and xk be defin 
by the equat 

thyk = file1, 
(2.3) 

xk = vkyk, 

then we shall have bxk = b + ~lkflk+lvk+~ to work accuracy. henc xk may be 
take a the exact solut to a perturb system and will solv the origin 
system whenev 7/kflk+l be neglig small. 

the abov argument be not complete, but they provid at least some 
motiv for defin the sequenc of vector {xk} accord to (2.3). It be now 
possibl to deriv sever iter algorithm for solv B x = b, each character- 
ize by the manner in which yk be elimin from (2.3) (sinc it be usual not 
practic to comput each Yk explicitly). In particular, the method of conjug 
gradient be know to be equival to use the choleski factor Tk 
lkdk L~ and be reliabl when B (and henc tk) be posit definite, while algorithm 
symmlq employ the orthogon factor Tk --/:k Q~ to retain stabil for 
arbitrari symmetr B. (see [20] for further detail of these methods.) 

2.1 the least-squar system 

We now turn to a particular system that aris from the "damp least-squares" 
problem 

mioll[:l]x-[:]ll: ,2,, 
acm transactmn on mathematm software, vol. 8, no. 1, march 1982 



46 c.c. paig and M. A. saunder 

where A and b be give data and ~ be an arbitrari real scalar. the solut of 
(2.4) satisfi the symmetr (but indefinite) system 

A r 

where r be the residu vector b - ax. when the lanczo process be appli to thi 
system, a certain structur appear in relat (2.1)-(2.3). In particular, (2.1) 
reduc to the procedur defin a bidiag 1 in section 3, while (2.3) can be 
permut after 2k + 1 iter to the form 

[ ' 1P +,l _- 
(2.6) 

irk] ffi [ u~+i 0 lrt.+,l, 
x , v,j L Y' J 

where Bk be (k + 1) x k and low bidiagonal. We see that y~ be the solut of 
anoth damp least-squar problem, 

min l ] [b;]yk - [ f l~ l ] [ [2 , (2.7) 

which can be solv reliabl use orthogon transformations. thi observ 
form the basi of algorithm lsqr. 

2.2 A differ start vector 
for complet we note that a second least-squar algorithm can be deriv 
in an analog way. defin s = -ax, we can write (2.5) a 

A s 

and appli the lanczo process again, use the same matrix a befor but with 
the new start vector shown. thi time, (2.1) reduc to bidiag 2 a defin in 
section 3, while (2.3) can be permut to the form 

-x ijli J -o,e, ' 
(2.9) 

x, V, jlyk j ' 
after 2k iterations, where Rk be k × k and upper bidiagonal. (the odd-numb 
system be not use becaus t2k-~ be singular when ~ = 0.) We see that yk 
satisfi the system 

(rtrk + ~2i)yk ffi 01el, (2.10) 

which could easili be solved. however, (2.10) prof to be one form of the normal 
equat associ with (2.7), and the algorithm it suggest for comput x 
acm transactlov. on mathemat software, vol 8, no. 1, march 1982. 



lsqr: An algorithm for spars linear equat and spars least squar • 47 

therefor have unsatisfactori numer properties. We clarifi thi mat te r in 
section 7.4. 

2.3 the role of 

the quantiti gener by the lanczo process from (2.5) and (2.8) be bk, uk+~, 
Vk and rk, Pk , vk, respectively. these be all i n d e p e n d e n t o f k , which mean 
tha t they be the same a those gener when k ffi 0. We shall therefor assum 
from now on tha t k ffi 0. A give k can be accommod when solv (2.7), a 
show in [22]. method for actual choos ?, be beyond the scope of thi 
paper. 

3. the bidiagon procedur 

the preced use of the lanczo process result in two form of a bidiagonali- 
zation procedur due to golub and kahan [9]. We state these form a procedur 
bidiag 1 and 2, and then give some unexpect relationship between them. 

B i d i a g I (start vector b; reduct to low bidiagon form): 

f l l u l = b, a l v l = A tul. 

fl,+lu,+~ = A v , - a ,u , ~ , i ffi 1, 2 . . . . . (3.1) 

0~+1v~+l = atu~+i ~ flt+lvz ) 
the scalar a, _> 0 and fl, _> 0 be chosen so tha t [[ u,[i -- [[ viii ffi 1. with the 
definit 

Uk ~- [ U l , U2 , • • . , uk], B2 012 

Vk ~ [vl, v2, V, ], Bk -- [33 " ' . ' 
• ' ' , " . otk 

( w h e r e Bk be the rectangular matrix introduc in section 2), the recurr 
relat (3.1) may be rewrit a 

uk+~(fl~e~) ffi b, (3.2) 

A Vk -~ uk+lbk, (3 .3 ) 

T atuk+i -~ V k B T + olk+lvk+lek+l. (3 .4 ) 

T V If exact arithmet be used, then we would also have ut+~ uk+~ ffi I and Vk k 
= /, but, in ani event, the previou equat hold to within machin precision. 

B i d i a g 2 (start vector A T b ; reduct to upper bidiagon form): 

oavl ffi A T b , p~pl ffi A v l . 

o,+lv,+~ ffi A T p , -- p ,v , ~ , i ffi 1, 2 . . . . . (3.5) 
p,+lp,+l = Av ,+l -- 0,+1p, J 

acm transact on mathematm software, vol 8, No 1, march 1982. 



48 • c.c. paig and M. A. saunder 

again, p, > 0 and O, > 0 be chosen so that II P, II = ]1 vi II = 1. In thi case, if 

Pk -- [p l , p2, . . . ,pk], 

Yk --- Iv , , v2, . . . , vk], 

Rk ~ 

pl 

p2 03 

qqm "'o 

pk-1 

01, 

we may rewrit (3.5) a 

vk(ole l ) ffi A tb, (3.6) 

A Vk ffi P k R k , (3.7) 

V, T 0 T A T p k ffi k R k + k+lvk+lek, (3.8) 

T V and with exact arithmet we would also have P T P k = V k k = L 
bidiag 2 be the procedur origin give by golub and kahan (with the 

particular start vector A Tb ). either procedur may be deriv from the other 
by choosing.th appropri start vector and interchang A and A T. 

3.1 relationship between the bidiagon 

the princip connect between the two bidiagon procedur be that 
the matrix Vk be the same for each, and that the ident 

B T B k f f i R T R k (3.9) 

holds. thi follow from the fact that v~ be the same in both eases, and Vk be 
mathemat the result of appli k step of the lanezo process (2.2) with 
B = A ta. the rather surpris conclus be that Rk must be ident to the 
matrix that would be obtain from the convent QR faetor of bk. 
thu 

where Qk be orthogonal. In the presenc of round errors, these ident will, 
of course, ceas to hold. however, they throw light on the advantag of algorithm 
lsqr over two earli methods, lscg and L S L Q , a discuss in section 7.4. 

the relationship between the orthonorm matrix Uh and Pk can be show 
to be 

for some vector rk. We also have the ident 

0/12 '4" ~ 2 ____. p2, 0~1 ~1 = 0l , 

acm transacuon on mathematlc software, vol 8, no. 1, march 1982 

(3.11) 

for i > 1. 
(3.12) 



lsqr: An algorithm for spars linear equat and spars least squar • 49 

4. algorithm lsqr 

the quantiti gener from A and b by bidiag 1 will now be use to solv the 
least-squar problem, min II b - A x ii. 

let the quantiti 

xk = vkyk , (4.1) 

rk = b - A x k , (4.2) 

tk+l ffi file1 - B k y k , (4.3) 

be defin in term of some vector yk. I t readili follow from (3.2) and (3.3) tha t 
the equat 

rk = uk+ltk+l (4.4) 

hold to work accuracy. sinc we want H rk [[ to be small, and sinc uk+l be 
bound and theoret orthonormal, thi immedi suggest choos yk to 
minim U tk+~ H. henc we be lead natur to the least-squar problem 

min ii/ , el -- B k y k II (4.5) 

which form the basi for lsqr. 
computationally, it be advantag to solv (4.5) use the s tandard QR 

factor of Bk [8], tha t is, the same factor (3.10) tha t link the two 
bidiagonalizations. thi take the form 

pl 82 
p2 03 

t , Qo ° 

pk-1 
Pk 

~2 

84 ~k-~ 
(4.6) 

where Qk = qk, k ÷ l . . . q2,3qi,2 be a product of plane rotat (e.g., [25]) design 
to elimin the subdiagon f12, fla . . . . of bk. the vector yk and tk+l could then 
be found from 

R k y k = h , (4.7) [o] 
tk+~ = Q [ ~h+~ " (4.8) 

however, yk in (4.7) will normal have r/o element in common with yk-1. instead 
we note tha t [rk f~] be the same a [rk-1 fk-1] with a new row and column 
added. hence, one way of combin (4.1) and (4.7) effici be accord to 

xk = V k R ~ l f k =-- D k f k , (4.9) 

where the column of Dk -- [all d2 . - . dk] can be found success from the 

acm transac t ion on Ma thema tma l software, vol. 8, No 1, march 1982 



50 • C . C . paig and M. A. saunder 

R k D k = V T by forward substitution. with do = x0 = 0, thi give system T T 

dk = ! (v , - okdk-1), (4.10) 
pk 

xk = xk-i + ~kdk, (4.11) 

and onli the most recent i terat need be saved. the broad outlin of algorithm 
lsqr be now complete. 

4.1 recurr relat 

the QR factor (4.6) be determin by construct the k t h plane rotat ion 
qk,k+l to oper on row k and k + 1 of the transform [bk /~le~] to annihil 
fl~+l. thi give the follow simpl recurr relation: 

o t'] o,,+, <,,k] 
s , - c , J L P , + l ~,+1 = ~ ,+ , ~-k+, ' (4.12) 

where #51 --- al , ~1 -- ill, and the scalar ca and sk be the nontrivi element of 
qk,k+j. the quantiti #54, ~k be intermedi scalar tha t be subsequ 
replac by pk, d~. 

the rotat qk.k+i be discard a soon a they have be use in (4.12), 
sinc Q, itself be not required. We see tha t neglig work be involv in comput 
the QR factor to obtain rk, fk, and ~k+l. 

some of the work in (4.10) can be elimin by use vector Wk -- pkdk in 
place of dk. the main step of lsqr can now be summar a follows. (a 
usual the scalar a, _ 0 and fl, ___ 0 be chosen to normal the correspond 
vectors; for example, al vl ffi A T e 1 impli the computat ion 61 = atul, a] = II 1~1 ii, 
vl = (1 / a l )~1 . ) 

algort thm L S Q R 

(1) (initialize.) 

fl=u= = b, a~v~ - - - - A tul, Wl = vl, Xo = O, 

(2) for i -- 1, 2, 3 . . . . repeat step 3-6. 
(3) (continu the bidiagonalization.) 

(a) /~ ,+1u,+1 ffi A t , , - a , u , 

(b) a,+lv,+l = atu,+i --/~,+=v,. 
(4) (construct and appli next orthogon transformation.) 

(a) p, = (g~ + P , % , ) ' / ~ 

(b ) c, = f,/p, 
(c ) s, = # , + , t p , 

(d) o,+l = s,a,+l 

(e) e+~ = -c,.,+~ 

(f)~, = c,~, 

(g) ~,+, = s,~,. 

acm transact on mathemat software, vol 8, No 1, march 1982 



lsqr: An algorithm for spars linear equat,on and spars least squar • 51 

(5) (updat x, w.) 

(a) x, = x , - I + (¢, lp , )w, 

(b) w,+, = v,+~ - (8,+l/p,)w,. 

(6) (test for convergence.) 
exit if some stop criterion (yet to be discussed) have be met. 

4.2 histor note 

the previou algorithm be deriv by the author in 1973. An independ 
deriv be includ in the work of van heijst et al. [24]. 

5. estim OF norm 

here we show that estim of the quantiti II rk ii, iiatrkll, ilxkll, iia ii, and 
cond(a) can be obtain at minim cost from item alreadi requir by lsqr. 
all five quantiti will be use late to formul stop rules. 

knowledg of [[ A H and perhap cond(a) can also provid use debug 
information. for example, a user must defin hi matrix A by provid two 
subroutin to comput product of the form A v and A T u . these subroutin will 
typic use data deriv from earli computations, and may employ rather 
complex data structur in order to take advantag of the sparsiti of A. If the 
estim of II A I] and/or cond(a) prove to be unexpectedli high or low, then at 
least one of the subroutin be like to be incorrect. As a rule of thumb, we 
recommend that all column of A be scale to have unit length (11aej ]1 ffi 1, j = 
1 , . . . , n), sinc thi usual remov some unnecessari ill-condit from the 
problem. under these circumstances, a program error should be suspect 
if the estim of [[ A H differ by a signific factor from n 1/2 (sinc the particular 
norm estim will be iia nf). 

for the purpos of estim norms, we shall often assum that the orthog- 
onal relat uktuk = I and v k T V k = I hold, and that I[ Uk 112 -- H Vk 112 --- 1. In 
actual comput these be rare true, but the result estim have prove 
to be remark reliable. 

5.1 estim of H rk I] and H A trk II 
from (4.4) and (4.8) we have 

-- T 
rk = qjk+l U k + l Q k ek+l (5.1) 

(which explain the use of rk in (3.11)); hence, by assum ut+iuk+i ffi L we 
obtain the estim 

iir, II = S k + , ffi ~,sksk-1 " ' ' sl, (5.2) 

where the form of ~k+~ follow from (4.12). lsqr be unusu in not have the 
residu vector rk explicitli present, but we see that II rk II be avail essenti 
free. clearli the product of sine in (5.2) decreas monotonically. It should 
converg to zero if the system A x ffi b be compatible. otherwis it will converg to 
a posit finit limit. 

for least-squar problem a more import quantiti be atrk, which would be 
zero at the final iter if exact arithmet be performed. from (5.1), (3.4), 

acm transac t ton on M a t h e m a t i c a l sof tware , vol 8, no. 1, M a r c h 1982 



52 • c.c. paig and M. A. saunder 

and (4.6) we have 

atr4 ~4+l(v4b T + e T T = ak+lv4+l 4+l )qke4+l 

= [?k+,v4[r T 0]e4+, + ~4+lak+l(ew+lqwe4+l)v4+l. 

the first term vanishes, and it be easili see that the (k + 1)st diagon of Q4 be 
-c4. henc we have 

A wr4 = -- (~4+ l o14+l Ck )o4+ l (5.3) 

and 

iiatrkll = ~k+l~k+,l ckl (5.4) 

to work accuracy. No orthogon assumpt be need here. 

5.2 An estim of ilxk II 

the upper bidiagon matr ix Rk may be reduc to low bidiagon form by the 
orthogon factor 

R w 4(~k = £4, (5.5) 
where Q4 be a suitabl product of plane rotations. defin 5k by the system 

/~4~4 -- fk, (5.6) 

it follow that xk --- ( V4 r[1 ) f4 = ( Vk 0 T) 5k ------- 1y¢4 54. hence, under the assumpt 
that v T v k ---- I, we can obtain the estim 

II x, II = II e, ii. (5.7) 
note that the lead part of l4, ~4, l~r4, and Ek do not chang after iter k. 
henc we find that estim II xk II v ia (5.5)-(5.7) co t s onli 13 multipl 
per iteration, which be neglig for larg n. 

5.3 estim of II A lit and cond(a) 

It be clear from (3.1) that all the v, lie in the rang of A T and be therefor 
orthogon to the null space of A and A ta. with appropri orthogon 
assumpt we have from (3.3) that 

btbk = V T A T A V k , 

and so from the courant-fisch minimax theorem the eigenvalu of btbk be 
interlac by those of ata and be bound abov and below by the larg and 
small nonzero eigenvalu at A ta. the same can therefor be say of the 
singular valu of Bk compar with those of A. It follow that for the 2- and F- 
norms, 

II Bk II - II A ii, (5.8) 

where equal will be obtain in the 2-norm for some k _< rank(a) if b be not 
orthogon to the left-hand singular vector of A correspond to it larg 
singular value. equal will onli be obtain for the f-norm if b contain 
compon of all left-hand singular vector of A correspond to nonzero 

acm transact on mathematm software, vol 8, No 1, march 1982. 



lsqr: An algorithm for spars linear equat and spars least squar • 53 

singular values. nevertheless, we will use H Bk [if a a monoton ly increas 
est imat of the size of A. 

the forego also impli tha t B T B k TR = R k k be nonsingular and for the 2- and 
f-norm 

[I R ; ~ [[ = I[ S~ [[ _< [[a + [[. (5.9) 

the remark on equali ty be the same, except now "largest singular value" be 
replac by "smallest nonzero singular value." 

combin these result with the definit Dk = V k R ~ 1 in (4.9) now give 

1 <_ II B~ II iid~ I I - iiaii iia+ll-- cond(a) (5.10) 

for the 2- and f-norms. henc we take I[ Bk iifii Dk Hr a a monoton ly increas 
est imat of cond(a), which start at the optimist est imat H B1 nfi[ D~ HF -- 1. 

use of frobeniu norm allow the est imat to be accumul cheaply, sinc 
[[ B , [[~ = [[ b,-1 [[~ + a~ + fl~+~ and [[ Dk i[~ = II d,-1 ][~ + [[ dk lie. T h e individu 
term in the sum [[ dk [[2 _ y,,,.1 6~k can be use fur ther for estim s tandard 
errors, a we show next. 

5.4 standard error 

In regress problem with m > n = rank(a), the s tandard error in the i th 
compon of the true solut x be take to be & where 

s ' z _ 11 b - A x [I 2 o,, (5.11) 
m - - n 

and o, - et(ata)-~ , be the ith diagon e lement of (ata) -~. now from (3.3) and 
(3.10) we have V T A T A V k = R T R k , which with (4.9) give 

D T A tadk = L 

assum tha t p rematur terminat ion do not occur, it follow tha t with exact 
~ T r ~ r~t e ar i thmetic D n D T = (ata) -l, and we can approxim the a , by o}~ ~ - e, ~ k ~ k ,. 

sinc D k D [ = dk_~dt_i + d k d T, we have 

o~, ~ = o~, ~-'~ + ~,~, o~, °~ -= O, 

and the e~ ~ be monoton ly increas est imat of the o,,. 
In the implementat ion of lsqr we accumul o!, k~ for each i, and up- 

on terminat ion at i terat k we set 1 = max(m - n, 1) and output the squar 
root of 

s!k~ _ 1[ b - axkl[ 2 o~k ) 
1 

a est imat of the s, in (5.11). the accuraci of these est imat cannot be 
guaranteed, especi if terminat ion occur earli for some reason. however, we 
have obtain one reassur comparison with the statist packag glim [16]. 

On a modera te ly ill-condit problem of dimens 171 by 38 (cond(a) - 
103, rel machin precis = 10-11), an accur solut xk be obtain 
after 69 iterations, and at thi stage all s! k~ agre to at least one digit with the s, 
ou tput by glim, and mani compon agre more closely. 

acm transac tmn on mathematm software, vol. 8, no. 1, march 1982 



54 • C . C . paig and M. A. saunder 

A further comparison be obtain from the 1033 by 434 gravity-met problem 
discuss in [21]. for thi problem a spars QR factor be constructed, 
Q A = [0s], and the quantiti a, be comput accur use R T v i = ei, ai, ffi 
[[ v, [[2. again, the estim of s} k) from lsqr prove to be accur to at least 
one signific figure, and the larg valu be accur to three or more digits. 

note that s, 2 estim the varianc of the i th compon of x, and that s~ k)~ 
approxim thi varianc estimate. In an analog manner, we could approxi- 
mate certain covari estim by accumul 

= + = o , 

for ani specif pair (i,j), and then comput 

][ b - A x k [I 2 _(,~ 
~ q 

1 

on termination. thi facil have not be implement in lsqr and we have 
not investig the accuraci of such approximations. clearli onli a limit 
number of pair (i, j ) could be dealt with effici on larg problems. 

6. stop criteria 

An iter algorithm must includ rule for decid whether the current iter 
x~ be an accept approxim to the true solut x. here we formul 
stop rule in term of three dimensionless quantiti atol, btol, and 
conlim, which the user will be requir to specify. the first two rule appli to 
compat and incompat systems, respectively. the third rule appli to 
both. they be 

$1: stop if I[ r~ [[ <__ btol[[ b [[ + atoi~[ A [[ [I Xk U" 

]~4 trk [[ < atol. $2: stop ifha[[ []rk[[- 

$3: stop if cond(a) ___ conlim. 

We can implement these rule effici use the estim of ][ rk [[, [[ A [] F, and 
so forth, alreadi described. 

the criterion $1 and $2 be base on allow perturb in the data. the 
user may therefor set atol and btol accord to the accuraci of the data. 
for example, if (a, b) be the give data and (z~, ~) repres the (unknown) 
true values, then 

atol = [[ A - ~ [[ 
II A II 

should be use if an estim of thi be available; similarli for btol. 
criterion $3 repres an attempt to regular ill-condit systems. 

acm transact on mathematm software, vol 8, no, 1, march 1982 



lsqr: An algorithm for spars linear equat and spars least squar • 55 

6.1 compat system 

To justifi s1, let r~ = b - axh a usual, and defin the quantiti 

64 - btol[i b II + atolii aii [I xk U, 

rk 
g k - - btolii b II 

rk 
=- A T O M d II II II 

then rk = gk + hk, and 

( A + h~xx~k~ ) Xk = b - gk 

SO that xk be the exact solut for a system with both A and b perturbed. It can 
be see that these perturb be within their allow bound when the 
inequ of S 1 holds. hence, criterion S 1 be consist with the idea of backward 
round error analysi and with knowledg of data accuracy. sinc thi argument 
do not depend on orthogonality, $1 can be use in ani method for solv 
compat linear systems. 

6.2 incompat system 
stewart [23] have observ that i f 

a n d 

where 

rk ffi b -- axk 

fk = b - (A + E k ) X k 

rkrwa 

iir, ' 

then (A + E k ) T rk = 0, SO that Xk and fk be the exact solut and residu for a 
system with A perturbed. sinc H Ek 112 = ]1 A trk i]/]] rk i], the perturb to A will 
be neglig if the test in $2 be satisfied. 

In our particular method it happen that ekxk ffi 0, sinc (5.3) show that x~ ffi 
vkyk be theoret orthogon to atrk. henc fk = rk, SO both xk and rk be 
exact for the perturb system. thi strengthen the case for use rule $2. 

In practic we find that [I A trk [i/i] rk I] can vari rather dramat with k, but 
it do tend to stabil for larg k, and the stabil be more appar for lsqr 
than for the standard method of conjug gradient (see [[ atrk I] in figur 3 and 
4, section 8). criterion $2 be suffici to ensur that xk be an accept solut 
to the least-squar problem, but the exist of an easili comput test that 
be both suffici and necessari remain an open question [23]. 

6.3 ill-condit system 

stop rule S3 be a heurist base on the follow arguments. suppos that A 
have singular valu a~ _> o2 - - . - . --> a . > 0. It have be observ in some problem 

acm transact ion on mathemat ica l software, vol. 8, no. 1, march 1982. 



56 c.c. pmge and M A. saunder 

tha t a k increas the estim ]] Bk lit H Dk [iv -~ cond(a) in (5.10) temporari ly 
level off near some of the valu of the order sequenc ol /ol , ol/o2, . . . , 
a l / o , , with vari number of iter near each level. thi tend to happen 
when the small o, be veri close together, and therefor suggest criterion $3 
a a mean of regular such problem when they be veri ill-conditioned, a 
in the discret of ill-pos problem (e.g., [15]). 

for example, if the singular valu of A be know to be of order 1, 0.9, 10 -3, 
10 -6, 10 -7, the effect of the two small singular valu could probabl be 
suppress by set conlim = 10 4. 

A more direct interpret of rule $3 can be obtain from the fact tha t xk 
= D k f h . first, suppos tha t the singular valu decomposit of A be A = U Z V T 
where u T u = V T v = W T = I , ~ -~ diag(al, o2, . . . , on), and let 

a(r)= u~(r )v T 

be defin by set or+~ . . . . . On ---- 0. A common method for regular the 
least-squar problem be to comput x (r) -- V ~ ( r ) + U T b for some r _< n, sinc it can 
readili be show tha t the size of x (r) be bound accord to 

II A [12 [[ x (r) 1[ ~ __ ___ cond(a(r)). 
II b II or 

In the case of lsqr, we have II xk II -- II Dk i1~ II b ii, and so if rule $3 have not yet 
caus termination, we know tha t II Bk II F II x~ II / lib II --- II Bk II F II D~ II ~ < conlim. 
sinc U Bk iif usua l ly increas to order U A [iv quit early, we effect have 

ilaiir ilxkll < conlim, 
II b II 

which be exactli analog to the bound above. 

6.4 singular system 

It be sometim the case tha t rank(a) < n. known depend can often be 
elimin in advance, but other may remain if onli through error in the data 
or in formul of the problem. 

with convent (direct) method i t be usual possibl to detect rank defi- 
cienci and to advis the user tha t depend exist. In the present context it be 
more difficult to provid such use information, but we recogn the need for 
a method tha t at least do not fail when appli (perhap unknowingly) to a 
singular system. In such case we again suggest the paramet conlim a a 
devic for control the computation. our experi with lsqr on singular 
problem be tha t converg to an accept solut occur normally, but if 
iter be allow to continue, the comput xk will begin to chang again 
and then grow quit rapidli until 

[[a I[ ]] Xk [I = 1 (6.1) 
I[ b [I E 

(while ]1 rk II remain of reason size). the est imat of cond(a) typic grow 
larg b e f o r e the growth in xk. A moder valu of conlim (say 1/e 1/2) may 
therefor caus termin at a use solution. 

acm transact on mathematm software, vol 8, no. 1, march 1982 



lsqr: An algorithm for spars linear equat and spars least squar • 57 

In some case it can be use to set conlim a larg a 1/e and allow xk to 
diverge. In thi context we note tha t the algorithm symmlq [20] can be appli 
to singular symmetr systems, and tha t extrem growth in the result II xk II 
form an essenti part of a practic method for comput eigenvector of larg 
symmetr matrix [14]. By analogy, in the presenc of round error lsqr 
will usual produc an approxim singular vector of the matrix A. In fact, use 
(6.1) and II rk II - II b ii, we see tha t the normal vector xk = xk / l l xk II will usual 
satisfi 

1 
aek = ~ (b - rk) 

= E ~ ( b - r k ) 

= 0(~)iiaii 

for larg enough k, and henc will lie veri nearli in the null space of A. the 
vector 2k may reveal to the user where certain unexpect depend exist. 
suitabl new row could then be add to A. 

7. other method 

sever other conjugate-gradi method be discuss here. all except the first 
(cgls) be state use notat consist with section 3-6 ih order to 
illustr certain analyt identities. 

7.1 cgl 

If the conjugate-gradi method for symmetr posit definit system be 
appli naiv to the normal equat A T A x = A T b , the method do not 
perform well on ill-condit systems. To a larg extent thi be due to the 
explicit use of vector of the form A tap, . An algorithm with good numer 
properti be easili deriv by a slight algebra rearrangement, make use of 
the intermedi vector A p , [10]. I t be usual state in notat similar to the 
following. 

algor i thm C G L S 

(1) Se t ro=b , s o = A T b , p~=so , yo=ilsol 2, xo=0. 

(2) for t = 1, 2, 3, . . . repeat the following: 

(a) q, = ap, 

(b) a, = ~,,_,/ l lq, II ~ 

(c) x, = x,-~ + a,p, 

(d) r, = r,-i - a,q, 

(e) s, = A tr, 

( f ) r , = iis, lff 
(g) ,e, = r,l~,,-, 

(h) p,+l = s, + fl,p,. 
acm transact on mathemat software, vol. 8, no. 1, march 1982. 



58 • c.c. paig and M. A. saunder 

A practic implement of the method would also need to comput ]] r, ]], 
[I xi [i, and an estim of II A II in order to use the stop criterion develop in 
section 6. otherwis the method be clearli simpl and economical. analyt 
it gener the same point x, a lsqr. the vector v,+~ and d, in lsqr be 
proport to si and p,, respectively. 

note that qi and s, just give can share the same workspace. A fortran 
implement of cgl have be give by bj6rck and elfv [3]. thi incor- 
porat an acceler (preconditioning) techniqu in a way that requir mini- 
mal addit storage. 

7.2 craig' method for A x ffi b 

A veri simpl method be know for solv compat system A x ffi b. thi be 
craig' method, a describ in [6]. It be deriv from bidiag 1, a show by 
paig [17], and differ from all other method discuss here by minim the 
error norm [I xk - x H at each step, rather than the residu norm U b - A x k [[ ffi 
II A (xk - x)i[. We review the deriv briefly. 

If Lk be the first k row of bk, 

L k ~- 
~2 0/2 

q,o ",° 

~k ~k 

then eqs. (3.3)-(3.4) describ bidiag 1 may be restat a 

A V k ffi U k L k + flk+auk+l T, 

A T u k ffi V k L T" (7.1) 

craig' method be defin by the equat 

lkzk -~ f l l e l , xk ffi V k z k , (7.2) 

and we can show from (7.1) that the residu vector satisfi rk - b - A V k Z k f f i 
--~kflk+luk+l and henc U T r k ffi 0. We can therefor expect rk to vanish (analyti- 
cally) for some k _ n. 

the vector Zk a n d xk be readili comput from 

h ffi - / ~ - ' ~k- l , x , ffi x , - 1 + ~ , v , , 
~k 

where ~o - -1 . sinc the increment v~ form an orthogon set, there be no danger 
of cancellation, and the step length ~k be bound by [ ~k I - ]1 zk H - H xk I] -< II x H. 
We can therefor expect the method to poss good numer properties. thi 
be confirm by the comparison in section 8. 

7.3 extens of craig' method 

A scheme for extend craig' method to least-squar problem be suggest 
by paig in [17]. the vector in (7.2) be retain and an addit vector of 

acm transact on mathematm software, vol 8, No 1, march 1982. 



lsqr: An algorithm for spars linear equat and spars least squar • 59 

the form Vk Wk be comput in parallel. On termination, a suitabl scalar yk be 
comput and the final solut take to be 

Xk ffi ( V k Z k ) - - y k ( V k W k ) ~ V k y k . 

In the present context thi method may be interpret a a mean of solv the 
least-squar system (2.7), namely, 

. ..,,]rt,,.,l__ 
BT L Y' J 

use the fact that the underdetermin system bttk+i ---- 0 have a uniqu solut 
apart from a scalar multiple. 

In practic we have found that the method be stabl onli when b lie in the 
rang of A. further detail be give in [21]. 

7.4 lsog and lslq 

A second algorithm for least-squar problem be give by paig [17]. thi be 
algorithm lscg, base on bidiag 2. In the notat of section 3 thi algorithm 
be defin by the equat 

R T R k y k ffi 01el, Xk = vkyk (7.3) 

and implement in the form rtfk ---- 01e~, Xk ffi ( V k R ~ ) f k . given the relat 
between the two bidiagonalizations, we now recogn that thi be analyt 
equival to lsqr, but numer inferior, sinc it be effect solv the 
least-squar problem mini] bkyk -- file1 [[ by use the correspond normal 
equations. (the latter be B T B k y k ffi btfl~e~ ffi a~fl~e~ and by (3.9) and (3.12) thi 
be equival to the first equat in (7.3).) 

algorithm lslq [19] be a refin of lscg, but again it be base on bidiag 
2 and the normal equat just given, and be therefor inferior to lsqr on ill- 
condit problems. the refin have be describ in section 5.2, give 
xk -- iyvk 5k, where lytrk be theoret orthonormal, the intent be to avoid 
ani possibl cancel that could occur in accumul xk = Dk f~ •- ( V k R ~ 1) fk. 
the same refin can easili be make to lsqr, and it be implement in an 
earli version of the algorithm for the same reason. however, we have not be 
abl to detect ani numer differ between xk ffi i~¢ksk and Xk = dkfk in the 
two version of lsqr, so the fear of cancel appear to have be unfounded. 
We have therefor retain the slightli more econom Xk = dkfk, which also 
allow cond(a ) to be estim from ]] Dk iif, a alreadi described. 

algorithm lscg and lslq need not be consid further. 

7.5 chen' algorithm rrl 

anoth algorithm base on bidiag 2 have be describ by chen [4]. thi be 
algorithm rrls, and it combin bidiag 2 with the so-cal residual-reduc 
method of household [11]. In the notat of section 3 it may be describ a 
follows. the residual-reduc properti be implicit in step 2(b) and (c). 

algorithm R R L S 

(1) set ro ffi b, 8~v~ = A T b , w l = v l , Xo = O. 

acm transac tmn on mathemaucai software, vol 8, no. 1, march 1982 



60 c.c. palg and M. A. saunder 

(2) for i -- 1, 2, 3 . . . . repeat the following: 

(a) p , p , ffi A w, 

(b) k, •ptr , 

(c) r, ffi r,-1 - ~,p, 

(d) 8,+iv,+l = A T p , - - p , v ~ 

(e) x, ffi x,-1 + (k,/p,)w, 

(f) w,÷l = v,+~ - (o,+jp,)w,, 

where the scalar p, and 0, be chosen so that up, H = ]] v, ]] = 1. 

As with cgls, a practic implementat ion would also requir ]] r, ]] and I[ x, [[. the 
squar root of the sum ~ - 1 (p~ + 0~+1) = l] Rk ]]~ ffi ]] Bk lid could be use to 
estim ][ A ]if, and II atr , H could also be est imat cheaply. 

note tha t the vector v, be gener a in bidiag 2, but the vector p, come 
instead from step 2(a). substi tut the latter into step 2(d) show tha t rrl 
requir explicit computat ion of the vector A T A w , (ignor normal by 
p,). unfortun thi must cast doubt on the numer properti of the 
method, particularli when appli to compat systems. inde we find tha t 
for some system A x = b, the final norm I[ r, [I and II x, - x [[ be larger, by a factor 
approach cond(a), than those obtain by cgl and lsqr. thi be illustr 
in section 8.3. 

A second algorithm call R R L S L have be describ by chen [4], in which 
the residual-reduc method be combin with bidiag 1. however, the start 
vector use be aatb (rather than b), and product of the form A T A w , be again 
required, so tha t improv perform seem unlikely. chen report tha t rrl 
and R R L S L behav similarli in all test case tried. 

In spite of the abov comments, we have also observ ill-condit least- 
squar problem for which rrl obtain far g r e a t e r accuraci than would 
normal be expect of ani method (see section 8.4 for a possibl explanation). 
becaus of thi unusu behavior, we have investig a residual-reduc 
version of lsqr a now described. 

7.6 rrlsqr 

If the residu vector r, be explicitli introduced, algorithm lsqr a summar 
in section 4.1 can be modifi slightly. first, the residual-reduc approach 
requir step 5(a) to be replac by the two step 

r , ffi r,_~ - X , p , , x, = x,-1 + ,k,w,, 

where p, = A w , and X, ffi p Tr , -1 / l ip , ns. (in thi case p, be unnormalized.) second, 
the product A w , can be use to elimin A v , from bidiag 1, lead to an 
altern method, 

fl,+lu,+l ffi A w , - II r,-1 [-------[ r,-l, (7.4) 

for gener each fit and u,. (thi result be difficult to derive, but the key 
relat be p, / ] ip, ]1 = c,r,-1 /][ r,-1u + s,u,+l, which may be deduc from (3.11).) 

the remaind of lsqr be retained, includ the QR factor of bk. the 

acm transact ion on mathematm software, vol 8, No 1, march 1982 



lsqr: An algorithm for spars linear equat and spars least squar • 61 

coeffici of r,-1 in (7.4) can be express in sever ways; for example, 

E ~ 1 1) ' - ' ala2 . . . a, 
II r , _ , II = - - ( - . . . P , ' 

where ~', come from the system L k z k = fl~ el of craig' method. differ formula 
lead to differ i terat paths, but no variat appear to be consist be t te r 
than the rest. 

A summari of the result algorithm follows. 

algor i thm R R L S Q R 

(1) ro=b , f l l u l = b , alvl=atub wl=vb xo=o, 

(2) for i = 1, 2, 3, . .. repeat step 3-6. 

(3) (a) p, = aw, 

(b) X, = ptr,_l/ l lp, i]2 

(c) r, = r . - h , p , 

(d) fl,+lu,+1 = p, - (e/~,)r,-, 

(e) at+l v~+l = A T u t + I -- ~t+lvt 

(4) comput p,, c,, s,, e+,, p~+~, ~,,+~ a in section 4.1, step 4. 

(5) (a) x, = x ,_~+x,w, 

(b) W z + I = V , + I - - (ot+l/pt)wt 

(6) exit if appropriate. 

thi adapt ion of bidiag 1 to obtain R R L S Q R be analog to (and be mot ivat 
by) chen' adapt of bidiag 2 to obtain rrls. note, however, tha t there be 
no product of the form A taw, . In practic we find tha t R R L S Q R typic 
perform at least a well a lsqr, a measur by the limit H x, - x ]] attainable. 
fur thermor , it at tain the same unusu high accuraci achiev by rrl on 
certain ill-condit least-squar problems. On these ground R R L S Q R could 
sometim be the prefer method. however, it work and storag requir 
be significantly-high than for the other method considered. 

7.7 storag and work 

the storag and work requir for the most promis algorithm be 
summar in tabl I. recal tha t A be m by n and tha t for least-squar 
problem m may be consider larg than n. craig' method be applic onli 
to compat system A x = b, which usual mean rn -- n. 

all method requir the start vector b. If necessari thi may be overwri t ten 
by the first m-vector show (r or u). the m-vector A v show for craig and lsqr 
repres work storag to hold product of the form A v and A T u . (an n- 
vector would be need if m < n.) In some applic thi could be dispens 
with if the bidiagon oper A v - a u and A TU -- fl V be implement 
to overwrit u and v, respectively. similarly, the n-vector awp for rrl could in 
some case be comput wi thout extra storage. 

acm transact on mathemat software, vol. 8, no. 1, march 1982. 



62 • c.c. paig and M. A. saunder 

tabl I 

storag work 

m n m /'$ 

craig 
(ax = b only) u, A v x, v 3 4 

C G I ~ r, q x, p 2 3 
I ~ Q R u, A v x, v, w 3 5 
rrl r , p x , v , w , A T p 4 5 
rrlsqr r, u, p x, v, w 6 5 

the work show for each method be the number of multipl per iteration. 
for example, lsqr requir 3m + 5n multiplications. (A further 2n multiplica- 
tion be need to accumul estim of cond(a ) and standard error for x.) 
practic implement of cgl and rrl would requir a further m + n 
multipl to comput H r, I[ and [[ x, [[ for use in stop rules, although thi 
could be limit to everi tenth iteration, say, without seriou consequence. 

all method requir one product A v and one product A T o each iteration. thi 
could domin the work requir in some applications. 

8. numer comparison 

here we compar lsqr numer with four of the method discuss in 
section 7, denot by craig, cgls, rrls, and rrlsqr. the machin use 
be a burrough b6700 with rel precis ~ = 0.5 × 8 -12 = 0.7 × 10 -11. 

the result give here be complementari to those give by elfv [5], who 
compar cgl with sever other conjugate-gradi algorithm and also inves- 
tigat their perform on problem where A be singular. 

8.1 gener of test problem 

the follow step may be use to gener a test problem min [[ b - A x I[ with 
know solut x. 

(1) choos vector x, y, z, c and diagon matrix D arbitrarily, with U Y [I ffi [[ z II 
ffi 1. (for ani chosen m >_ n, the vector should be of dimens n, m, n, and 
m - n, respectively.) 

(2) defin 

Y = I - 2 y y T, 

(3) comput 

the minim residu norm be then II r I[ = II c ii. sinc A and D have the same 
singular values, the condit of the problem be easili specified. 

the particular problem use here will be call 

P ( m , n, d , p ) 

acm transact on mathemat software, vol 8, No 1, march 1982 



lsqr: An algorithm for spars linear equat,on and spars least squar • 63 

T a b l e I I 

log,011 ~, - ~ II 
case 

(m = n = 10, c o n d ( A ) = 10 s) k = 60 80 100 120 

1 A = Y D Z ( a s ~ o v e ) - 0 . 3 - 3 . 3 - 3 . 3 - 3 3 
2 A = Y D - 0 . 5 - 3 . 9 - 3 . 9 - 4 . 1 

3 A = D Z - 2 . 1 - 5 . 9 - 5 . 9 - 9 . 2 
4 A = D - 9 . 4 - 9 . 4 - 9 . 4 - 9 . 4 

to indic depend on four integ paramet , where d repres duplic 
of singular valu and p be a power factor. the matr ix D be of the form diag(o~'), 
with each o, duplic d times. specif valu for x, y, z, c, and D be gener 
a follows: 

(1) x = ( n - l , n - 2 , n - 3 . . . . . 2 ,1 ,0 ) w. 
(2) y, = sin(4cri/m), z, = cos(4~ri/n), follow by normal so tha t [[ y [[ = [[ z [[ 

--~1. 

(3) c = (1 /m, - 2 / m , 3 /m , . . . , +.(m - n ) / m ) T. 
(4) o, = [(i - 1 + d ) / d ] d / n , where integ divis be use for the te rm in squar 

brackets. choos n = q d to be a multipl of d lead to d copi of each 
singular value: 

_ ( o , ) = , . . . . q , q . . . . . q . . . . , q . . . . , . 

[for reference, thi give [[ x [[ = n ( n / 3 ) 1/2, [[ r[[ = [[ c [['-~ [(m - n ) / m ] ((rn - n ) / 
3) ~/2, ][ A ]] ~ = [[ D [[ F = (n /3 ) ~/2, cond(a) = cond(d) = (o, /ol) p = qp.] 

the orthogon matrix Y and Z be intend to reduc the possibl of 
anomal numer behavior. for example, when lsqr be appli to four 
case of the problem P (10, 10, 1, 8), the follow error norm result (tabl ii). 
sinc each case be a compat system A x = b, we normal would expect an 
error norm approach [] x [[. cond(a ). ~ = 10 -2, so tha t case 1 be the most realistic. 
In case 2 the error be concentra ted in the first and second compon of xk 
(with the remain compon accur almost to work precision), wherea 
in case 3 and 4 the final xk be virtual exact in spite of the high condit 
number of A. 

although case 2-4 repres less expens test problems, it be clear tha t 
result obtain from them could be veri misleading. In the follow subsect 
we use onli case 1. even these test problem may be less than complet general. 
thi possibl be discuss in section 8.4. 

8.2 Ax = b: deterior of cgl ,n advers circumst 

figur 1 illustr the perform of five method on the ill-condit system 
p(10, 10, 1, 8), tha t is, m = n = 10, one copi of each singular value, cond(a) -- 
l0 s. the quantit y log~011rk [[ and log~ol xk - x I[ be plot ted against i terat ion 
number k. 

thi exampl distinguish the s tandard conjugate-gradi me thod cgl 
from the remain methods. all except cgl reduc II rk II and ]1 xk - x II to a 
satisfactori level befor k -- 120. 

acm transact on mathemat software, vol. 8, no. 1, march 1982. 



64 • c.c. paig and M. A. saunder 

io91ollxv-xl 

L A ~ L A ~ ~ A 

o - craig 

A - C G L S 
x = R R L S 

<> = L S O R 
+ - R R L S O R 

iogloll%l 

! | ! ! 
| ! I t I I t ,, . I 

10 2 0 3 0 4 0 5 0 6 0 7 0 8 0 9 0 100 110 120 

fig. 1. all i l l -condit ion s y s t e m s Ax -- b, n -- 10, cond(a) = l0 s. C G L S be unab le to reduc I[ rk [[ or 
I[ xk - x [[ sat isfactor i ly C R A I G exhibi t s sever f luc tua t ion in [[ rk [[ 

acm transact on mathemat software, vol 8, No 1, march 1982 



lsqr: An algorithm for spars linear equat and spars least squar • 65 

also appar be the errat behavior of [I rk [[ for method craig, a potenti 
penalti for minim [[ x~ - x [] at each step without regard to [[ rk [[. In theori all 
other method minim ][ rk ]] at each step and also reduc [[ xk - x [] monotonically. 

If ani method be to be prefer in thi exampl it would be lsqr, sinc it 
reach limit accuraci at iter 76 and stay at essenti the same point 
thereafter. with valu atol = btol = e, the stop rule S1 a implement 
in lsqr would have caus termin at k = 76 a desired. 

8.3 Ax = b: failur of rrl 

figur 2 illustr the same five method appli to a larg problem P (40, 40, 
4, 7), in which each singular valu be repeat four time and cond(a) ~- 107. In 
thi case all method except rrl reduc [[ rk [] satisfactorili to about 10 -9 for 
k >_ 105. for method rrls, [[ rk [[ remain of order 10 -~ for k >_ 30 up to k = 250, 
and zero digit of accuraci be obtain in xk. 

A similar dispar between rrl and the remain method be observ 
on the problem P (40, 40, 4, p) , p -= 5, 6, cond(a ) = l0 p. In fairness, chen [4] do 
not intend rrl to be appli to compat systems. however, the success of 
the other least-squar method suggest tha t thi be not an unreason demand. 

8.4 min [[ A x - b [[: high accuraci by rrl and rrlsqr 

figur 3 show the perform of four least-squar method on the ill-condi- 
tion problem p(20, 10, 1, 6). sinc cond(a) 2 -- 10 ~2 = l /e , we would normal 
expect at most one digit of accuraci in the final xk. thi be achiev by lsqr 
and cgls, with lsqr show a smoother decreas of ][ awrk [[. 

In contrast, the residual-reduc method achiev at least six digit of 
accuraci in xk. similarly, three or four digit of accuraci be obtain on the 
problem p(20, 10, 1, 8), for which cond(a) = l0 s be so high tha t no digit could be 
expected. At first sight it may appear tha t the residual-reduc method poss 
some advantag on least-squar problems. however, thi anomal behavior 
cannot be guaranteed; for example, it do not occur on p(80, 40, 4, 6), a show 
in figur 4. also, the final valu of [[ A trh [[ be no small than for lsqr and thi 
be realli the more import quantity. 

par t of the explan for these occasion anomali may lie in the following. 
suppos the origin data (a, b) have solut and residu (~, f), while perturb 
data (A + ~a, b + t~b) have (~ + ~x, ~ + ~r). I f A + ~A have full column rank, then 
it be straightforward to show tha t 

8x = (A + 8a)+(sb - ~a£) + ((a + ~a)t(a + ~a))-i~atfi. 

In the present exampl ~ = 0.7 x 10 -1~, ][ A ][ 2 -- 1, cond(a) =- 106, [[ b ][ - 2.4, [[ ~ [[ 
17, ][ ~ ][ = 1. If the perturb be caus by round error in the initi 

data, then [[ 8A [[ = e, [[ ~ b [[ = E, and the first term in the express for ~x could 
be about a larg a 10 -4 in norm, and the second could be of order 7. figur 3 
suggest the second term be unusu small for the rrl and rrlsqr com- 
putations. look at the particular form of the test problem, if we write 

Y = [y1, y2], A = Y, dz, ~= y2c, 

acm transactmn on mathemat software, vol. 8, no. 1, march 1982. 



6 6 C . C . P a i g e a n d ivl. A . S a u n d e r s 

2 

0 

-2 

-4 

togloiixk-xl 

toglollrl, II 

-6 

-8 

- 1 0 

a : craig 

: C G L S 

× : R R L S 

o : lsqr 

+ : R R L S Q R 

I I I I I I i I I I I 

10 2 0 3 0 4 0 5 0 6 0 7 0 8 0 9 0 100 110 

fig. 2. A n i l l -condi t ion s y s t e m A x = b, n = 40, c o n d ( A ) = 107. R R L S be u n a b l e to r e d u c e [[ r , II o r 
il x~ - x II sa t i s fac tor i ly . 

| 

120 

acm transact on mathemat software, vol 8, No 1, march 1982 



lsqr: An algorithm for spars linear equat and spars least squar . 67 

~-,, ~ 5 -5 -'5 ~,- 5 ~ 

iog:011xk-xll 

toglo iiatrk II 

A = C G L S 
x = R R L S 
o = L S O R 
+ = R R L S O R 

10 2 0 3 0 4 0 5 0 6 0 7 0 8 0 9 0 100 

fig. 3. An ill-condit problem, minll A x - b i[, m = 20, n = 10, cond(a) := 10 ~. R R L S and R R L S Q R 
achiev anomal ly high a c c u r a c y in xh . 

acm transacgmn on mathemat software, col. 8, no. 1, march 1982 



68 c.c. paig and M. A. saunder 

we have 

(A + 3a) + = A + = Z T D - 1 Y T, 

and the second term in 6x be effect 

ztd-2z~a ty2c. 

now suppos 6A be simpli an equival perturb in A caus when A 
multipli a vector v in our test case. use the result of round error analysi 
give by wilkinson [25], 

(A + ~ A ) v - f l (y~f l (dfl (zv))) = (y~ + ~y1)(d + 6d)(z + 6z)v, 

where I[ ~ YI [I = ¢ I[ Y1 [[, and so forth; henc 

6A - 3y~(d + 6 D ) ( Z + 6z) + Y , ( D 6 Z + 6 D ( Z + 6z)). 

use thi 6A in the second term for 6x effect give 

Z T D - I ( I + D - I Z 6 Z T D ) ( I + d-16d) yty2c , 

which be bound abov by about 7 × 10 -6 in norm, rather than 7 a expected. 
thi give a hint of what might be happen above, sinc a more realist 
problem would not admit such a relat between round error and residual. 
thi do not invalid the other numer comparisons, but it do emphas 
the care need when construct artifici test problems. 

8.5 min I l A x - bll: normal behavior 
figur 4 illustr more typic perform of the four methods, use the least- 
squar problem p(80, 40, 4, 6) for which cond(a) = 106. all method reduc 
i]awrk[] to a satisfactori level, and the final error norm be consist with a 
convent sensit analysi of the least-squar problem; in thi case, no 
more than one signific digit can be expected. note that cgl converg more 
slowli than the other methods. It also display rather undesir fluctuat 
in ][ A wrk [I consider beyond the point at which the other method reach 
limit accuracy. 

8.6 some result use greater precis 

algorithm lsqr be also appli to the previou four test problem on an ibm 
370 comput use double-precis arithmetic, for which E = 2.2 × 10 -16. with 
increas precision, lsqr give high accuraci and also requir few step to 
attain thi accuracy. thi be best see by refer to the figures. In figur 1 the 
log of the residu reach -14.4 at the forty-eighth step and stay there; the 
log of the error be then -8.6, but decreas 20 step late to -9.3 and stay 
there. In figur 2 the log of the residu and error be -13.8 and -8.0 at step 
44 and differ neglig from these valu thereafter. In figur 3, logm II A trk II 
-- -14.6 and loglo [[ xh - x [I = -6.0 at k -- 32 and thereafter, while in figur 4, 
loglo H atrk [[ = --13.9 and loglo i[xh - x ][ = -4.6 at k = 36, with littl chang for 
larg k. 

8.7 other result 

algorithm cgl and lsqr have be compar independ by bjsrck [1], 
confirm that on both compat and incompat system lsqr be like to 
acm transact ion on mathemat ica l software, vol 8, No 1, march 1982 



lsqr' An algorithm for spars linear equat and spars least squar 69 

togl011xk-xll 

/ i°gioiiat rkll 

"1 

-1 

A = cgl 
x = R R L S 

o : lsor 
+ = R R L S Q R 

I I I I I t i I i I 

10 20 30 4 0 50 60 70 8 0 9 0 100 
fig. 4. An fl l-condltmn problem, minll A x - b ii, m = 80, n = 40, cond(a) = 106. all m e t h o d s obta in 
a sat isfactori solution, a l though cgl exhibit slow converg and und i rabl f luc tuat ion in 

It atrk ii. 

acm transact on mathemat software, vol. 8, no. 1, march 1982 



70 c.c. palg and M. A. saunder 

obtain more accur solut in few iterations. the differ be not signific 
when A be reason well conditioned, but in extrem case cgl may need up 
to twice a mani iter to obtain compar precis (figur 1-4). 

9. summari 

A direct method may often be prefer to the iter method discuss here; 
for instance, the method give by bjorck and duff [2] and georg and heath 
[7] show great promis for spars least squares. nevertheless, iter method 
will alway retain advantag for certain applications. for example, conjugate- 
gradient method converg extrem quickli if A be of the form M - N where 
M T M ffi I and N have low rank. they also have low storag requir (for both 
code and workspace). 

our aim have be to present the deriv of a new conjugate-gradi 
algorithm, along with detail of it implement and suffici experiment 
evid to suggest that it compar favor with other similar method and 
that it can be reli upon to give satisfactori numer solut to problem of 
practic import (see also [21]). 

reliabl stop criterion be regard here a be essenti to ani iter 
method for solv the problem Ax ffi b and min II A x - b ii. the criterion develop 
for lsqr may be use for other solut methods. estim of II A ]1, cond(a), 
and standard error for x have also be develop to provid use inform 
to the user at minim cost. 

In closing, we make the follow recommendations: 

(1) the symmetr conjugate-gradi algorithm should be appli to the normal 
equat A T A x •- A Wb onli if there be reason to believ that veri few 
iter will produc a satisfactori estim of x. 

(2) the least-squar adapt of symmetr CG will alway be more reliable, 
at the expens of slightli more storag and work per iteration. (thi be the 
algorithm of hesten and stiefel, describ in section 7.1 of thi paper a 
algorithm cgls.) the addit expens be neglig unless m >> n. 

(3) If A be at all ill-conditioned, algorithm lsqr should be more reliabl than 
cgls, again at the expens of more storag and work per iteration. 

acknowledg 

We wish to thank dr. robert davi of the new zealand dsir for hi assist 
and advic on mani aspect of thi work. We be also grate to dr. derek 
woodward of the dsir for the feedback obtain dure hi applic of lsqr 
to the analysi of gravity-met observations, to professor/kk bjorck for hi 
help comment on the manuscript, and to professor gene golub and the 
refere for some addit use suggestions. 

refer 

1. bjorck, ~. use of conjug gradient for solv linear least squar problems. In duff, i.s. 
(ed.), conjugate-gradwnt method and stmilar techntques, rep. aer r-9636, comput 
scienc and system division, aer harwell, england, 1979, 48-71. 

2. bjorck, ~ , and duff, i.s. A direct method for the solut of spars linear least squar 
problems. lmear algebra appl. 34 (1980), 43-67. 

acm transacuon on mathematm software, vol 8, no. 1, march 1982. 



lsqr: An algorithm for spars linear equat and spars least squar • 71 

3. bjorck, A, and elfving, T. acceler project method for comput pseudoinvers 
solut of system of linear equations. re rep. lith-mat-r-1978-5, dep. mathematics, 
linkop univ., linkoping, sweden, 1978. 

4. chen, y.t. iter method for linear least-squar problems. res. rep. cs-75-04, dep. of 
comput science, univ. waterloo, waterloo, ont., canada, 1975. 

5. elfving, T. On the conjug gradient method for solv linear least-squar problems. res. 
rep. l1th-mat-r-1978-3, dep. mathematics, linkop univ., link~ping, sweden, 1978. 

6. faddeev, d.k., and faddeeva, v.n. computatton method of linear algebra, freeman, 
london, 1963. 

7. george, A, and heath, M T. solut of spars linear least squar problem use given 
rotations. linear algebra appl. 34 (1980), 69-83. 

8. golub, g.h. numer method for solv linear least-squar problems. numer. math. 7 
(1965), 206-216. 

9. golub, g.h., and kahan, W. calcul the singular valu and pseudoinvers of a matrix. 
siam J. numer. anal. 2 (1965), 205-224. 

10. hestenes, m.r., and stiefel, E. method of conjug gradient for solv linear system J. 
res. n.b.s. 49 (1952), 409-436. 

11. householder, a.s. termin and non-termin iter for solv linear systems. 
siam J. appl. math. 3 (1955), 67-72. 

12. kennedy, w.j., and gentle, j.e. stattstwal computing. marcel dekker, inc., new york and 
basel, 1980. 

13. lanczos, C. An iter method for the solut of the eigenvalu problem of linear differenti 
and integr operators. J res. n.b.s. 45 (1950), 255-282. 

14. lewis, j.g. algorithm for spars matrix eigenvalu problems. res. rep. stan-cs-77-595, 
stanford univ., stanford, ca, 1977. 

15. nashed, m.z. aspect of gener invers in analysi and regularization. In nashed, m.a. 
(ed.), generahz invers and applwat~ons, academ press, new york, 1976, 193-244. 

16. nelder, j.a. glimmanual. numer algorithm group, 13 banburi road, oxford, england, 
1975 

17. paige, c.c. bidiagonallzatlon of matrix and solut of linear equations. siam J. numer. 
anal. 11 (1974), 197-209. 

18. paige, c.c. error analysi of the lanczo algorithm for tridiagon a symmetr matrix. J. 
inst. maths. appl 18 (1976), 341-349. 

19 paige, c.c., and saunders, m.a. solut of spars indefinit system of equat and least- 
squar problem res. rep. stan-cs-73-399, stanford univ., stanford, ca, 1973. 

20 paige, c.c., and saunders, m.a. solut of spars mdefinit system of linear equations. 
siam J. numer. anal. 12 (1975), 617-629. 

21 paige, c.c., and saunders, m.a. A bidiagon algorithm for spars linear equat 
and least-squar problems. rep. sol 78-19, dep. oper research, stanford univ., stanford, 
ca, 1978. 

22. paige, c.c., and saunders, m.a. lsqr' spars linear equat and least-squar problems. 
acm trans. math. softw., to appear. 

23. stewart, g.w. research, develop and linpack. In rice, j.r. (ed.), mathematw 
softwar iii, academ press, new york, 1977, pp. 1-14. 

24. van heijst, j., jacobs, j., and scherders, J. kleinste-kwadraten problemen. dep. mathe- 
matic rep., eindhoven univers of technology, eindhoven, the netherlands, august 1976 

25. wilkinson, j.h. the algebraw etgenvalu problem. oxford univers press (clarendon), 
new york, 1965. 

receiv june 1980; revis septemb 1981, accept novemb 1981 

acm transactmn on mathemat software, vol. 8, no. 1, march 1982 


