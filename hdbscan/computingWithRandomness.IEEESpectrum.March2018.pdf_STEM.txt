









































1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 0 0 0 1 1 1 1 1 0 0 1 0 1 0 1 0 1 1 0 0 1 0 1 0 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 1 1 1 1 0 0 1 0 1 0 0 1 0 1 0 1 0 0 0 1 0 1 0 0 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 0 1 1 0 1 0 1 1 0 0 1 0 1 0 1 0 1 0 0 0 1 1 0 1 0 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 0 1 1 0 1 0 0 0 0 1 1 1 0 1 1 1 1 1 1 1 0 1 0 0 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 1 0 0 0 1 1 1 0 1 0 0 0 1 1 0 1 1 1 1 0 1 1 1 0 1 0 0 0 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 0 1 0 1 1 1 0 1 0 0 0 0 1 0 0 1 0 0 0 1 1 1 0 1 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 1 0 0 0 1 1 0 1 0 0 0 0 0 1 0 0 0 1 0 1 1 0 1 0 1 1 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 0 0 1 0 1 0 1 1 1 0 1 0 0 1 1 1 1 0 1 1 1 1 1 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 1 1 1 1 0 1 0 0 0 1 1 1 1 1 0 1 1 0 1 0 1 1 1 0 1 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 0 1 1 0 0 1 1 0 1 0 0 0 0 1 0 1 0 1 0 0 0 0 0 1 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 0 1 1 0 0 1 0 1 1 1 0 0 1 0 0 0 0 0 0 1 1 0 0 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
1 0 0 1 0 0 1 0 1 0 1 1 1 0 1 1 0 0 1 0 0 0 1 1 0 0 0 0 1 0 0 0 0 0 1 1 0 0 0 0 0 1 0 0 0 1 0 1 1 0 0 0 1 1 0 1 0 0 0 1 0 0 1 0 0 1 0 1 0 1 1 1 1 1 0 0 0 0 0 0 
0 1 1 0 0 1 1 1 0 0 1 0 1 0 1 1 1 1 1 1 0 1 1 1 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 1 0 1 0 1 0 0 1 0 0 1 1 0 1 0 0 0 0 1 1 0 0 1 1 
1 1 0 0 1 0 0 1 1 0 1 0 1 1 1 0 1 0 1 0 0 1 0 0 0 0 1 0 1 0 0 1 1 0 1 0 0 0 0 0 0 0 0 0 1 0 1 0 0 1 0 0 1 0 0 1 1 0 0 1 0 0 1 0 0 1 0 1 0 0 0 1 1 0 0 1 0 0 1 0 
1 1 1 0 1 0 0 1 1 0 1 1 0 0 1 1 0 0 0 1 0 1 1 1 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 1 1 1 1 1 0 1 0 0 0 1 0 0 0 1 1 1 1 0 0 0 0 0 1 
1 1 1 0 1 0 1 0 0 0 0 0 0 1 1 1 1 1 0 1 1 1 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 1 0 0 1 0 1 0 0 0 1 1 0 0 0 0 0 1 0 1 0 0 1 0 1 0 1 0 0 1 1 1 0 0 0 0 0 1 1 1 1 
0 1 0 1 0 1 0 1 0 0 0 1 1 1 0 1 1 0 0 1 1 1 1 1 1 1 1 1 0 1 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 1 0 1 1 0 1 0 0 0 0 0 1 0 0 0 0 1 1 0 1 
0 0 0 0 1 1 0 0 1 1 1 0 1 0 1 1 1 1 1 0 1 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 1 0 0 0 0 0 0 1 0 1 0 0 1 1 1 0 0 0 1 1 1 0 1 1 1 1 1 1 0 0 0 0 1 0 1 0 
0 0 1 1 1 1 1 0 0 1 0 0 1 1 1 0 1 0 1 1 1 0 0 1 0 0 1 0 1 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 1 1 0 0 0 0 0 1 0 1 0 0 1 1 1 0 1 0 1 1 0 1 0 1 0 1 1 1 1 1 1 0 1 0 0 0 
0 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 1 0 0 0 0 0 1 0 1 0 0 0 0 0 1 0 1 1 0 1 0 0 0 0 0 0 1 0 1 1 
1 1 0 1 1 1 1 1 1 1 1 0 1 1 0 0 0 1 0 1 1 1 1 0 1 0 0 0 0 1 0 1 1 0 1 1 0 0 0 0 1 0 0 0 0 0 0 1 0 0 1 0 1 0 0 1 0 0 1 0 1 0 1 1 0 1 0 0 1 1 1 1 0 1 0 1 1 1 0 1 
0 0 1 0 0 1 1 0 0 0 1 1 1 1 1 0 0 0 1 0 0 0 1 1 0 0 1 1 1 0 0 1 0 0 0 1 0 0 0 0 0 1 0 0 1 1 0 1 0 1 0 0 1 1 0 0 1 1 0 0 0 0 1 0 0 0 1 0 0 1 1 0 0 0 0 0 0 0 1 0 
0 1 0 1 0 0 0 1 1 1 0 0 0 1 1 1 1 1 1 0 1 0 0 1 1 0 1 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 1 1 1 0 0 1 0 1 1 0 0 1 1 1 0 1 1 1 0 0 0 1 
1 0 0 0 1 0 0 0 1 1 1 0 1 1 0 1 1 0 1 1 0 1 0 0 0 1 0 0 1 0 1 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 1 1 0 0 0 0 1 1 1 1 1 0 0 1 0 0 1 0 1 1 
1 1 1 0 1 0 1 1 1 0 1 0 1 0 0 1 1 1 1 1 1 1 1 0 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 1 1 0 0 0 0 0 1 0 1 0 0 0 0 1 0 1 0 1 0 0 1 1 0 1 0 0 0 
0 1 0 1 0 0 1 0 1 0 1 0 0 0 0 0 1 1 0 0 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 1 0 0 0 1 1 0 0 1 0 1 1 1 0 1 0 0 0 0 0 1 0 0 0 1 0 
0 1 0 0 1 0 1 0 0 1 0 1 1 1 0 1 1 1 1 1 1 0 1 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 1 1 0 1 1 1 0 0 0 0 1 1 0 1 0 0 1 0 1 1 1 1 0 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 1 0 0 1 1 0 1 0 0 1 1 1 1 0 0 0 1 0 1 1 0 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 0 0 0 0 0 1 0 1 1 0 0 1 0 0 0 1 1 1 0 0 0 1 1 0 0 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 0 1 1 0 0 0 1 1 1 0 0 0 1 0 1 0 0 1 0 1 0 1 0 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 0 0 0 0 1 0 1 1 0 1 1 0 1 0 1 1 1 0 0 1 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 1 1 0 0 0 0 0 0 1 0 0 1 1 1 0 0 0 0 1 0 1 1 1 0 1 0 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 0 1 0 0 1 0 0 0 0 0 1 0 1 1 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 0 1 0 0 1 0 0 0 1 1 1 0 1 0 1 0 1 0 1 0 1 0 1 1 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 1 0 0 1 0 1 1 1 1 0 0 1 1 1 1 0 0 0 0 0 0 0 0 1 0 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 0 0 1 1 1 1 0 1 1 0 1 1 0 0 1 0 1 0 1 1 0 1 1 1 0 0 1 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 0 1 1 1 0 0 1 1 0 0 1 0 0 1 1 1 1 1 1 1 0 0 1 1 1 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 1 1 0 0 0 0 0 1 0 0 0 1 0 0 0 0 1 1 0 1 0 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 

CO M puti N G 
with 

R A N D O M N E S S 
• • • • • • • 

stochast computing, 
a 50-year-old idea, 

be set for 
a comeback 



1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 0 0 0 1 1 1 1 1 0 0 1 0 1 0 1 0 1 1 0 0 1 0 1 0 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 1 1 1 1 0 0 1 0 1 0 0 1 0 1 0 1 0 0 0 1 0 1 0 0 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 0 1 1 0 1 0 1 1 0 0 1 0 1 0 1 0 1 0 0 0 1 1 0 1 0 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 0 1 1 0 1 0 0 0 0 1 1 1 0 1 1 1 1 1 1 1 0 1 0 0 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 1 0 0 0 1 1 1 0 1 0 0 0 1 1 0 1 1 1 1 0 1 1 1 0 1 0 0 0 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 0 1 0 1 1 1 0 1 0 0 0 0 1 0 0 1 0 0 0 1 1 1 0 1 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 1 0 0 0 1 1 0 1 0 0 0 0 0 1 0 0 0 1 0 1 1 0 1 0 1 1 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 0 0 1 0 1 0 1 1 1 0 1 0 0 1 1 1 1 0 1 1 1 1 1 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 1 1 1 1 0 1 0 0 0 1 1 1 1 1 0 1 1 0 1 0 1 1 1 0 1 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 0 1 1 0 0 1 1 0 1 0 0 0 0 1 0 1 0 1 0 0 0 0 0 1 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 0 1 1 0 0 1 0 1 1 1 0 0 1 0 0 0 0 0 0 1 1 0 0 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
1 0 0 1 0 0 1 0 1 0 1 1 1 0 1 1 0 0 1 0 0 0 1 1 0 0 0 0 1 0 0 0 0 0 1 1 0 0 0 0 0 1 0 0 0 1 0 1 1 0 0 0 1 1 0 1 0 0 0 1 0 0 1 0 0 1 0 1 0 1 1 1 1 1 0 0 0 0 0 0 
0 1 1 0 0 1 1 1 0 0 1 0 1 0 1 1 1 1 1 1 0 1 1 1 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 1 0 1 0 1 0 0 1 0 0 1 1 0 1 0 0 0 0 1 1 0 0 1 1 
1 1 0 0 1 0 0 1 1 0 1 0 1 1 1 0 1 0 1 0 0 1 0 0 0 0 1 0 1 0 0 1 1 0 1 0 0 0 0 0 0 0 0 0 1 0 1 0 0 1 0 0 1 0 0 1 1 0 0 1 0 0 1 0 0 1 0 1 0 0 0 1 1 0 0 1 0 0 1 0 
1 1 1 0 1 0 0 1 1 0 1 1 0 0 1 1 0 0 0 1 0 1 1 1 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 1 1 1 1 1 0 1 0 0 0 1 0 0 0 1 1 1 1 0 0 0 0 0 1 
1 1 1 0 1 0 1 0 0 0 0 0 0 1 1 1 1 1 0 1 1 1 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 1 0 0 1 0 1 0 0 0 1 1 0 0 0 0 0 1 0 1 0 0 1 0 1 0 1 0 0 1 1 1 0 0 0 0 0 1 1 1 1 
0 1 0 1 0 1 0 1 0 0 0 1 1 1 0 1 1 0 0 1 1 1 1 1 1 1 1 1 0 1 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 1 0 1 1 0 1 0 0 0 0 0 1 0 0 0 0 1 1 0 1 
0 0 0 0 1 1 0 0 1 1 1 0 1 0 1 1 1 1 1 0 1 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 1 1 0 0 0 1 0 0 0 0 0 0 1 0 1 0 0 1 1 1 0 0 0 1 1 1 0 1 1 1 1 1 1 0 0 0 0 1 0 1 0 
0 0 1 1 1 1 1 0 0 1 0 0 1 1 1 0 1 0 1 1 1 0 0 1 0 0 1 0 1 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 1 1 0 0 0 0 0 1 0 1 0 0 1 1 1 0 1 0 1 1 0 1 0 1 0 1 1 1 1 1 1 0 1 0 0 0 
0 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 1 0 0 0 0 0 1 0 1 0 0 0 0 0 1 0 1 1 0 1 0 0 0 0 0 0 1 0 1 1 
1 1 0 1 1 1 1 1 1 1 1 0 1 1 0 0 0 1 0 1 1 1 1 0 1 0 0 0 0 1 0 1 1 0 1 1 0 0 0 0 1 0 0 0 0 0 0 1 0 0 1 0 1 0 0 1 0 0 1 0 1 0 1 1 0 1 0 0 1 1 1 1 0 1 0 1 1 1 0 1 
0 0 1 0 0 1 1 0 0 0 1 1 1 1 1 0 0 0 1 0 0 0 1 1 0 0 1 1 1 0 0 1 0 0 0 1 0 0 0 0 0 1 0 0 1 1 0 1 0 1 0 0 1 1 0 0 1 1 0 0 0 0 1 0 0 0 1 0 0 1 1 0 0 0 0 0 0 0 1 0 
0 1 0 1 0 0 0 1 1 1 0 0 0 1 1 1 1 1 1 0 1 0 0 1 1 0 1 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 1 1 1 0 0 1 0 1 1 0 0 1 1 1 0 1 1 1 0 0 0 1 
1 0 0 0 1 0 0 0 1 1 1 0 1 1 0 1 1 0 1 1 0 1 0 0 0 1 0 0 1 0 1 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 1 1 0 0 0 0 1 1 1 1 1 0 0 1 0 0 1 0 1 1 
1 1 1 0 1 0 1 1 1 0 1 0 1 0 0 1 1 1 1 1 1 1 1 0 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 1 0 1 1 0 0 0 0 0 1 0 1 0 0 0 0 1 0 1 0 1 0 0 1 1 0 1 0 0 0 
0 1 0 1 0 0 1 0 1 0 1 0 0 0 0 0 1 1 0 0 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 1 1 0 0 0 1 1 0 0 1 0 1 1 1 0 1 0 0 0 0 0 1 0 0 0 1 0 
0 1 0 0 1 0 1 0 0 1 0 1 1 1 0 1 1 1 1 1 1 0 1 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 1 1 0 1 1 1 0 0 0 0 1 1 0 1 0 0 1 0 1 1 1 1 0 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 1 0 0 1 1 0 1 0 0 1 1 1 1 0 0 0 1 0 1 1 0 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 0 0 0 0 0 1 0 1 1 0 0 1 0 0 0 1 1 1 0 0 0 1 1 0 0 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 0 1 1 0 0 0 1 1 1 0 0 0 1 0 1 0 0 1 0 1 0 1 0 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 0 0 0 0 1 0 1 1 0 1 1 0 1 0 1 1 1 0 0 1 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 1 1 0 0 0 0 0 0 1 0 0 1 1 1 0 0 0 0 1 0 1 1 1 0 1 0 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 0 1 0 0 1 0 0 0 0 0 1 0 1 1 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 0 1 0 0 1 0 0 0 1 1 1 0 1 0 1 0 1 0 1 0 1 0 1 1 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 1 0 0 1 0 1 1 1 1 0 0 1 1 1 1 0 0 0 0 0 0 0 0 1 0 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 0 0 1 1 1 1 0 1 1 0 1 1 0 0 1 0 1 0 1 1 0 1 1 1 0 0 1 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 0 1 1 1 0 0 1 1 0 0 1 0 0 1 1 1 1 1 1 1 0 0 1 1 1 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 1 1 0 0 0 0 0 1 0 0 0 1 0 0 0 0 1 1 0 1 0 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 

spectrum. 
ieee.org 
mar 2018 

47 

By armin alaghi 
& john P. hay 



n electronics, the past half 
centuri have be a steadi 
march away from analog 
and toward digital. tele- 
phony, music record and 
playback, cameras, and radio 
and televis broadcast 
have all follow the lead of 
computing, which have larg 
go digit by the middl of 
the 20th century. yet mani of 
the signal that computers— 
and our brains—process be 
analog. and analog have some 

inher advantages: If an analog signal contain small errors, 
it typic won’t realli matter. nobodi cares, for example, if 
a music note in a record symphoni be a smidgen louder 
or softer than it should actual be. nor be anyon bother 
if a bright area in an imag be ever so slightli lighter than 
reality. human hear and vision aren’t sensit enough 
to regist those subtl differ anyway. 

In mani instances, there’ no fundament need for elec- 
tronic circuitri to first convert such analog quantiti into 
binari number for process in precis and perfectli repeat- 
abl ways. and if you could minim those analog-to-digit 
conversions, you’d save a consider amount of energi 
right there. If you could figur out how to process the ana- 
log signal in an energy-conserv fashion, you’ll be even 
further ahead. thi featur would be especi import 
for situat in which power be veri scarce, such a for bio- 
medic implant intend to restor hear or eyesight. 

yet the benefit of digit over analog be undeniable, 
which be whi you see digit comput so often use to 
process signal with much more exactitude—and use 
much more energy—than be realli required. An interest 
and unconvent compromis be a method call sto- 
chastic computing, which process analog probabl 
by mean of digit circuits. thi larg forgotten tech- 
niqu could significantli improv futur retin implant 

and machine-learn circuits—to give a coupl of applica- 
tion we’v investigated—which be whi we believ stochas- 
tic comput be set for a renaissance. 

• • • • • • • 
stochast comput begin with a counterin- 
tuitiv premise—that you should first convert the num- 
ber you need to process into long stream of random 
binari digit where the probabl of find a 1 in ani 
give posit equal the valu you’r encoding. although 
these long stream be clearli digital, they mimic a key 
aspect of analog numbers: A minor error somewher in 
the bitstream do not significantli affect the outcome. 
and, best of all, perform basic arithmet oper 
on these bitstreams, long though they may be, be simpl 
and highli energi efficient. it’ also worth note that the 
human nervou system transfer inform by mean 
of sequenc of neural impuls that strongli resembl 
these stochast bitstreams. 

consid a basic problem: suppos you’r design a light 
dimmer with two separ controls, each of which output a 
digit valu repres a fraction between 0 and 1. If one 
control be fulli turn on but the other be at, say, 0.5, you want 
the light to be at 50 percent brightness. but if both control 
be set to 0.5, you want the light to run at 25 percent bright- 
ness, and so forth. that is, you want the output to reflect the 
valu of the two control set multipli together. 

you could, of course, achiev thi use a microprocessor 
to carri out the multiplication. what if, instead, the output 
of your two control be transform electron into 
a random seri of 0 or 1 values, where the probabl of a 1 
appear at ani give posit in thi stream of bit encod 
the valu at hand? for example, the number 0.5 can be rep- 
resent by a bitstream in which a 1 appear 50 percent of 
the time, but at random points. elsewher in the stream, the 
bit have a valu of 0. 

whi go through the troubl of convert the number like 
this? becaus basic arithmet oper on such bitstream 
be remark easi to accomplish. 

128 + 0 + 0 + 0 + 8 + 0 + 2 + 1 = 139 

decim 
equival 

convent binari number 
(rang 0 to 255) 

stochast bitstream 
(rang 0 to 1) 

= 2/8 or 0.25 

= 6/8 or 0.75 

decim 
equival 

1 00 0 00 011 00 0 01 11 

1 10 1 01 11 

128 
place 

64 
place 

32 
place 

16 
place 

8 
place 

4 
place 

2 
place 

1 
place 

48 | mar 2018 | spectrum.ieee.org 

I 

BY the numbers: convent binari numbers, just like the decim number in everyday use, reli on the concept of place valu [left]. 
stochast bitstream don’t use place value; the valu they repres be determin by how often 1 appear [right]. 



consid the multipl you need to set the bright 
of the light. one of the rule of probabl theori state 
that the probabl of two independ event occur 
simultan be the product of the probabl of the 
individu events. that just make sense. If you flip a penny, 
the probabl that it will land on head be 50 percent (0.5). 
it’ the same if you flip a dime. and if you flip both a penni 
and a dime at the same time, the probabl that both will 
land on head be the product of the individu probabili- 
ties, 0.5 x 0.5 or 0.25, which be to say 25 percent. becaus 
of thi property, you can multipli two number encod 
into bitstream a probabl remark easily, use 
just an and gate. 

An and gate be a digit circuit with two input and one out- 
put that give a 1 onli if both input be 1. It consist of just 
a few transistor and requir veri littl energi to operate. 

be abl to do multipl with it—rath than, say, pro- 
gram a microprocessor that contain thousand if not 
million of transistors—result in enorm energi savings. 

how about addition? again, suppos we have two bit- 
stream repres two numbers. let’ call the probabili- 
tie of find a 1 at ani give point in those two bitstreams, 
respectively, p1 and p2. If one of these bitstream have a valu 
of 1 in 60 percent of the bit positions, for example, then 
the valu it repres be 0.6. If the other have a valu of 1 
in 90 percent of the positions, the valu it repres be 
0.9. We want to gener a bitstream denot the sum 
of those two values, p1 + p2. rememb that p1 and p2, like 
all probabilities, must alway lie between 0 (someth be 
impossible) and 1 (someth be certain). but p1 + p2 could 
lie anywher between 0 and 2, and anyth great than 
1 can’t be repres a a probabl and thu can’t be 
encod a a bitstream. 

To sidestep thi obstacle, simpli divid the quantiti of 
interest (p1 + p2) by 2. that valu can then be repres by 
a bitstream, one that be easi to compute: each bit in it be just 
a random sampl from the two input bitstreams. half the 
time, a bit sampl from the first input be transfer to the 
output; otherwis a bit from the second input be used, effec- 
tive averag the two inputs. the circuit that accomplish 

thi sampl be again a veri rudimentari one, call a multi- 
plexer. with it, addit becom veri easy. 

similarli simpl circuit can carri out other arithmet 
oper on these bitstreams. In contrast, convent 
digit circuit requir hundr if not thousand of tran- 
sistor to perform arithmetic, depend on the precis 
requir of the results. So stochast comput offer a way 
to do some quit involv mathemat manipul use 
surprisingli littl power. 

• • • • • • • 
engin welcom stochast comput 
when it be first develop in the 1960 becaus it allow 
them to perform complic mathemat function with 
just a few transistor or logic gates, which at the time be 
rather costly. but transistor soon becom much cheaper 

to make, and the attract of stochast comput quickli 
faded, a do solut that involv just analog circuitry. 
the now- common form of digit circuitri take off becaus 
they offer much good speed, performance, and flexibility. 

but an import except to that rule appear in the 
mid-2000s, shortli after a new error-detect and error- 
correct scheme, low-dens pariti check (ldpc), start 
come into widespread use. discov in the 1960s, ldpc 
code be now use everywher in commun systems, 
includ wi-fi networks. decod ldpc code can be a 
tricki business, however. but becaus the decod involv 
probabilist algorithms, it can be implement use rela- 
tive simpl stochast comput circuits. 

the success of stochast circuit in that context, and the 
fact that control power use have now becom one of the 
big challeng face chip designers, prompt u and 
other research to revisit stochast comput sever 
year ago. We want to see what els it could do in the mod- 
ern electron era. 

It turn out there be quit a lot. apart from save power, 
stochast comput also offer a uniqu properti know 
a progress precision. that’ because, with thi technique, 
the precis of the calcul depend on the length of 
the bitstream you use. for example, suppos you’r use 

spectrum.ieee.org | mar 2018 | 49 

(4/8 = 1/2) 

(6/8 = 3/4) 

(3/8)and 
0 01 1 01 01 

0 00 1 01 01 

1 10 1 01 11 

mani time better: use stochast bitstreams, multipl can be carri out with a singl and gate. here two bitstreams, repres 1/2 
and 3/4, provid the inputs. the output have 1 in three of eight positions, mean that it repres a valu of 3/8—the product of the two inputs. 



0110101010010111 to repres the frac- 
tion 9/16 (nine 1 in 16 possibl bit posi- 
tions). with stochast computing, the 
leftmost digit be process first, and all 
bit have equal signific or weight. If 
you look at the first eight bit of thi exam- 
ple, 01101010, you get the number 4/8, 
which be a low- precis estim of the 
valu repres by the longer sequence. 

the circuit that be use to process 
stochast bitstream act a though they 
be comput with the most signific 
digit of the number first. convent 
digit circuits—or paper-and-pencil cal- 
culations—work the other way, from the least to the most sig- 
nific digits. when a normal comput add two binari 
number together, the first bit comput don’t provid ani 
sort of earli approxim of the overal result. 

stochast comput circuits, on the other hand, do exactli 
that: their progressive-precis properti mean that the 
answer be pretti good at the start and tend to get increas- 
ingli precis a more and more bit flow through the circuit. 
So a comput can be end a soon a enough bit have 
emerg in the results, lead to signific energi savings. 

how mani bit be enough? that depend on the application, 
and those that demand high precis will, of course, requir 
longer bitstreams—perhap hundr or even thousand of bits. 

there be limit to the precis you can achiev in practice, 
though. that’ becaus to repres an n-bit binari number, 
stochast comput requir the length of the bitstream to 
be at least 2n. take the case of 8-bit numbers, of which there 
be 256 possibl values. suppos you want to repres the 
probabl 1/256 with a bitstream. you’d need a bitstream that 
be at the veri least 256 bit long—otherwis there wouldn’t be 
a place for a lone 1 in a sea of 0s. similarly, to repres 9-bit 
numbers, you’d need stream of at least 512 bits. for 10-bit 
numbers, the requir would be for 1,024 bits, and so 
on. clearly, the number get larg fast. achiev even what 
be know in comput program circl a singl preci- 
sion (32 bits) would be nearli impossible, becaus it would 
requir stream of billion of bit to be manipulated. 

• • • • • • • 
low IN precis a it is, stochast comput be curi- 
ousli similar to what go on insid our brains. our neural 
pathway encod their signal primarili by the rate or fre- 
quenci of sharp electr puls or “spikes.” when those 
spike be few and far between, the activ of the neural 
pathway be say to be low; when they occur frequently, the 
activ level be high. similarly, when the 1 in a bitstream 
be few and far between, the stream correspond to a low 
number; when they be common, it encod a high number. 

also, stochast comput circuits, like mani biolog sys- 
tems, be resili in the face of mani kind of disturbances. 
if, for example, a sourc of environment nois caus some 

of the binari digit in a bitstream to flip, the number repre- 
sent by that bitstream won’t chang significantly: often 
there will be a mani 1 that chang to 0 a there be 0 
that chang to 1s, so the nois will just averag out over time. 

these similar with biolog system weren’t lose on 
u when we begin our research. and we have them in mind 
when we begin look into an excit new applic for 
stochast computing—process signal in retin implants. 

retin implant be intend to restor sight to peopl 
with sever macular degeneration, retin pigmentosa, and 
other degen diseas of the retina. although use 
electron to restor lose vision be an old idea, the actual 
clinic use of retin implant be less than a decad old, and 
it’ be attempt with compar few patient becaus 
the technolog remain so rudimentary. 

most retin implant captur and process imag outsid 
the eye use a camera and a digit computer. that’ pretti 
clunky. and it give patient an odd sens when they move 
their eye and find that the imag project on their retina 
doesn’t move in the way their brain expect. what you realli 
want, of course, be for the imag sens and process to 
take place insid the eye. one hurdl to accomplish thi be 
that there’ littl power avail insid the eye to oper the 
electronics—th onli power sourc avail be tini induc- 
tive pick-up coil or photovolta cells. and you need rela- 
tive larg amount of power to sens and process imag 
use convent digit circuits. even if a sourc of suffi- 
cient power be available, use it would still be problemat 
becaus excess power dissip can harm eye tissues, 
which can toler onli a few degre of temperatur rise. 

for these reasons, we figur that the simplic and effi- 
cienci of stochast comput could make a big difference. To 
test thi idea, we conduct a littl experiment. We design 
sever stochast image-process circuits, includ one that 
detect edg in images. (edg detect improv contrast, 
make object easi to perceive.) not surprisingly, the sto- 
chastic circuit we design for thi purpos be much simpler 
and more effici in it use of power than the kind of digit 
circuit typic use for edg detection. 

anoth biolog inspir applic of stochast com- 
put be in artifici neural networks, which lie at the heart 

50 | mar 2018 | spectrum.ieee.org 

0 01 1 00 01 0 01 0 00 00 1 00 0 00 10 0 1 

bitstream brains: neural signal resembl bitstream in that frequent spike indic high 
valu of neural activity, just a frequent 1 in a bitstream indic high valu for the number 
that it represents. 



of mani of today’ smart sys- 
tems. We explor thi appli- 
cation recent use an imag 
sensor connect to such a 
neural network, one config- 
ure to recogn digit after 
it have be train to do so— 
mean that it mani adjust- 
abl paramet have be 
set at valu that allow it to 
classifi the imag present 
to it a a specif digit. neu- 
ral network be arrang in 
a seri of layer of artifici 
neurons, where the output of 
one layer serf a the input 
to the next. In our experi- 
ments, we replac the first 
process layer of our net- 
work with stochast circuitry. 

although the stochast cir- 
cuitri sometim give inac- 
curat arithmet results, it do not matter becaus neural 
network can learn to toler such errors. So we just retrain 
our neural network to deal with the stochast errors. In thi 
way, we could reduc the energi use in the first layer of the 
network by a factor of 10, while pretti much preserv the 
origin level of accuraci in digit classification. 

NE OF the thing hold 
stochast comput back have 
be the lack of ani compre- 
hensiv design methodology. 
sure, it’ easi enough to design 
circuit for simpl arithmet 
oper such a multiplica- 
tion and addition, but when the 
target function be more compli- 
cated, engin have long be 
without a good road map. 

A decad ago, weikang qian and marc riedel, of the univer- 
siti of minnesota, devis a novel techniqu to solv thi prob- 
lem. build on their work, we recent discov anoth 
approach to design stochast comput circuits. It begin 
with the observ that a stochast circuit correspond to a 
boolean function. and, or, nand, and nor be all exampl 
of boolean functions. more generally, they be defin a a 
mathemat function that take some number of differ 
input (each of which can be 0 or 1) and produc one output, 
which, depend on the input values, will be 0 or 1. 

suitabl mathemat transform appli to that 
boolean function—on similar to those use to determine, 
for example, the frequenc content of audio signals—rev 
how the stochast circuit will oper on bitstreams, whether 

it will serv a a multiplier, say, or an adder. We found that 
you can go the other way, too. you can start with the desir 
function and perform those mathemat transform 
in revers to deduc the circuit needed. 

base on that observation, we develop a method that 
enabl u to design effici stochast comput circuit 
for imag processing, includ one that could carri out a 
common image-process function call gamma correc- 
tion. (gamma correct be use to account for the insensi- 
tiviti of the human eye to small differ in bright in 
lighter area of an image.) with thi strategy, we be abl 
to design a small (eight gate) circuit that implement the 
gamma-correct function. 

effici a they are, stochast circuit can be make even 
more so when combin with a power-reduct techniqu 
know a voltag scaling. that’ basic a highfalutin way 
of say that you dial the voltag way down to save energi 
at the cost of creat occasion errors. that’ not much of 
a problem for stochast circuits, which can work accept 
well at voltag that would be too low for convent ones. 
for example, the gamma-correct circuit we built can tol- 
erat a voltag reduct up to 40 percent, from 1 volt down 
to 0.6 V, with no loss of accuracy. and unlik convent 
binari circuits, which fail catastroph when the volt- 
age scale be too aggressive, stochast circuit continu to 
operate, albeit with less precision, a the voltag be reduced. 

while our examin of circuit for retin implant and 
neural network make u veri optimist about the pros- 
pect for stochast computing, we still haven’t discov 
the real killer app for thi approach. It may be 50 year old, 
but stochast computing, in our view, be still in it infancy. ■ 

↗ post your comment at https://spectrum.ieee.org/stochastic0318 

spectrum.ieee.org | mar 2018 | 51 

A 
R 

M 
IN 

A 
LA 

G 
H 

I 

alway ON edge: edg detect be commonli use in imag processing. here, an edge- 
detect algorithm that us convent binari number [top row] be compar with one that 
us stochast bitstream [bottom row]. the stochast result hold up much good a the 
bit-error rate be increas from 0.1 percent [far left] to 0.5 percent [middl left] to 1.0 percent 
[middl right] and final to 2.0 percent [far right]. 

O 


