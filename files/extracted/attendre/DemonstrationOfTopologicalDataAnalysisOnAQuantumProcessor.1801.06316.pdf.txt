


















































Demonstration of Topological Data Analysis on a Quantum Processor

He-Liang Huang,1, 2, 3, 4 Xi-Lin Wang,1, 2, 3 Peter P. Rohde,5 Yi-Han Luo,1, 2, 3 You-Wei
Zhao,1, 2, 3 Chang Liu,1, 2, 3 Li Li,1, 2, 3 Nai-Le Liu,1, 2, 3 Chao-Yang Lu,1, 2, 3 and Jian-Wei Pan1, 2, 3

1Hefei National Laboratory for Physical Sciences at Microscale and Department of Modern Physics,
University of Science and Technology of China, Hefei, Anhui 230026, China

2CAS Centre for Excellence and Synergetic Innovation Centre in Quantum Information and Quantum Physics,
University of Science and Technology of China, Hefei, Anhui 230026, China

3CAS-Alibaba Quantum Computing Laboratory, Shanghai 201315, China
4Henan Key Laboratory of Quantum Information and Cryptography, Zhengzhou, Henan 450000, China
5Centre for Quantum Software & Information (QSI), Faculty of Engineering & Information Technology,

University of Technology Sydney, NSW 2007, Australia
(Dated: January 22, 2018)

Topological data analysis offers a robust way to extract useful information from noisy, unstructured data by
identifying its underlying structure. Recently, an efficient quantum algorithm was proposed [Lloyd, Garnerone,
Zanardi, Nat. Commun. 7, 10138 (2016)] for calculating Betti numbers of data points – topological features
that count the number of topological holes of various dimensions in a scatterplot. Here, we implement a proof-
of-principle demonstration of this quantum algorithm by employing a six-photon quantum processor to success-
fully analyze the topological features of Betti numbers of a network including three data points, providing new
insights into data analysis in the era of quantum computing.

In exploratory data analysis and data mining, our data often
encodes extremely valuable information, but is typically large,
unstructured, noisy, and incomplete, such that extracting use-
ful information from the data is an important yet challenging
task. Topological data analysis (TDA) [1] provides a general
framework for studying such data in a manner that is insensi-
tive to the particular metric and robust against noise. In partic-
ular, persistent homology [2, 3] has been well established as
a technique for extracting useful information by identifying
topological features of data. One essential feature is the num-
ber of k-dimensional holes and voids in datasets, that is, the
k-th Betti number βk (a topological invariant). For instance,
the first three Betti numbers, β0, β1 and β2, represent respec-
tively the number of connected components, one-dimensional
holes, and two-dimensional voids. The Betti numbers abstract
away the actual data, reducing it to a purely topological repre-
sentation, which is valuable for understanding the underlying
structure of datasets. The field of using topological data anal-
ysis to analyze Betti numbers of data has been growing rapidly
in recent years, yielding applications in image recognition [4],
signal processing [5], network science [6, 7], sensor analysis
[8–11], brain connectomics [12, 13], and fMRI data analysis
[14, 15], just to name a few.

Practically however, when facing the issue of compu-
tational complexity, classical topological methods pose a
formidable task: a set of n data points possesses 2n potential
subsets that could contribute to the topology, quickly over-
whelming even the most powerful classical computers, even
for not-so-large datasets. So far the best classical algorithm
for estimating Betti numbers to all orders with accuracy δ
takes time O(2nlog(1/δ)) [16–21]. Moreover, exact calcula-
tion of Betti numbers is known to be PSPACE-hard for some
classes of topologies [22].

Recently, Lloyd et al. [23, 24] extended methods from
quantum machine learning to TDA for efficiently estimating
Betti numbers to all orders. Indeed, if the proportion of k-
simplices generated from a dataset is large enough, the quan-

tum algorithm for calculating Betti numbers to all orders with
accuracy δ has runtime O(n5/δ) – exponentially faster than
the best known classical algorithms. Furthermore, the algo-
rithm does not require a large-scale quantum random access
memory (qRAM) [25] – just O(n2) bits is sufficient for the
algorithm to store the information of all pairwise distances be-
tween the n data points. The potential computational speedup
and its practicality will likely make quantum TDA a promis-
ing application for future quantum computers, in addition to
Shor’s algorithm [26–29], quantum simulation [30–33], solv-
ing linear systems [34, 35], and classification of linear vectors
[36–38].

Here we report a proof-of-principle demonstration of the
quantum TDA algorithm on a small-scale photonic quantum
processor for the first time. The topological features of Betti
numbers of three data points are revealed and monitored at
two different topological scales in our experiment. Our exper-
iment successfully demonstrates the viability of the algorithm
and suggests that data analytics may be an important future
application for quantum computing, with widespread applica-
tions in our increasingly data-centric world.

To calculate Betti numbers, we first represent data topolog-
ically in terms of relationships between data points. Using
a cutoff distance �, we group data points into simplices (see
Fig. 1(a))– fully-connected subsets of data points. The set of
simplices forms a simplicial complex, the topological struc-
ture from which features such as Betti numbers can be ex-
tracted. This topological construction is shown in Fig. 1(b-d).

By determining the complete set of Betti numbers over
the full range of �, we can then construct the barcode (see
Fig. 1(e)) [39], a parameterized version of Betti numbers in
a distance-dependent manner. Each bar in the region of Hk
represents a k-dimensional hole, and the length of the bar in-
dicates its persistence in the parameter �. With the barcode, we
can qualitatively filter out the short bars as topological noise
and capture the long bars as significant features, since the
length of bars is indicative of their persistence against changes

ar
X

iv
:1

80
1.

06
31

6v
1 

 [
qu

an
t-

ph
] 

 1
9 

Ja
n 

20
18



2

(a)

(b) ( c) (d)

0-simplex
(vertex)

1-simplex
(edge)

3-simplex
(tetrahedron)

2-simplex
(triangle)

(e)

H0

H1



0 0.5 1.5 2.51 2 3

FIG. 1. (a) k-simplices (shown for k = 0, 1, 2, 3) are fully-connected
sets of k + 1 data points. (b) Scatterplot of data points. (c) Using
some arbitrary metric for quantifying distance � between data points,
data points within � of one another receive an edge between them.
(d) The simplicial complex is formed as the set of simplices. The
colored regions indicate the different simplices within the complex.
(e) Construction of the barcode. The horizontal axis represents the
distance �. The bars are constructed such that the number of bars that
intersect the vertical line through any � in the area of Hk equals the
Betti number βk.

in distance �. In Fig. 1(e), a bar in the region of H1 persists
for a long range, leading us to determine that the underlying
topological feature of the unstructured data (Fig. 1(b)) is a cir-
cle.

In general, the quantum TDA algorithm has two main steps
(see Fig. 2(a)). First, one accesses the data to construct the
uniform mixture of the k-simplices that encode the desired
topological structure. The time of this step is in the worst
case exponential and in fact depends on the proportion of k-
simplices. In cases where this fraction is large enough, this
step can be implemented efficiently either classically, or us-
ing Grover’s algorithm, yielding a further quadratic algorith-
mic enhancement. In the quantum algorithm, this step could
be realized via two small steps, namely: (1a) simplicial com-
plex state preparation; (1b) uniform mixed state construction.
Second, one implements step (2) to reveal the topological
invariants of the structure. This step is realized using the
phase-estimation algorithm [40], which provide an exponen-
tial speedup over known classical procedures on a quantum
computer, in fact [23, 24] showed that this can executed in
time O(n5/δ), with accuracy δ. The steps of the quantum
algorithm are now described in more detail.

Implementing step (1a) constructs the simplicial complex.

Phase 
Estimation 
Algorithm

Mixture
State

Construction
Simplicial 

Complex State
Preparation

Ancilla

Register

(a)

Ancilla |0
A

Register |0
B

Mixture State 
Construction Phase Estimation Measurement

(e)

( c) (d)(b) 3

4 5

  |0
   

  |0

  |0

Simplicial Complex 
State Praparation

21 1 2

3

1 2

33

X

X

H

Step 1 Step 2

FIG. 2. Quantum circuit for quantum TDA. (a) Outline of
the original quantum circuit. (b) A scatterplot including three
data points. (c) Graph representation of the 1-simplices state
|ϕ〉�11 = |110〉 for 3 < �1 < 4. The first and second data points are
connected by an edge. (d) Graph representation of 1-simplices state
|ϕ〉�21 = (|110〉+ |101〉)/

√
2 for 4 < �2 < 5. The first data point is

connected to the second and third points by two edges. (e) Optimized
circuit with 5 qubits. The blocks with different colors represent the
four basic stages.

For a scatterplot including n data points, a k-simplex sk con-
sists of k+1 points Vj0 , Vj1 , . . . , Vjk , together with k(k+1)/2
edges, creating a fully connected subset of the data. We can
encode a k-simplex as an n-qubit quantum state |sk〉 with
k + 1 1s at positions j0, j1, ..., jk and 0s at the other remain-
ing positions.

The Vietoris-Rips simplicial complex S�k is the set of k-
simplices where all points are within distance � of each other.
In the quantum implementation, we can construct the simpli-
cial complex state |ψ〉�k as the uniform superposition of k-
simplices in the complex

|ψ〉�k =
1√
|S�k|

∑
sk∈S�k

|sk〉. (1)

Classically verify whether all points in each of the sk are
within distance � of each other could help us construct the
simplicial complex state. Besides, we can also implement a
multi-target Grover’s algorithm [41] with a membership or-
acle function {f �k(sk) = 1 if sk ∈ S�k} to verify whether
sk ∈ S�k, yielding a quadratic speedup. Let H�k be the Hilbert
space spanned by |sk〉 where sk ∈ S�k. The construction of



3

|ψ〉�k also reveals the number of k-simplices, |S�k| = dimH�k,
and takes time O(n2(ζ�k)

−1/2), where ζ�k = |S�k|/
(
n
k+1

)
is the

proportion of k-simplices that are actually in this complex at
scale �, and (ζ�k)

−1/2 = (|S�k|/
(
n
k+1

)
)−1/2 is the number of

iterations of the multi-target Grover’s algorithm. When the
proportion is too small, the quantum search procedure will
fail to find the simplices [23, 24].

In step (1b), we construct the mixed state,

ρ�k =
1

|S�k|
∑
sk∈S�k

|sk〉〈sk|, (2)

the uniform mixture over the set of simplices in the complex.
This procedure can be easily realized by adding an n-qubit
ancillary register, performing controlled-NOT (CNOT) oper-
ations to copy |ψ〉�k to construct 1√|S�k|

∑
sk∈S�k

|sk〉 ⊗ |sk〉, and

finally tracing out the ancillary register to obtain ρ�k.
Step (2) acta on the simplicial complex to reveal topological

features – the core of exponential speedup in the algorithm.
Define the boundary map ∂�k that operates from H

�
k to H

�
k−1

by,

∂�k|sk〉 =
∑
l

(−1)l|sk−1(l)〉, (3)

where |sk−1(l)〉 is obtained from sk with vertices j0...jl...jk
by omitting the l-th point jl from sk. The k-th Betti number
is defined as [17–20],

β�k = dim(Ker ∂
�
k/Im ∂

�
k+1). (4)

Classical algorithms for calculating Betti numbers to all or-
ders with accuracy δ require time O(2nlog(1/δ)) [16–21]. In
quantum TDA, an exponential speedup is achieved by em-
ploying the phase-estimation algorithm. For this purpose, the
boundary map is embedded into a Hermitian matrix,

B�k =

(
0 ∂�k
∂�k
† 0

)
. (5)

Now applying phase-estimation to decompose ρ�k in terms
of the eigenvectors and eigenvalues of B�k, one obtains the
probability η�k of projecting onto the kernel by measuring the
eigenvalue register. Then the dimension of the kernel of ∂�k
can be calculated as dim(Ker ∂�k) = η

�
k · |S�k|. When both

dim(Ker ∂�k) and dim(Ker ∂
�
k+1) are determined, we can re-

construct the k-th Betti number by,

β�k =dim(Ker ∂
�
k)− dim(Im ∂�k+1)

=dim(Ker ∂�k) + dim(Ker ∂
�
k+1)− |S�k+1|. (6)

We note that for some special cases for ∂�k, it is trivial to
calculate dim(Ker ∂�k). For example, if a k-simplex does not
exist, dim(Ker ∂�k) = |S�k| = 0, while dim(Ker ∂0) is always
equal to the number of points.

Careful evaluation indicates that step (2) can estimate Betti
numbers to all orders with accuracy δ in time O(n5/δ)
[23, 24]. Hence, while in the worst case that their proportion

is too small, step (1) will fail to find the k-simplices, since
both the classical and quantum algorithm will take exponen-
tial time. There are specific cases, in particular where step
(1) can be implemented efficiently, where the overall quan-
tum algorithm can provide exponential savings. In fact we
have tested a particular case using data-points with random
distances between them and showed that indeed step (1) can
be implemented efficiently (see Supplement 1 for details), ei-
ther by a classical algorithm or further improving the time by
a square root factor through Grover’s algorithm.

To experimentally demonstrate the quantum TDA algo-
rithm, we choose the simplest meaningful instance: estimat-
ing the Betti numbers for three data points at two different
scales. Assume the distances between the three points are 3,
4 and 5 (see Fig. 2(b)). For scales in the ranges 3 < �1 < 4
and 4 < �2 < 5, the corresponding states for 1-simplices (the
k-simplex for k > 1 doesn’t exist since not all three data
points can be connected at �1 and �2) are |ϕ〉�11 = |110〉
(Fig. 2(c)) and |ϕ〉�21 = (|110〉+ |101〉)/

√
2 (Fig. 2(d)) re-

spectively, which means |S�11 | = 1 and |S
�2
1 | = 2. A simple

quantum circuit is designed to prepare |ϕ〉�11 (|ϕ〉
�2
1 ) directly

by removing (adding) a Hadamard gate marked by dashed
lines at step (1) in Fig. 2(e).

To construct the corresponding uniform mixed states, we
don’t actually need to generate a complete copy of |ϕ〉�11
(|ϕ〉�21 ). Instead, we need only perform a CNOT operation be-
tween the auxiliary qubit |0〉A and the second qubit of |ϕ〉�11
(|ϕ〉�21 ) to partially copy the state of simplices. After tracing
out the ancillary qubit, the uniform mixed states ρ�1 and ρ�2
are obtained.

Next, apply quantum phase-estimation to reveal informa-
tion related to Betti numbers. Since there are only three data
points, k-dimensional holes for k > 1 can not exist. There-
fore, only the 0-th and 1-st Betti numbers need to be calcu-
lated. We note that the algorithm cares not about the exact
eigenvalue spectrum, but the probability of detecting |0〉 in the
eigenvalue register. We can exploit this property to reduce the
number of qubits required in the eigenvalue register. A par-
ticular treatment for boundary matrices is utilized to greatly
simplify the complex circuit (see Supplement 1 for details)
– a single CNOT operation between the eigenvalue register
comprising only one qubit |0〉B and the first bit of ρ�1 (ρ�2 )
is sufficient for realizing phase-estimation. Finally, the infor-
mation related to Betti numbers will be read out by measuring
the eigenvalue register. Note that since the quantum TDA al-
gorithm only depends on how the points are connected, not
the precise distances between points, our circuit works for all
nontrivial cases of three points (where one, or two edges are
present). The cases where zero or three edges are present are
trivial, since we could clearly know the Betti numbers in the
cases that the N points are all disconnected (β0 = N , and
βk = 0 for k > 0) or all connected (β0 = 1, and βk = 0 for
k > 0) for N points without calculating.

Fig. 3 shows the setup of our experiment. We use single
photons as qubits, where the logical qubits |0〉 and |1〉 are en-
coded into horizontal (H) and vertical (V ) polarization, re-
spectively. With these settings, the step of simplices state
preparation becomes straightforward. |ϕ〉�11 = |V 〉3|V 〉2|H〉1



4

 1
 2

 3
 4

 5

 6

C-BBO Prism QWP HWP POL

FilterSC-YVO4TC-YVO4LensPBS

FIG. 3. Experimental setup. Ultraviolet laser pulses with a central wavelength of 394 nm, pulse duration of 150 fs, and repetition rate of 80 MHz
pass through three HWP-sandwiched β-barium borate (BBO) crystals [42] to produce three entangled photon pairs (|H〉|V 〉+ |V 〉|H〉) /

√
2

(see Supplement 1 for details) in spatial modes 1-2, 3-4 and 5-6. Photons 2(3) and 4(5) are temporally and spatially superposed on a PBS. All
photons are spectrally filtered with 3-nm bandwidth filters. C-BBO: sandwich-like BBO+HWP+BBO combination; QWP: quarter-wave plate;
POL: polarizer; SC-YVO4: YVO4 crystal for spatial compensation; TC-YVO4: YVO4 crystal for temporal compensation.

and |ϕ〉�21 = (|V 〉3|V 〉2|H〉1 + |V 〉3|H〉2|V 〉1)/
√
2 can be

prepared directly by adding or removing the polarizer in path
2 respectively, where the index i in |H(orV )〉i denotes the
spatial mode. Photons 4 (ancilla) and 5 (eigenvalue register)
are both disentangled by polarizers into |H〉, and then pho-
tons 3 and 6 (trigger) immediately collapse into |V 〉. Note
that the CNOT gates can be simulated using combinations of
a polarizing beam splitter (PBS) and a half-wave plate (HWP)
[27], since the target qubits are fixed at |H〉. This setup, in
principle, suffices to demonstrate the underlying conceptual
principles of quantum TDA.

Before running the algorithm, we first characterized
the performance of the optical quantum circuit. In
the case of 4 < �2 < 5, a three-photon entangled state
|φ〉 = (|H〉1|V 〉2|V 〉4 + |V 〉1|H〉2|H〉4)/

√
2 is generated af-

ter implementing the CNOT gate in step (1a). We mea-
sured the fidelity of the experimentally prepared state (see
Supplement 1 for details) as F = 0.954(6), which exceeds
the threshold of 0.5 for the entanglement witness to confirm
genuine multi-partite entanglement [43]. To the best of our
knowledge, such a high fidelity for three photon entanglement
has never been achieved before [44].

After tracing out the ancilla in the Pauli-Z basis, the uni-
form mixed states,

ρ�1 = |V 〉3|V 〉2|H〉1〈V |3〈V |2〈H|1,
ρ�2 = (|V 〉3|V 〉2|H〉1〈V |3〈V |2〈H|1

+ |V 〉3|H〉2|V 〉1〈V |3〈H|2〈V |1)/2, (7)

are created at the scales of 3 < �1 < 4 and 4 < �2 < 5, re-
spectively. We characterized these states using quantum state
tomography to reconstruct the density matrices. (See Supple-
ment 1 for details). The fidelity Fp = (Tr

√
ρ1/2ρexpρ1/2)

2

and trace distance D(ρ, ρexp) = Tr|ρ− ρexp|/2 between

the reconstructed (ρexp) and ideal (ρ) matrices were
calculated as F ρ

�1

p = 0.9817(9), F
ρ�2
p = 0.9819(10) and

Dρ�1 = 0.0183(5), Dρ�2 = 0.0181(5) respectively. Further-
more, The fidelity Fp and trace distance D are related by
the inequality 1−

√
Fp ≤ D ≤

√
1− Fp [40]. In our ex-

periment, both Dρ�1 and Dρ�2 are located in the range of
0.009 ≤ D ≤ 0.135, and close to the lower bound.

The final results were read out via 6-fold coincidence
events. Figures. 4(a,b) show the measurement results of
the eigenvalue register at the scales of 3 < �1 < 4 and
4 < �2 < 5, respectively. In the case of 3 < �1 < 4, with a
probability of η�11 = 0.045(14) we measure |0〉 in the eigen-
value register, from which we calculate the dimension of
the kernel space as dim(Ker ∂�11 ) = η

�1
1 · |S

�1
1 | = 0.045(14).

Since dim(Ker ∂�0) = 3 and dim(Ker ∂
�
2) = |S�2| = 0 for

� = �1 (or �2), we finally obtain the 0-th Betti number
β�10 = 2.045(14) and 1-st Betti number β

�1
1 = 0.045(14), fol-

lowing Eq. 4, which can be rounded to β�10 = 2 and β
�1
1 = 0.

In the case of 4 < �2 < 5, the probability of measuring |0〉
in the eigenvalue register is 0.038(9). Using the same ap-
proach, we calculate the 0-th and 1-st Betti numbers as
β�20 = 1.076(18) and β

�2
1 = 0.038(9), respectively, which can

be rounded to β�20 = 1 and β
�2
1 = 0. That is to say, we have

revealed and tracked the topological features of the dataset
in Fig. 2(b) at two different scales: the number of connected
components at scales of �1 and �2 are 2 and 1, respectively,
and no k-dimensional holes for k > 1 exist. From these re-
sults, the barcode is constructed as shown in Fig. 4(c).

To further quantify the experimental performance, we use

the similarity measure γ =
(∑1

k=0

√
ektk

)2
[45] to char-

acterize the overlap between experimental and theoretical
values, where ek and tk are the experimental and theoret-
ical output probabilities of the state |k〉, respectively. The



5

H0

0 3 4 5

|1 |0
0.0

0.5

1.0
D

e
te

c
tio

n
 P

ro
b
a
b
ili

ty

|1 |0
0.0

0.5

1.0

D
e
te

c
tio

n
 P

ro
b
a
b
ili

ty

(a) (b)

( c)



 Theory Theory
 Experiment

 Theory Theory
 Experiment

FIG. 4. Final experimental results. The output is determined by
measuring the eigenvalue register in the Pauli-Z basis. Measured
expectation values (blue bars) and theoretically predicted values
(gray bars) are shown for two different 1-simplices state inputs: (a)
|ϕ〉�11 = |110〉, (b) |ϕ〉

�2
1 = (|110〉+ |101〉)/

√
2. Error bars repre-

sent one standard deviation, deduced from propagated Poissonian
counting statistics of the raw detection events. (c) The barcode for
0 < � < 5. Since no k-dimensional holes for k ≥ 1 exist at these
scales, only the 0-th Betti barcode is given here. For 0 < � < 3,
there is no connection between each point, so the 0-th Betti num-
ber is equal to the number of points. That is, there are three bars at
0 < � < 3. At scales of 3 < �1 < 4 and 4 < �2 < 5 , the 0-th Betti
number are 2 and 1.

data in Fig. 4 shows the results as γ�1 = 0.955(3) and
γ�2 = 0.962(2), indicating near perfect experimental accu-
racy, confirming that the algorithm is successful.

We note that for the quantum TDA algorithm, the results are
read out by measuring the eigenvalues. In general, the eigen-
value register requires only a few qubits for the quantum TDA
algorithm (1 qubit in the current work), since we only care
about the proportion of |0〉 in the eigenvalue register, rather
than the exact value of all eigenvalues. Thus, a small amount
of measurements are sufficient for obtaining reliable results,
an important feature for the scalability of the algorithm.

In addition, theoretically, for the quantum TDA algorithm,
only the qubits in the eigenvalue register need to be measured,
rather than having to measure all qubits. In our experiment,
since the photons generated by spontaneous parametric down
conversion are probabilistic, to ensure that all qubits in the cir-
cuit have been generated, and the quantum circuits have been
fully implemented, we need to measure 6-fold coincidence
events. In fact, this is a common problem encountered in the
current linear optical quantum computing. Fortunately, with
the development of deterministic quantum dot single photon
source [46], and other techniques [47], we believe this prob-

lem can eventually be overcome. We anticipate that with more
qubits (more photons [42, 48] or higher dimensional states
[49, 50]), our proposal could be extended to the analysis of
much larger datasets in the future.

In summary, we have presented the first proof-of-principle
demonstration of quantum TDA on a small-scale photonic
quantum processor. The topological features of a dataset com-
prising three data points is revealed and tracked at two differ-
ent topological scales, fully reproducing the Betti numbers as-
sociated with the topology of the data. Future advances in the
field could open up new frontiers in data analysis for quantum
computing, including signal and image analysis, astronomy,
network and social media analysis, behavioral dynamics, bio-
physics, oncology and neuroscience.

Acknowledgements: We thank R.-Z. Liu, Michele
Cirafici, T. L. for enlightening discussions. This work was
supported by the National Natural Science Foundation of
China, the Chinese Academy of Sciences, and the National
Fundamental Research Program. P.P.R. is funded by an ARC
Future Fellowship (project FT160100397).

See Supplement 1 for supporting content.

SUPPLEMENTAL MATERIAL

I. BACKGROUND AND PRACTICAL APPLICATIONS OF
BETTI NUMBER AND TDA

 

 

(a) (b)

( c)

 =1, =1, =00 1 2  =1, =0, =1, =00 1 2 3

 =1, =10 1  =1, =20 1

FIG. 5. Several examples for the explanation of Betti numbers,
demonstrating their ability to capture structural information even in
the presence of local deformations.

Betti numbers are a way to describe the connectivity within
a topological space. In simplest terms, the k-th Betti number
βk counts the the number of k-dimensional holes in a topo-
logical space, for example,

- β0 is the number of connected components;
- β1 is the number of planar holes (1-dimensional holes);
- β2 is the number of two-dimensional voids (2-dimensional

holes);
- ...
Betti numbers are topological invariants. If two Betti num-

bers are the same for two different spaces then the spaces are
homotopy equivalent [1]. To demonstrate Betti numbers more



6

vividly, some examples are shown in Fig. 5. We can see that
a circle has a connected component, a 1-dimensional holes,
thus β0 = 1, β1 = 1. The Betti numbers of circle are the
same as a triangle, so they are are homotopy equivalent (see
Fig. 5(a)); Similarly, the two-dimensional hollow sphere is
homotopy equivalent to a hollow tetrahedron (see Fig. 5(b)).
Thus, Betti numbers can record significant topological fea-
tures of a shape, which could be directly used in pattern recog-
nition [51], anomaly detection [52], computational linguistics
[53]. For instance, considering a simple shape recognition
task, namely the recognition of printed letters, by using the
Betti numbers, we could identify and distinguish the letters
“A” and “B” in Fig. 5(c), even in the presence of some defor-
mation.

Now, we briefly introduce some mathematical background
for Betti numbers. For more details, one can refer to [54].

We first describe how to use a simplicial complex to for-
mally describe a topological structure.

Simplex: A k-simplex σk = [Vj0 , · · · , Vjk ] is a fully con-
nected set of k + 1 affine geometric points Vj0 , · · · , Vjk , to-
gether with k(k+1)/2 edges (see Fig 1(a) for some example).
where k is the dimension of the simplex.

Simplicial complex: Roughly speaking, a simplicial com-
plex K is a finite set simplices (see Fig. 1(d) for an example)
such that:
i) any face of a simplex of K is a simplex of K,
ii) the intersection of any two simplices of K is either

empty or a common face of both.
Next, we will introduce the chain group, boundary operator,

cycle group and boundary group, and then how to calculate the
Betti numbers.
k-chain group: A k-chain is a formal sum of k-simplices

with integer coefficients, which can be written as c =
p∑
i=1

εiσi

with εi ∈ Z2, where {σ1, · · · , σp} is the set of k-simplices of
K. The set of all k-chains forms an Abelian group Ck(K).
k-boundary operator: For a k-simplex σk =

[Vj0 , · · · , Vjk ], the boundary map ∂k : Ck(K) → Ck−1(K)
is given by

∂k(σ) =
k∑
i=0

(−1)i[Vj0 , · · · , V̂ji , · · · , Vjk ]

where V̂ji indicates that Vji is removed, and
[Vj0 , · · · , V̂ji , · · · , Vjk ] is the k − 1-simplex spanned by
all the vertices except Vji .
k-boundary group and k-cycle group: The k-boundary

group is defined as Bk(K) = Im ∂k+1 = {c ∈ Ck(K)|∃c′ ∈
Ck+1(K), ∂k+1(c

′) = c}, containing elements that are
boundaries of k + 1-dimensional objects; The k-cycle group
is defined as Zk(K) = Ker ∂k = {c ∈ Ck(K)|∂kc = 0}, the
elements in the cycle group can be understood as ‘loops’. It
can be proved that Bk(K) ⊆ Zk(K) ⊆ Ck(K).

Homology group: Let K be an k-dimensional simplicial
complex. The kth homology group Hk(K) associated with
K is defined by Hk(K) ≡ Zk(K)/Bk(K), which represents
those elements of Zk(K) (loops) that are not boundaries.

Betti numbers: The k-th Betti number βk is defined by
βk(K) ≡ dim Hk(K) = dim(Ker ∂k/Im ∂k+1).

Using Betti numbers, we can detect invisible geometric fea-
tures of high-dimensional objects. Applying Betti numbers to
data analysis could help us analyze and exploit the complex
topological and geometric structures underlying data. Next,
we will introduce how to use persist homology, a sophisticated
topological data analysis method, to extract useful informa-
tion by identifying the topological features (Betti numbers) of
data.

From points to simplicial complex: In data analysis, data is
usually represented as an unordered sequence of points (see
Fig. 1(b)), to analyze the Betti numbers of data, requiring a
method to construct a simplicial complex.

To define a simplicial complex, the most obvious way is to
use the points as the vertices of a combinatorial graph whose
edges are determined by proximity. Using a cutoff distance �,
and connecting points within distance � (see Fig 1. (b-d) for
the procedure), we can construct the simplicial complex (see
Fig 1. (d)), called a Vietoris-Rips simplicial complex.

Computing Betti numbers: Having constructed the simpli-
cial complex of data points, we use the method above to cal-
culate Betti numbers, finding the topological structure of the
data points.

Barcode: Converting data points into a simplicial complex
requires a choice of parameter – cutoff distance �. However,
if � is too small, almost all points are separated, and no over-
all structure is apparent; if � is too large, all the points may
be connected with each other, the complex is a single high di-
mensional simplex, and no topological holes exist. It is chal-
lenging to select an appropriate scale for a given dataset. To
address this problem, we observe the evolution of topologi-
cal features for the full range of �, rather than focussing on a
particular numeric value, yielding the barcode (see Fig. 1(e)).
Each bar in the region of Hk of the barcode represents a k-
dimensional hole, the length of which indicates its persistence
in the parameter �. With the barcode, we can qualitatively fil-
ter out the short bars as topological noise and capture the long
bars as significant, persistent topological features, since the
length of bars is indicative of their persistence against changes
in distance �. For further details, refer to [55].

There are many interesting and useful applications of topo-
logical data analysis. For instance, in the field of image recog-
nition, Carlsson et al. found that high-contrast 3×3 pixel
patches from grayscale digital images concentrate near the
surface of a Klein bottle in a higher-dimensional space [4];
in the field of signal processing, Perea and Harer found that
persistent homology can detect periodicity in time-series data
preventing noise [5], which is very stable and accurate espe-
cially in the presence of damping; in unsupervised machine
learning, persistent homology also provides a powerful tool
for the analysis of musical data, exploring common features
of classical scores [56].



7

II. NUMERICAL SIMULATION OF THE PROPORTION
OF k-SIMPLICES IN SOME CASES

As mentioned in the main text, the efficiency of step (1) de-
pends on the proportion of k-simplices. Here, we studied the
relationship among the proportion of k-simplices, the number
of data point n, the dimension k of the k-simplices, and cutoff
distance � by numerical simulation (see Fig. 6).

In our simulations, without loss of generality, we randomly
set the distances between different points in the range of [0,1].
In Fig. 6(a), we take k = 4 as an example to simulate the rela-
tionship among the proportion of k-simplices, the number of
data points n and cutoff distance �. Since the computational
complexity of step (1) in quantum TDA is O(n2(ζ�k)

−1/2),
and the computational complexity of step (2) is O(n5/δ),
where δ is the accuracy, we could regard step (1) as efficient
in quantum TDA if n2(ζ�k)

−1/2 ≤ n5/δ, that is ζ�k ≥ n−6. In
Fig. 6(a), the blue area represents ζ�k < n

−6, and the green
area represents ζ�k ≥ n−6. We can see that, as n increases,
the the green area becomes larger and the blue area becomes
smaller. Thus, with the increase of n, the step (1) is efficient
at a wider range of cutoff distance �.

In Fig. 6(b), we take n = 25 as an example to simulate
the relationship between the proportion of k-simplices, their
dimension k, and the cutoff distance �. It is clear that the
proportion of k-simplices becomes smaller gradually at each
cutoff distance � as k becomes larger. Similar to Fig. 6(a),
we let the blue area represent ζ�k < n

−6, and the green area
represent ζ�k ≥ n−6, yielding Fig. 6(c). We can see that even
when k = 12 and

(
n
k+1

)
reaches the maximum

(
25
12

)
, the green

area can still encompass over 50% of the region. Obviously,
by analyzing all three figures in Fig. 6, the regime of step (1)
that can be regarded as efficient is much larger than than that
regarded as inefficient. That is, step (1) can be implemented
efficiently in the cases of our numerical simulations.

III. EXPERIMENTAL ERRORS ANALYSIS

In this section, we will analyze errors introduced by exper-
imental noise and provide an error threshold analysis.

The imperfections in our experiment can be attributed to
two major causes: higher-order photon emissions, and par-
tial distinguishability of independent photons. In order to
suppress the influence of higher-order photon emissions, we
placed two single-photon detectors at each measurement port.
This dual-channel setup can partially suppress higher-order
events where both detectors trigger simultaneously at one
measurement port, indicating the presence of multiple pho-
tons. To ensure the high levels of indistinguishability between
independent photons, all photons are spectrally filtered by 3-
nm narrow-band filters.

The final result of the quantum TDA algorithm is decided
by the probability of the zero eigenvalue measured in the
eigenvalue register. Assume the ideal probability of measur-
ing the zero eigenvalue is ηi, then the dimension of the kernel
of ∂�k could be calculated as dim(Ker∂

�
k) = ηi · |Sk|. To

obtain the correct dimension in the experiment, we need to

10

20

100

90

80

70

60

50

40

30

0 10.90.80.70.60.50.40.30.20.1

0 10.90.80.70.60.50.40.30.20.1

10

9

8

7

6

5

4

3

11

12

0

1

0.9

0.8

0.7

0.6

0.5

0.4

0.3

0.2

0.1

0 10.90.80.70.60.50.40.30.20.1

10

9

8

7

6

5

4

3

11

12

(a)

( c)

(b)

6n

6n

625

625

n

k

k

�

�

�

FIG. 6. The proportion of k-simplices in our numerical simulations.
(a) Let k = 4, the relationship among the proportion of k-simplices
ζ�k, the number of data point n (y axis) and cutoff distance � (x axis).
The blue area represents ζ�k < n

−6, the green area represents ζ�k ≥
n−6. (b) Let n = 25, the relationship among the proportion of k-
simplices, the dimension k of the k-simplices and cutoff distance �.
(c) Let the blue area represent ζ�k < n

−6 in (b), and the green area
represent ζ�k ≥ n−6 in (b). It is clear that the green area is far larger
than the blue area.



8

ensure that |dim(Ker∂�k)ideal − dim(Ker∂�k)experiment| <
0.5, that is |ηe − ηi| · |Sk| < 0.5 if we use the rounding
principle, where ηe is the probability of the experimentally
measured zero eigenvalue. To quantify the experimental error
threshold, we define the error as Et = |ηe−ηi|, and then sim-
ulate the error threshold that satisfies the constraint condition
|ηe−ηi| · |Sk| < 0.5. The relationship between the number of
k-simplices |Sk| (x axis) and error threshold (y axis) is shown
in Fig. 7. Obviously, as |Sk| increases, the error threshold de-
creases. Thus, appropriate fault-tolerance mechanisms should
be employed when we deal with large-scale dataset.

Note that unlike the the previous quantum algorithm, the
quantum TDA algorithm only cares about the probability of
the zero eigenvalue, not all the individual values in the eigen-
value register. Thus, the quantum TDA algorithm, in princi-
ple, could be more robust to noise than other algorithms, such
as Shor’s algorithm [26] and the HHL algorithm[34], which
require an exact quantum state as output.

10 20 30 40 50 60 70 80 90 100

0.00

0.01

0.02

0.03

0.04

0.05

E
rr

o
r 

th
re

sh
o

ld

Number of k-simplices

 Error threshold

FIG. 7. The relationship between the number of k-simplices |Sk| (x
axis) and error threshold Et (y axis). Obviously, as |Sk| increases,
the error threshold Et decreases.

IV. NECESSITY OF CONSTRUCTING THE MIXED STATE

In the quantum TDA algorithm, step (1) is used to construct
the uniform mixture of the k-simplices, which is realized by:
(1a) simplicial complex state preparation; (1b) uniform mixed
state construction. In fact, the purpose of step (1) is to sample
a uniform k-simplex, which is the essential reason for con-
structing mixed state.

Next, we will provide the reason why the quantum TDA al-
gorithm can not directly use the pure state generated in step
(1a) as the input of step (2). In step (2), we use quantum
phase-estimation algorithm to decompose a mixed state in
terms of the eigenvectors of the Hermitian matrix Bk, which
acts on the space H�k−1 ⊕H�k, and find the probability of the
zero eigenvalue to compute the dimension of the kernel of ∂�k.

The mixed state is

ρ�k =
1

|S�k|
∑
sk∈S�k

|sk〉〈sk|.

where each k-simplices |sk〉 is the basis, and ρ�k is a maxi-
mally mixed state. According to quantum mechanics, even
using another complete basis set, the maximally mixed state
ρ�k is still of the above form. Thus, ρ

�
k could be rewritteb as

the eigenstate set {|nk〉} of ∂�k

ρ�k =
1

|S�k|

|S�k|∑
i=1

|ni〉〈ni|.

Introduce qubits |0〉t as the eigenvalue register, after the
phase-estimation algorithm,

|0〉tρ�k
phase−estimation−−−−−−−−−−−→ 1

|S�k|

|S�k|∑
i=1

|λi〉|ni〉〈ni|〈λi|.

For each eigenstate |ni〉, the eigenvalue register will output
its corresponding eigenvalue |λi〉. Thus, The probability of
measuring the zero eigenvalue in the register is N �k(0)/|S�k|,
where N �k(0) is the number of eigenstates in {|nk〉} whose
eigenvalue is zero, that is, the dimension of the kernel of ∂�k.
However, if we directly used the pure state generated in step
(1a) as the input to step (2), after we decompose the pure state
in terms of the eigenvectors of the Hermitian matrix Bk, the
probability of the zero eigenvalue in the register will be mean-
ingless due to interference effects. For ease of understanding,
we will give an example to show that using the pure state as
the input of step (2) will output wrong results.

For the topological structure in Fig. 8, the 1-simplices are
|110000〉, |011000〉, |001100〉, |100100〉, |100010〉, |000011〉,
|010001〉, which are denoted as |a〉, |b〉, |c〉, |d〉, |e〉, |f〉, |g〉
respectively. The 0-simplices are |100000〉, |010000〉,
|001000〉, |000100〉, |000010〉, |000001〉, which are denoted
as |1〉, |2〉, |3〉, |4〉, |5〉, |6〉 respectively. The Hermitian
operator B1 is

B1 =

(
O ∂1
∂†1 O

)
. (8)

where

∂1 =



|a〉 |b〉 |c〉 |d〉 |e〉 |f〉 |g〉
|1〉 1 0 0 −1 1 0 0
|2〉 −1 1 0 0 0 0 −1
|3〉 0 −1 1 0 0 0 0
|4〉 0 0 −1 1 0 0 0
|5〉 0 0 0 0 −1 1 0
|6〉 0 0 0 0 0 −1 1

, (9)

There are only two eigenstates of the Hermitian matrix B1
whose eigenvalue is zero:
|n1〉 = 1/2 (|a〉 − |e〉 − |f〉 − |g〉),

|n2〉 = 1/
√
60 (3|a〉+ 4|b〉+ 4|c〉+ 4|d〉+ |e〉+ |f〉+ |g〉).



9

Therefore, after the phase-estimation algorithm, the proba-
bility of measuring the eigenvalue of zero in eigenvalue regis-
ter should be 2/7. However, if we use the the pure state,

|ψ〉 = 1/
√
7 (|a〉+ |b〉+ |c〉+ |d〉+ |e〉+ |f〉+ |g〉)

phase−estimation−−−−−−−−−−−→ − 1√
7
|n1〉|0〉+

18√
420
|n2〉|0〉+ · · · ,

Obviously, the probability of measuring the eigenvalue of zero

is
(
− 1√

7

)2
+
(

18√
420

)2
= 3235 , which is inconsistent with the

expectation 2/7. By this counterexample, we can see that the
algorithm can not use pure state generated in step (1a) as the
input to step (2).

1

2

4

3

5

6

FIG. 8. A topological structure of six points, the points are connected
by 7 edges.

V. CIRCUIT DETAILS

To implement the algorithm with a limited number of
qubits, our designed circuit differs from the original algo-
rithm via several modifications, some of which have already
been mentioned in the main text. Here we show the details
of the modifications to phase-estimation, the core of the quan-
tum TDA algorithm. Before introducing the modification, we
provide two preliminaries:

(i) Let U be an arbitrary unitary operator, the eigenvec-
tor and eigenvalue sets of which are {|u1〉, |u2〉, ..., |un〉} and
{λ1, λ2, ..., λn}, respectively. If we transform the unitary op-
erator U into αU2, where α 6= 0 is a constant, then the eigen-
value set of αU2 become {αλ12, αλ22, ..., αλn2}, and the
eigenvector set will not change. We note that if λi 6= 0, then
αλi

2 6= 0, else if λi = 0, then αλi2 = 0.
(ii) Suppose |0〉⊗t|u〉 is the input of the phase-estimation

algorithm, where |0〉⊗t is an eigenvalue register with t qubits,
and |u〉 is an eigenvector of unitary operator U with eigen-
value e2πiφ (φ ≈ 0.φ1...φt with binary representation). The
phase-estimation algorithm is designed to output |φ1...φt〉|u〉,
where |φ1...φt〉 is an approximation to the phase φ with a pre-
cision of t bits.

Specifically, the Hermitian boundary matrices at scales
3 < �1 < 4 and 4 < �2 < 5 are

B�1 =


|100〉 |010〉 |001〉 |110〉

|100〉 0 0 0 −1
|010〉 0 0 0 1
|001〉 0 0 0 0
|110〉 −1 1 0 0

 (10)

B�2 =


|100〉 |010〉 |001〉 |110〉 |101〉

|100〉 0 0 0 −1 −1
|010〉 0 0 0 1 0
|001〉 0 0 0 0 1
|110〉 −1 1 0 0 0
|101〉 −1 0 1 0 0

 (11)
The eigenvalue and eigenvector sets of the boundary ma-

trices B�1 are {λ�11 , λ
�1
2 , λ

�1
3 , λ

�1
4 } = {−

√
2,
√
2, 0, 0} and

{|β�11 〉, |β
�1
2 〉, |β

�1
3 〉, |β

�1
4 〉}, respectively, are

|β�1k 〉 =


1
2 |100〉 −

1
2 |010〉+

1√
2
|110〉, k = 1

− 12 |100〉+
1
2 |010〉+

1√
2
|110〉, k = 2
|001〉, k = 3

1√
2
|100〉+ 1√

2
|010〉, k = 4

(12)

To reduce the number of qubits required in the eigenvalue
register, we set B1 = (B�1)2/2, then the eigenvalue spectrum
becomes {λ�11 , λ

�1
2 , λ

�1
3 , λ

�1
4 } = {1,1, 0, 0}, without changing

the eigenvector set. We note that the algorithm cares not about
the full spectrum but the probability of |0〉 being detected in
the register, so this special treatment is justified. Then trans-
formingB1 into the unitary operator eiπB1 allows us to imple-
ment phase-estimation using an eigenvalue register with only
one qubit |0〉B . For the input |0〉B |ϕ〉�11 , we apply the trans-
formation,

|0〉B |ϕ〉�11 = |0〉B |110〉 =
1√
2
|0〉B(|β�11 〉+ |β

�1
2 〉)

phase estimation−−−−−−−−−−→ = 1√
2
|1〉B(|β�11 〉+ |β

�1
2 〉)

= |1〉B |110〉 = |1〉B |ϕ〉�11 . (13)

Similarly, at the scale of �2, we set B2 = (B�2)2 and trans-
form B2 into the unitary operator eiπB2 to meet experimen-
tal requirements. For the input |0〉〈0|B ⊗ ρ�2 , the phase-
estimation procedure outputs the state |1〉〈1|B ⊗ ρ�2 , where
ρ�2 = (|110〉〈110|+ |101〉〈101|)/2. Thus, in our experiment,
only a single CNOT operation between the eigenvalue register
comprising only one qubit |0〉B and the first bit of ρ�1 (ρ�2 ) is
sufficient for us to compile the phase-estimation algorithm.

VI. EXPERIMENTAL IMPLEMENTATION OF THE
CIRCUIT

In the experiment, we use single photons as qubits, where
the logical qubits |0〉 and |1〉 are encoded into horizontal (H)



10

and vertical (V ) polarization, respectively. The setup of our
experiment is shown in Fig. 3. Photons in paths 1, 2, and 3
are used to construct simplex states. Photons 4 (ancilla) and 5
(eigenvalue register) are both disentangled by polarizers into
|H〉, and then photons 3 and 6 (trigger) immediately collapse
into |V 〉. Here we describe details of how to experimentally
implement the circuit in Fig. 2(b).

| |a H bV

H

X

Qubit and Gates Experimental Realization

1/ 2(|01 |10 )  1/ 2(| | )HV VH 

|0 or |1 

|H

|V

|0 |H

|0 |1a b 

(a)

(b)

(c)

(d)

(e)

(f)

BBO

BBO

PO
L

HWP@22.5
o

HWP@45o

HWP@22.5o
PBS

PBS

QWP HWP

Detector

FIG. 9. The experimental implementation of the circuit. (a) Prepara-
tion of the entangled state 1/

√
2(|0〉|1〉+|1〉|0〉); (b) Preparation of

the quantum state |0〉 or |1〉; (c) Realization of the H gate; (d) Real-
ization of theX gate; (e) Realization of the CNOT gate; (f) Measure-
ment setup. BBO: β-barium borate, POL: polarizer, HWP: half-wave
plate, QWP: quarter-wave plate, PBS: polarizing beam splitter.

In the initialization stage, the photons in our experiment
are generated by spontaneous parametric down-conversion
using β-barium borate (BBO). Ultraviolet laser pulses
pass through a BBO crystal to produce entangled state
1/
√
2(|0〉|1〉+|1〉|0〉) (see Fig. 9(a)). If we do not want the

entangled state, we could use a polarizer (POL) to disentangle
the entangled state to |0〉 or |1〉 (see Fig. 9(b)).

In the quantum gate operation stage, we need to implement
a H gate, X gate, and CNOT gate. The single-qubit quantum
gatesH andX can beexperimentally realized using half-wave
plates (HWP) of 22.5◦ (see Fig. 9(c)) and 45◦ (see Fig. 9(d)),
respectively. Since the target qubit of the CNOT gate in our
circuit is |0〉, it can be realized using a combination of a polar-
izing beam splitter (PBS) and a HWP, and post-selecting the
events where there is exactly one photon exiting each output
of the PBS [27] (see Fig. 9(e)).

In the measurement stage, each photon passes through a
quarter-wave plate (QWP), a HWP, a PBS, and is finally read
out by using a single-photon detector (see Fig. 9(f)). By ad-
justing the angle of the QWP and HWP, we can measure the
photonic qubit in arbitrary bases.

XXX XYY YXY YYX

1.0

0.5

0

-0.5

-1.0

E
x
p

e
c
ti

o
n

 v
a

lu
e

0.4

0.3

0.2

0.1

0

0.5

T
h

re
e

-p
h

o
to

n
 d

e
te

c
ti

o
n

 p
ro

b
a

b
il
it

y

HHH VHH HVH VVH HHV VHV HVV VVV

(a)

(b)

FIG. 10. Experimental results for entanglement witness measure-
ments. (a) Threefold coincidence detection probabilities in the H/V
basis. (b) Expectation values of XXX , XY Y , Y XY and Y Y X .
Error bars represent one standard deviation, deduced from propa-
gated Poissonian counting statistics of the raw detection events.

VII. PHOTON SOURCE

We developed a high-performance source of polariza-
tion entangled photons generated via spontaneous paramet-
ric down-conversion (SPDC) using a sandwich-like bulk [42],
which consists of two identically cut 2mm-thick beam-like
type-II β-barium borate (BBO) crystals with one half-wave
plate (HWP) inserted between them. The source simultane-
ously exhibits high brightness (∼850Hz/mW), high efficiency
(∼45% collection efficiency with 3nm bandwidth filters, and
∼88% collection efficiency without narrowband filtering) and
high fidelity (∼0.98) at a pump power of 240mW. These
three essential features are crucial for future scalable photonic
quantum technologies.



11

VIII. CHARACTERIZING THE THREE-PHOTON
ENTANGLED STATE

Here we show the details for determining the fidelity of the
three-photon entangled state |φ〉 = (|HV V 〉+ |V HH〉)/

√
2

and verifying genuine multipartite entanglement [57] using an
entanglement witness. The fidelity is the overlap of the exper-
imentally produced state ρexp with the desired state ρideal,

F|φ〉 = 〈φ|ρexp|φ〉 (14)

For the three-photon entangled state
ρideal = |φ〉〈φ| = (|HV V 〉〈HV V |+ |V HH〉〈V HH|
+(XXX + Y XY −XY Y + Y Y X)/4)/2 where X ,
Y and Z are the Pauli matrices σx, σy , σz respectively.
Fig. 10 shows the experimental data. The expecta-
tion values of |HV V 〉〈HV V |+ |V HH〉〈V HH| and
(XXX + Y XY −XY Y + Y Y X)/4 are 0.987(1) and
0.921(12) respectively. Thus, the state fidelity of |φ〉 can be
calculated as F|φ〉 = 0.954(6), which exceeds the threshold
of 0.5 required for the entanglement witness. With high
statistical significance (∼76 standard deviations), genuine
three-photon entanglement is confirmed.

(a)

(f)(e)(d)

( c)(b)
1

0

-1

0.5

0

-0.5

FIG. 11. Reconstructed and ideal density matrices. (a) Imaginary
component of the reconstructed density matrix ρ�1exp. (b) Real com-
ponent of ρ�1exp. (c) Real part of the theoretically ideal matrix ρ�1
(imaginary components are identically zero). (d) Imaginary compo-
nent of the reconstructed density matrix ρ�2exp. (e) Real component of
ρ�2exp. (f) Real part of the theoretically ideal matrix ρ�2 (imaginary
components are identically zero).

IX. STATE RECONSTRUCTIONS

The matrix form of the reconstructed experimentally ob-
tained states ρ�1exp and ρ

�2
exp are,

ρ
�1
exp =



2.78 × 10−17 0 2.17 × 10−19i 0 0.0046 + 0.0022i 0.0012 + 0.0024i 0.0029 − 0.0024i −0.0003 + 0.0018i
0 0 −8.67 × 10−19i 0 0.0012 − 0.0024i 0 −0.0111 + 0.0053i 0

2.17 × 10−19i −8.67 × 10−19i 2.78 × 10−17 0 0.0100 + 0.0024i 0.0066 + 0.0017i −0.0046 − 0.0153i −0.0126 + 0.0109i
0 0 0 0 −0.0066 + 0.0006i 0 0.0174 − 0.0109i 0

0.0046 − 0.0022i 0.0012 + 0.0024i 0.0100 − 0.0024i −0.0066 − 0.0006i 0.0137 0.0020 + 0.0044i −0.0047 − 0.0047i 0.0513 − 0.0021i
0.0012 − 0.0024i 0 0.0066 − 0.0017i 0 0.0020 − 0.0044i 0 −0.0487 − 0.0271i 0.0002i
0.0029 + 0.0024i −0.0111 − 0.0053i −0.0046 + 0.0153i 0.0174 + 0.0109i −0.0047 + 0.0047i −0.0487 + 0.0271i 0.9863 0.0245 + 0.0000i

−0.0003 − 0.0018i 0 −0.0126 − 0.0109i 0 0.0513 + 0.0021i 0.0000 − 0.0002i 0.0245 0



ρ
�2
exp =



−0.0010 0 0.0071 −0.0012 0.0020 + 0.0023i −0.0014 − 0.0016i 0.0050 − 0.0051i −0.0025 − 0.0051i
0 0.0010 −0.0012 −0.0024 −0.0108 − 0.0125i 0.0449 − 0.0023i −0.0030 − 0.0093i 0.0082 − 0.0164i

0.0071 −0.0012 −0.0010 0 0.0050 + 0.0329i 0.0258 + 0.0010i −0.0265 + 0.0023i 0.0130 + 0.0133i
−0.0012 −0.0024 0 0.0010 −0.0037 − 0.0129i −0.0107 + 0.0239i −0.0106 − 0.0086i −0.0102 − 0.0116i

0.0020 − 0.0023i −0.0108 + 0.0125i 0.0050 − 0.0329i −0.0037 + 0.0129i 0.0071 0.0044 − 0.0210i 0.0071 + 0.0244i 0.0087 + 0.0277i
−0.0014 + 0.0016i 0.0449 + 0.0023i 0.0258 − 0.0010i −0.0107 − 0.0239i 0.0044 + 0.0210i 0.4990 −0.0181 − 0.0009i 0.0165 + 0.0317i
0.0050 + 0.0051i −0.0030 + 0.0093i −0.0265 − 0.0023i −0.0106 + 0.0086i 0.0071 − 0.0244i −0.0181 + 0.0009i 0.4929 −0.0197 − 0.0070i

−0.0025 + 0.0051i 0.0082 + 0.0164i 0.0130 − 0.0133i −0.0102 + 0.0116i 0.0087 − 0.0277i 0.0165 − 0.0317i −0.0197 + 0.0070i 0.0010


(15)

However, the eigenvalue spectra of ρ�1exp and ρ
�2
exp are

{0.9909, 0.0608,−0.0521, 0.0093,−0.0077,−0.0014, 0.0003,
−0.0001} and {0.5257, 0.4806, 0.05729,−0.0537,−0.0184,
0.0149,−0.0064, 0.0001} respectively, which violates the

positivity of density matrices. To avoid this problem, we
employ maximum likelihood estimation [58] to reconstruct
ρ�1exp and ρ

�2
exp, obtaining the corresponding legitimate density

matrices

ρ
�1
exp =



0.0015 0.0002 − 0.0009i 0.0001 − 0.0003i −0.0008 −0.0002 + 0.0002i −0.0005 − 0.0005i 0.0027 + 0.0024i 0
0.0002 + 0.0009i 0.0019 0.0003 − 0.0001i −0.0004 − 0.0007i −0.0004 − 0.0002i 0.0004 − 0.0009i −0.0062 + 0.0068i 0
0.0001 + 0.0003i 0.0003 + 0.0001i 0.0018 0.0001 − 0.0014i 0.0003 + 0.0001i 0.0006 + 0.0007i −0.0109 − 0.0198i 0.0003

−0.0008 −0.0004 + 0.0007i 0.0001 + 0.0014i 0.0023 0.0004 + 0.0005i −0.0008 + 0.0010i 0.0219 − 0.0114i −0.0001
−0.0006 − 0.0002i 0.0004 + 0.0002i 0.0003 − 0.0001i 0.0004 − 0.0005i 0.0039 0.0004 + 0.0021i 0.0050 − 0.0264i 0.00041 + 0.0001i
−0.0005 + 0.0005i 0.0004 + 0.0009i 0.0006 − 0.0007i −0.0008 − 0.0010i 0.0004 − 0.0021i 0.0047 −0.0488 − 0.0249i 0.0002 − 0.0003i
0.0027 − 0.0024i −0.0062 − 0.0068i −0.0109 + 0.0198i 0.0219 + 0.0114i 0.0050 + 0.0264i −0.0488 + 0.0249i 0.9818 0.001 + 0.0007i

0 0 0.0003 −0.0001 0.0004 − 0.0001i 0.0002 + 0.0003i 0.001 − 0.0007i 0.0027



ρ
�2
exp =



0.0003 0.0002i −0.0004 0.0004i −0.0004 − 0.0003i −0.0020 − 0.0014i 0.0051 − 0.0048i 0
0.0002i 0.0054 0.0012 − 0.0006i −0.0002 − 0.0016i −0.0009 + 0.0001i 0.0439 − 0.0030i −0.0031 − 0.0084i 0
−0.0004 0.0012 + 0.0006i 0.0058 −0.0010 − 0.0020i 0.0006 + 0.0025i 0.0278 + 0.0094i −0.0267 + 0.0019i 0
0.0004i −0.0002 + 0.0016i −0.0010 + 0.0020i 0.0026 −0.0025 + 0.0003i −0.0113 + 0.0243i −0.0098 − 0.0081i 0

−0.0004 + 0.0003i −0.0009 − 0.0010i 0.0006 − 0.0025i −0.0025 − 0.0003i 0.0031 0.0061 − 0.0214i 0.0062 + 0.0230i 0.0001i
−0.0012 + 0.0014i 0.0439 + 0.0030i 0.0278 − 0.0094i −0.0113 − 0.0242i 0.0061 + 0.0214i 0.4981 −0.0189 − 0.0018i 0.0001i
0.0051 + 0.0048i −0.0031 + 0.0084i −0.0267 − 0.0019i −0.0098 + 0.0081i 0.0062 − 0.0210i −0.0189 + 0.0018i 0.4838 0

0 0 0 0 0.0001i 0.0001i


(16)



12

The density matrices are shown graphically in Fig. 11.

[1] G. Carlsson, Bull. Amer. Math. Soc. 46, 255 (2009).
[2] H. Edelsbrunner, D. Letscher, and A. Zomorodian, Discret.

Comput. Geom. 28, 511 (2002).
[3] A. Zomorodian and G. Carlsson, Discret. Comput. Geom. 33,

249 (2005).
[4] G. Carlsson, T. Ishkhanov, V. De Silva, and A. Zomorodian,

Int. J. Comput. 76, 1 (2008).
[5] J. A. Perea and J. Harer, Found. Comput. Math. 15, 799 (2015).
[6] G. Petri, M. Scolamiero, I. Donato, and F. Vaccarino, in Proc.

Euro. Conf. Complex Syst. 2012 (Springer, 2013) pp. 93–99.
[7] G. Petri, M. Scolamiero, I. Donato, and F. Vaccarino, PloS one

8, e66506 (2013).
[8] V. De Silva and R. Ghrist, Notices Am. Math. Soc. 54, 10

(2007).
[9] V. De Silva and R. Ghrist, Algebr, Geom. Topol. 7, 339 (2007).

[10] V. De Silva and G. E. Carlsson, SPBG 4, 157 (2004).
[11] R. Ghrist and A. Muhammad, in Internat. Sympos. on Informat.

Process. in Sensor Networks (IEEE, 2005) pp. 254–260.
[12] C. Giusti, R. Ghrist, and D. S. Bassett, J. Comput. Neurosci.

41, 1 (2016).
[13] C. Giusti, E. Pastalkova, C. Curto, and V. Itskov, Proc. Natl.

Acad. Sci. 112, 13455 (2015).
[14] G. Petri, P. Expert, F. Turkheimer, R. Carhart-Harris, D. Nutt,

P. J. Hellyer, and F. Vaccarino, J. R. Soc. Interface. 11,
20140873 (2014).

[15] L.-D. Lord, P. Expert, H. M. Fernandes, G. Petri, T. J.
Van Hartevelt, F. Vaccarino, G. Deco, F. Turkheimer, and M. L.
Kringelbach, Front. Syst. Neurosci. 10 (2016).

[16] D. Cohen-Steiner, H. Edelsbrunner, and J. Harer, Discret. Com-
put. Geom. 37, 103 (2007).

[17] S. Basu, Discret. Comput. Geom. 22, 1 (1999).
[18] S. Basu, Discret. Comput. Geom. 30, 65 (2003).
[19] S. Basu, Found. Comput. Math. 8, 45 (2008).
[20] S. Basu, arXiv:1409.1534.
[21] J. Friedman, Algorithmica 21, 331 (1998).
[22] P. Scheiblechner, J. Complex. 23, 359 (2007).
[23] S. Lloyd, S. Garnerone, and P. Zanardi, arXiv:1408.3106

(2014).
[24] S. Lloyd, S. Garnerone, and P. Zanardi, Nat. Commun. 7,

10138 (2016).
[25] V. Giovannetti, S. Lloyd, and L. Maccone, Phys. Rev. Lett. 100,

160501 (2008).
[26] P. W. Shor, SIAM J. Comput. 26, 1484 (1997).
[27] C.-Y. Lu, D. E. Browne, T. Yang, and J.-W. Pan, Phys. Rev.

Lett. 99, 250504 (2007).
[28] B. P. Lanyon, T. J. Weinhold, N. K. Langford, M. Barbieri,

D. F. V. James, A. Gilchrist, and A. G. White, Phys. Rev. Lett.
99, 250505 (2007).

[29] H.-L. Huang, Q. Zhao, X. Ma, C. Liu, Z.-E. Su, X.-L. Wang,
L. Li, N.-L. Liu, B. C. Sanders, C.-Y. Lu, et al., Phys. Rev. Lett.
119, 050503 (2017).

[30] R. P. Feynman, Int. J. Theor. Phys. 21, 467 (1982).
[31] S. Lloyd, Science 273, 1073 (1996).

[32] C.-Y. Lu, W.-B. Gao, O. Gühne, X.-Q. Zhou, Z.-B. Chen, and
J.-W. Pan, Phys. Rev. Lett. 102, 030502 (2009).

[33] B. P. Lanyon et al., Nat. Chem. 2, 106 (2010).
[34] A. W. Harrow, A. Hassidim, and S. Lloyd, Phys. Rev. Lett. 103,

150502 (2009).
[35] X.-D. Cai, C. Weedbrook, Z.-E. Su, M.-C. Chen, M. Gu, M.-J.

Zhu, L. Li, N.-L. Liu, C.-Y. Lu, and J.-W. Pan, Phys. Rev. Lett.
110, 230501 (2013).

[36] P. Rebentrost, M. Mohseni, and S. Lloyd, Phys. Rev. Lett. 113,
130503 (2014).

[37] S. Lloyd, M. Mohseni, and P. Rebentrost, Nat. Phys. 10, 631
(2014).

[38] X.-D. Cai, D. Wu, Z.-E. Su, M.-C. Chen, X.-L. Wang, L. Li, N.-
L. Liu, C.-Y. Lu, and J.-W. Pan, Phys. Rev. Lett. 114, 110504
(2015).

[39] R. Ghrist, Bull. Amer. Math. Soc. 45, 61 (2008).
[40] M. A. Nielsen and I. L. Chuang, Quantum computation and

quantum information (Cambridge university press, 2010).
[41] L. K. Grover, Phys. Rev. Lett. 79, 325 (1997).
[42] X.-L. Wang, L.-K. Chen, W. Li, H.-L. Huang, C. Liu, C. Chen,

Y.-H. Luo, Z.-E. Su, D. Wu, Z.-D. Li, H. Lu, Y. Hu, X. Jiang,
C.-Z. Peng, L. Li, N.-L. Liu, Y.-A. Chen, C.-Y. Lu, and J.-W.
Pan, Phys. Rev. Lett. 117, 210502 (2016).

[43] O. Gühne and G. Tóth, Phys. Rep. 474, 1 (2009).
[44] D. R. Hamel, L. K. Shalm, H. Hübel, A. J. Miller, F. Marsili,

V. B. Verma, R. P. Mirin, S. W. Nam, K. J. Resch, and T. Jen-
newein, Nat. Photon. 8, 801 (2014).

[45] C. A. Fuchs, Ph.D. thesis, Univ. of New Mexico (1996).
[46] Y.-M. He, J. Liu, S. Maier, M. Emmerling, S. Gerhardt,

M. Davanço, K. Srinivasan, C. Schneider, and S. Höfling, Op-
tica 4, 802 (2017).

[47] F. Kaneda, B. G. Christensen, J. J. Wong, H. S. Park, K. T.
McCusker, and P. G. Kwiat, Optica 2, 1010 (2015).

[48] H. Wang, Y. He, Y.-H. Li, Z.-E. Su, B. Li, H.-L. Huang,
X. Ding, M.-C. Chen, C. Liu, J. Qin, et al., Nat. Photon. 11,
361 (2017).

[49] R. Fickler, R. Lapkiewicz, W. N. Plick, M. Krenn, C. Schaeff,
S. Ramelow, and A. Zeilinger, Science 338, 640 (2012).

[50] X.-L. Wang, X.-D. Cai, Z.-E. Su, M.-C. Chen, D. Wu, L. Li,
N.-L. Liu, C.-Y. Lu, and J.-W. Pan, Nature (London) 518, 516
(2015).

[51] G. Carlsson, Acta Numerica 23, 289 (2014).
[52] D. A. Johannsen and D. J. Marchette, Statistical Analysis and

Data Mining: The ASA Data Science Journal 5, 235 (2012).
[53] D. Nilsson and A. Ekgren, Topology and Word Spaces, Ph.D.

thesis, BSc thesis, KTH (2013).
[54] M. Nakahara, Geometry, topology and physics (CRC Press,

2003).
[55] A. Zomorodian and G. Carlsson, Discret. Comput. Geom. 33,

249 (2005).
[56] W. A. Sethares and R. Budney, J. Math. Music 8, 73 (2014).
[57] M. Seevinck and J. Uffink, Phys. Rev. A 65, 012107 (2001).
[58] D. F. James, P. G. Kwiat, W. J. Munro, and A. G. White, Phys.

Rev. A 64, 052312.


	Demonstration of Topological Data Analysis on a Quantum Processor
	Abstract
	 Supplemental Material
	I Background and practical applications of Betti number and TDA
	II Numerical simulation of the proportion of k-simplices in some cases
	III Experimental Errors analysis
	IV necessity of constructing the mixed state
	V Circuit details
	VI experimental implementation of the Circuit
	VII Photon source
	VIII Characterizing the three-photon entangled state
	IX State reconstructions
	 References


