




















































dso and sdso optimization: more tractabl altern to sum of squar and semidefinit optim 


dso and sdso optimization: 
more tractabl altern TO 

sum OF squar and semidefinit optimization∗ 

amir ali ahmadi† and anirudha majumdar ‡ 

abstract. In recent years, optim theori have be greatli impact by the advent of sum 
of squar (sos) optimization. the relianc of thi techniqu on large-scal semidefinit program 
however, have limit the scale of problem to which it can be applied. In thi paper, we introduc 
dso and sdso optim a more tractabl altern to sum of squar optim that 
reli instead on linear and second order cone program respectively. these be optim problem 
over certain subset of sum of squar polynomi (or equival subset of posit semidefinit 
matrices), which can be of interest in gener applic of semidefinit program where scala- 
biliti be a limitation. We show that some basic theorem from so optim which reli on result 
from real algebra geometri be still valid for dso and sdso optimization. furthermore, we 
show with numer experi from divers applic areas—polynomi optimization, statis- 
tic and machin learning, deriv pricing, and control theory—that with reason tradeoff 
in accuracy, we can handl problem at scale that be current far beyond the reach of sum of 
squar approaches. finally, we provid a review of recent techniqu that bridg the gap between 
our dsos/sdso approach and the so approach at the expens of addit run time. the 
appendix of the paper introduc an accompani matlab packag for dso and sdso opti- 
mization. 

key words. sum of squar optimization, polynomi optimization, nonneg polynomials, 
semidefinit programming, linear programming, second order cone programming. 

am subject classifications. 65k05, 90c25, 90c22, 90c05, 90c90, 12y05, 93c85, 90c27 

1. introduction. for which valu of the real coeffici c1, c2, c3, be the poly- 
nomial 

(1) p(x1, x2) = c1x 
4 
1 − 6x31x2 − 4x31 + c2x21x22 + 10x21 + 12x1x22 + c3x42 

nonnegative, i.e., satisfi p(x1, x2) ≥ 0 for all (x1, x2) ∈ r2? the problem of optimiz- 
ing over nonneg polynomials—of which our open question be a toy example—i 
fundament to mani problem of appli and comput modern mathematics. 
In such an optim problem, one would like to impos constraint on the coef- 
ficient of an unknown polynomi so a to make it nonnegative, either global in 
Rn (a in the abov example), or on a certain basic semialgebra set, i.e., a subset 
of Rn defin by a finit number of polynomi inequalities. We will demonstr 
shortli (see section 1.1) whi optim problem of thi kind be ubiquit in 
applic and univers in the studi of question deal in one way or anoth 
with polynomi equat and inequalities. 

close relat to nonneg polynomi be polynomi that be sum of 
squares. We say that a polynomi p be a sum of squar (sos) if it can be write a 
p = 

∑ 
i q 

2 
i for some (finit number of) polynomi qi. for example, the polynomi 

∗submit to the editor on june 9, 2017. 
funding: amir ali ahmadi be partial support by a darpa faculti award, a sloan 

fellowship, an nsf career award, an afosr young investig program award, and a googl 
research award. 
†depart of oper research and financi engineering, princeton university. 

(a a a@princeton.edu, http://aaa.princeton.edu/). 
‡ depart of mechan and aerospac engineering, princeton univers (start aug. 1, 

2017). (ani.majumdar@princeton.edu, http://web.stanford.edu/∼anirudha/). 

1 

ar 
X 

iv 
:1 

70 
6. 

02 
58 

6v 
2 

[ 
m 

at 
h. 

O 
C 

] 
9 

O 
ct 

2 
01 

7 

mailto:a\protect _a\protect _a@princeton.edu 
http://aaa.princeton.edu/ 
mailto:ani.majumdar@princeton.edu 
http://web.stanford.edu/~anirudha/ 


2 amir ali ahmadi and anirudha majumdar 

in (1) with c1 = 13, c2 = 1, c3 = 4 be so sinc it admit the decomposit 

p(x1, x2) = (x1 − 2x21)2 + (3x1 + 2x22)2 + (x1x2 − 3x21)2. 

the relationship between nonneg and sum of squar polynomi have be a 
classic subject of studi in real algebra geometry. for example, a result of hilbert 
from 1888 [37] state that all nonneg bivari polynomi of degre four be 
sum of squares. It follows, a a special case, that the set of coeffici for which 
the polynomi p in (1) be nonneg or a sum of squar in fact coincide. In 
the gener situation, however, while sum of squar polynomi be clearli alway 
nonnegative, it be not true that the convers alway holds. thi be show in the 
same paper of hilbert [37], where he give a non-construct proof of exist of 
nonneg polynomi that be not sum of squares. explicit exampl of such 
polynomi appear mani year later, start with the work of motzkin [59] in 
the 1960s. hilbert’ interest in thi line of research be also showcas in hi 17th 
problem, which ask whether everi nonneg polynomi be a sum of squar of 
ration functions. We refer the interest reader to an outstand survey paper of 
reznick [74], which cover mani histor aspect around hilbert’ 17th problem, 
includ the affirm solut by artin [6], a well a sever late developments. 

the classic question around nonneg and sum of squar polynomi have 
be revisit quit extens in the past 10-15 year in differ commun among 
appli and comput mathematicians. the reason for thi renew interest be 
twofold: (i) the discoveri that mani problem of modern practic interest can be cast 
a optim problem over nonneg polynomials, and (ii) the observ that 
while optim over nonneg polynomi be gener np-hard, optim 
over the set of sum of squar polynomi can be do via semidefinit program 
(sdp); see theorem 1 in section 2. the latter development, origin explor in the 
pioneer work of shor [79], nesterov [61], parrilo [65],[66], and lasserr [44], have 
lead to the creation of sum of squar optimization—a comput framework, with 
semidefinit program a it underli engine, that can tackl mani fundament 
problem of real algebra and polynomi optimization. 

the depend of sum of squar approach on semidefinit program can 
be view a both a strength and a weak depend on one’ perspective. from 
a comput complex viewpoint, semidefinit program can be solv with ar- 
bitrari accuraci in polynomi time use interior point method (see [85] for a com- 
prehens survey). As a result, sum of squar techniqu offer polynomi time al- 
gorithm that approxim a veri broad class of np-hard problem of interest. from 
a more practic viewpoint however, sdp be among the most expens convex re- 
laxat to solve. the speed and reliabl of the current sdp solver lag behind 
those for other more restrict class of convex program (such a linear or second 
order cone programs) by a wide margin. with the add complic that the sdp 
gener by so problem be larg (see section 2), scalabl have becom the singl 
most outstand challeng for sum of squar optim in practice. 

In thi paper, we focu on the latter of the two viewpoint mention abov 
and offer altern to sum of squar optim that while more conserv 
in general, be significantli more scalable. our hope be that by do so, we expand 
the use and applic of algebra techniqu in optim to new area and 
share it appeal with a broader audience. We call our new comput frame- 
works, which reli on linear and second order cone programming, dso and sdso 



dso and sdso optim 3 

optimization1. these be short for diagonally-dominant-sum-of-squar and scaled- 
diagonally-dominant-sum-of-squares; see section 3 for precis definitions. while these 
tool be primarili design for sum of squar optimization, they be also applic 
to gener applic of semidefinit program where tradeoff between scalabil- 
iti and perform may be desirable. In the interest of motiv our contribut 
for a divers audience, we delay a present of these contribut until section 3 
and start instead with a portfolio of problem area involv nonneg polynomials. 
ani such problem area be one to which sum of squar optimization, a well a it new 
dso and sdso counterparts, be directli applicable. 

1.1. whi optim over nonneg polynomials?. We describ sever 
motiv applic in thi section at a high level. these will be revisit late in 
the paper with concret comput examples; see section 4. 

polynomi optimization. A polynomi optim problem (pop) be an 
optim problem of the form 

(2) 
minim p(x) 
subject to x ∈ K := {x ∈ Rn | gi(x) ≥ 0, hi(x) = 0}, 

where p, gi, and hi be multivari polynomials. the special case of problem (2) 
where the polynomi p, gi, hi all have degre one be of cours linear programming, 
which can be solv veri efficiently. for high degrees, pop contain a special case 
mani import problem in oper research; e.g., the optim power flow problem 
in power engin [39], the comput of nash equilibrium in game theori [43], [67], 
problem of euclidean emb and distanc geometri [50], and a host of problem 
in combinatori optimization. We observ that if we could optim over the set of 
polynomi that be nonneg on a basic semialgebra set, then we could solv 
the pop problem to global optimality. To see this, note that the optim valu of 
problem (2) be equal to the optim valu of the follow problem: 

(3) 
maxim γ 
subject to p(x)− γ ≥ 0, ∀x ∈ K. 

here, we be tri to find the larg constant γ such that the polynomi p(x)− γ 
be nonneg on the set K; i.e., the larg low bound on problem (2). 

combinatori optimization. proof of nonneg of polynomi of degre 
a low a four provid infeas certif for all decis problem in the com- 
plexiti class np, includ mani well-known combinatori optim problems. 
consider, e.g., the simple-to-describe, np-complet problem of partit [29]: 
given a set of integ a1, . . . , an, decid if they can be split into two set with equal 
sums. It be straightforward to see that a partit instanc be infeas if and 
onli if the degree-four polynomi 

p(x) = 

n∑ 
i=1 

(x2i − 1)2 + ( 
n∑ 
i=1 

xiai) 
2 

satisfi p(x) > 0, ∀x ∈ rn. indeed, p be by construct a sum of squar and henc 
nonnegative. If it be to have a zero, each squar in p would have to evalu to zero; 
but thi can happen if and onli if there be a binari vector x ∈ {−1, 1}n, which make 

1we use and recommend the pronunci “d-sauce” and “s-d-sauce”. 



4 amir ali ahmadi and anirudha majumdar∑n 
i=1 xiai = 0, give a ye answer to the partit instance. suppos now that 

for a give instance, and for some � > 0, we could prove that p(x)− � be nonnegative. 
then we would have proven that our partit instanc be infeasible, potenti 
without tri out all 2n way of split the integ into two sets. 

control system and robotics. numer fundament problem in nonlinear 
dynam and control, such a stability, robustness, collis avoidance, and control 
design can be turn into problem about find special functions—th so-cal 
lyapunov function (see, e.g., [41])—that satisfi certain sign conditions. for example, 
give a differenti equat ẋ = f(x), where f : Rn → rn, and with the origin a an 
equilibrium point (i.e., satisfi f(0) = 0), consid the “region of attract (roa) 
problem”: determin the set of initi state in Rn from which the trajectori flow 
to the origin. lyapunov’ stabil theorem (see, e.g., [41, chap. 4]) tell u that if 
we can find a (lyapunov) function V : Rn → R, which togeth with it gradient ∇V 
satisfi 

(4) V (x) > 0 ∀x 6= 0, and 〈∇v (x), f(x)〉 < 0 ∀x ∈ {x| V (x) ≤ β, x 6= 0}, 

then the set {x ∈ rn| V (x) ≤ β} be part of the region of attraction. If f be a polynomi 
function (a veri import case in applic [65]), and if we parameter V a a 
polynomi function, then the search for the coeffici of V satisfi the condit 
in (4) be an optim problem over the set of nonneg polynomials. design 
stabl equilibrium point with larg region of attract be a fundament problem in 
control engin and robotics; see, e.g., [40], [54]. 

statist regress with shape constraints. A problem that aris fre- 
quentli in statist be that of fit a function to a set of data point with minimum 
error, while ensur that it meet some structur properties, such a nonnegativity, 
monotonicity, or convex [32], [34]. requir of thi type be typic impos 
either a regular (to avoid overfitting), or more importantli a a result of prior 
knowledg that the true function to be estim satisfi the same structur prop- 
erties. In economics, for example, a regress problem for estim the util of 
consum from sampl measur would come with a natur concav require- 
ment on the util function. when the regress function be polynomials, mani 
such structur properti lead to polynomi nonneg constraints. for example, 
a polynomi p(x) := p(x1, . . . , xn) can be constrain to be concav by requir it 
hessian matrix ∇2p(x), which be an n×n symmetr matrix with polynomi entries, 
to be neg semidefinit for all x. thi condit be easili see to be equival to 
the polynomi −yth(x)i in the 2n variabl x := (x1, . . . , xn) and y := (y1, . . . , yn) 
be nonnegative. 

probabl bound give moments. the well-known inequ of markov 
and chebyshev in probabl theori bound the probabl that a univari random 
variabl take valu in a subset of the real line give the first, or the first and second 
moment of it distribut [10]. consid a vast gener of thi problem where 
one be give a finit number of moment {µk1,...,kn := e[x 

k1 
1 . . . X 

kn 
n ], k1+· · · , kn ≤ d} 

of a multivari multivari random variabl X := (x1, . . . , xn) and be interest in 
bound the probabl of an event X ∈ S, where S be a gener basic semialgebra 
subset of the sampl space Ω. A sharp upper bound on thi probabl can be 
obtain by solv the follow optim problem for the coeffici ck1...kn of 
an n-variat degree-d polynomi p (see [14], [70]): 



dso and sdso optim 5 

(5) 
minim e[p(x)] = 

∑ 
ck1...knµk1...kn 

subject to p(x) ≥ 1,∀x ∈ S 
p(x) ≥ 0,∀x ∈ Ω. 

It be easi to see that ani feasibl solut of problem (5) give an upper bound 
on the probabl of the event X ∈ S a the polynomi p be by construct place 
abov the indic function of the set S and the expect valu of thi indic 
function be precis the probabl of the event X ∈ S. note that the constraint in 
(5) be polynomi nonneg conditions. 

other applications. the applic area outlin abov be onli a few ex- 
ampl on a long list of problem that can be tackl by optim over the set of 
nonneg polynomials. other interest problem on thi list include: computa- 
tion of equilibrium in game with continu strategi space [67], distinguish sep- 
arabl and entangl state in quantum inform theori [25], comput bound 
on sphere pack problem in geometri [7], softwar verif [77], robust and 
stochast optim [12], filter design [82], and autom theorem prove [36]. 
A great refer for mani applic in thi area, a well a the relat theoret 
and comput background, be a recent volum edit by blekherman, parrilo, 
and thoma [15]. 

organ of the paper. the remaind of thi paper be structur a fol- 
lows. In section 2, we briefli review the sum of squar approach and it relat to 
semidefinit program for the gener reader. We also comment on it challeng 
regard scalabl and prior work that have tackl thi issue. the familiar reader 
can skip to section 3, where our contribut begin. In section 3.1, we introduc the 
cone of dso and sdso polynomi and demonstr that we can optim over them 
use linear and second order cone program respectively. section 3.2 introduc 
hierarchi of cone base on dso and sdso polynomi that can good approxim 
the cone of nonneg polynomials. asymptot guarante on these cone base on 
classic positivstellensätz be also presented. section 4 present numer experi- 
ment that use our approach on large-scal exampl from polynomi optim 
(section 4.1), combinatori optim (section 4.2), statist and machin learn- 
ing (section 4.3 and 4.5), deriv price (section 4.4), and control theori and 
robot (section 4.6). section 5 provid a review of recent techniqu for bridg 
the gap between the dsos/sdso approach and the so approach at the expens 
of addit comput costs. section 6 conclud the paper. the appendix to 
the paper introduc iso (“insid sos”), an accompani matlab packag for 
dso and sdso optim write use the spot toolbox [57]. 

2. review of the semidefinit programming-bas approach and com- 
putat considerations. As mention earlier, sum of squar optim han- 
dle a (global) nonneg constraint on a polynomi p by replac it with the 
strong requir that p be a sum of squares. the situat where p be onli 
constrain to be nonneg on a certain basic semialgebra set2 

S := {x ∈ rn| g1(x) ≥ 0, . . . , gm(x) ≥ 0} 

2in thi formulation, we have avoid equal constraint for simplicity. obviously, there be no 
loss of gener in do thi a an equal constraint h(x) = 0 can be impos by the pair of 
inequ constraint h(x) ≥ 0,−h(x) ≥ 0. 



6 amir ali ahmadi and anirudha majumdar 

can also be handl with the help of appropri sum of squar multipliers. for 
example, if we succeed in find so polynomi s0, s1, . . . , sm, such that 

(6) p(x) = s0(x) + 

m∑ 
i=1 

si(x)gi(x), 

then we have found a certif of nonneg of p on the set S. indeed, if we evalu- 
ate the abov express at ani x ∈ S, nonneg of the polynomi s0, s1 . . . , sm 
impli that p(x) ≥ 0. A positivstellensatz from real algebra geometri due to puti- 
nar [72] state that if the set S satisfi the so-cal archimedean property, a properti 
onli slightli strong than compact (see, e.g., [47] for a precis definition), then 
everi polynomi posit on S have a represent of the type (6), for some so 
polynomi s0, s1, . . . , sm of high enough degre (see also [62] for degre bounds). 
even with no qualif whatsoev regard the set S, there be other posi- 
tivstellensätz (e.g., due to stengl [80]) that certifi nonneg of a polynomi 
on a basic semialgebra set use so polynomials. these certif be onli slightli 
more complic than (6) and involv so multipli associ with product among 
polynomi gi that defin S [66]. A great refer for the interest reader be the 
survey paper by laurent [47]. 

the comput advantag of a certif of (global or local) nonneg 
via sum of squar polynomi be that it can be automat found by semidefinit 
programming. the follow well-known theorem establish the link between so 
polynomi and sdp. let u denot the set of n × n symmetr matrix by sn. 
recal that a matrix A ∈ Sn be posit semidefinit (psd) if xtax ≥ 0,∀x ∈ rn, and 
that semidefinit program be the problem of optim a linear function over psd 
matrix subject to affin inequ on their entri [85]. We denot the posit 
semidefinit of a matrix A with the standard notat A � 0. 

theorem 1 (see, e.g., [65],[66]). A multivari polynomi p := p(x) in n 
variabl and of degre 2d be a sum of squar if and onli if there exist a symmetr 
matrix Q (often call the gram matrix) such that 

(7) 
p(x) = ztqz, 
Q � 0, 

where z be the vector of monomi of degre up to d: 

z = [1, x1, x2, . . . , xn, x1x2, . . . , x 
d 
n]. 

search for a matrixq satisfi the posit semidefinit constraint, a well 
a the linear equal constraint come from (7), amount to solv a semidefinit 
program. the size of the matrix Q in thi theorem is( 

n+ d 

d 

) 
× 
( 
n+ d 

d 

) 
, 

which approxim equal nd × nd. while thi number be polynomi in n for fix 
d, it can grow rather quickli even for low-degre polynomials. for example, a degree- 
4 polynomi (d = 2) in 50 variabl have 316251 coeffici and it gram matrix, 
which would need to be posit semidefinite, contain 879801 decis variables. A 
semidefinit constraint of thi size be quit expensive, and in fact a problem with 50 



dso and sdso optim 7 

variabl be far beyond the current realm of possibl in so optimization. In 
the absenc of problem structure, sum of squar problem involv degree-4 or 6 
polynomi be current limited, roughli speaking, to a hand or a dozen variables. 

there have be mani contribut alreadi to improv in scalabl of 
sum of squar techniques. one approach have be to develop systemat techniqu 
for take advantag of problem structure, such a sparsiti or symmetri of the under- 
lie polynomials, to reduc the size of the sdp [30], [84], [23], [76]. these techniqu 
have proven to be veri use a problem aris in practic sometim do come with 
a lot structure. anoth approach which hold promis have be to design custom 
solver for special class of so program and avoid restor to an off-the-shelf inte- 
rior point solver. exampl in thi direct includ the work in [11], [63], [86], [49]. 
there have also be recent work by lasserr et al. that increas scalabl of sum of 
squar optim problem at the cost of accuraci of the solut obtained. thi 
be do by bound the size of the larg sdp constraint appear in the so for- 
mulation, and lead to what the author call the bso (bound sos) hierarchi [46]. 

the approach we take in thi paper for enhanc scalabl be orthogon to the 
one mention abov (and can potenti late be combin with them). We propos 
to eschew sum of squar decomposit to begin with. In our view, almost all ap- 
plicat area of thi field use sum of squar decomposit not for their own sake, 
but becaus they provid a mean to polynomi nonnegativity. hence, thi paper be 
motiv by a natur question: can we give other suffici condit for polyno- 
mial nonneg that be perhap strong than a sum of squar decompostion, 
but cheaper to work with? 

In the next section, we identifi some subset of the cone of nonneg polyno- 
mial that one can optim over use linear program (lp) and second order 
cone program (socp) [51], [5]. not onli be these much more effici solv- 
abl class of convex programs, but they be also superior to semidefinit program 
in term of numer conditioning. In addition, work with these class of con- 
vex program allow u to take advantag of high-perform LP and socp solver 
(e.g., cplex [20], mosek [58]) that have be matur over sever decad becaus 
of industri applications. We remark that while there have be other approach 
to produc LP hierarchi for polynomi optim problem (e.g., base on the 
krivine-stengl certif of posit [42, 80, 45]), these lps, though theoret 
significant, be typic quit weak in practic and often numer ill-condit 
[46]. 

3. dso and sdso optimization. We start with some basic definitions. 
A monomi m : Rn → R in variabl x := (x1, . . . , xn) be a function of the form 
m(x) = xα11 . . . x 

αn 
n , where each αi be a nonneg integer. the degre of such 

a monomi be by definit α1 + · · · + αn. A polynomi p : Rn → R be a finit 
linear combin of monomi p(x) = 

∑ 
α1...αn 

cα1...αnx 
α1 
1 . . . x 

αn 
n . the degre of 

a polynomi be the maximum degre of it monomials. A form or a homogen 
polynomi be a polynomi whose monomi all have the same degree. for ani 
polynomi p := p(x1, . . . , xn) of degre d, one can defin it homogen version 
ph by introduc a new variabl y and defin ph(x1, . . . , xn, y) = y 

dp(xi ). one 

can revers thi oper (dehomogenize) by set the homogen variabl y 
equal to one: p(x1, . . . , xn) = ph(x1, . . . , xn, 1). the properti of be nonneg 
and a sum of squar (a defin earlier) be preserv under homogen and 
dehomogen [74]. We say that a form f be posit definit if f(x) > 0 for all 
x 6= 0. We denot by psdn,2d and sosn,2d the set of nonneg (a.k.a. posit 



8 amir ali ahmadi and anirudha majumdar 

semidefinite) and sum of squar polynomi in n variabl and degre 2d respectively. 
(note that odd-degre polynomi can never be nonnegative.) both these set form 

proper (i.e., convex, closed, pointed, and solid) cone in R( 
n+2d 
2d ) with the obviou 

inclus relationship sosn,2d ⊆ psdn,2d. 
the basic idea behind our approach be to approxim sosn,2d from the insid 

with new set that be more tractabl for optim purposes. toward thi goal, 
one may think of sever natur suffici condit for a polynomi to be a sum of 
squares. for example, the follow may be natur first candidates: 

• the set of polynomi that be sum of 4-th power of polynomials: 
{p| p = 

∑ 
q4i }, 

• the set of polynomi that be a sum of a constant number of squar of 
polynomials; e.g., a sum of three squares: {p| p = q21 + q22 + q23}. 

even though both of these set clearli resid insid the set of so polynomials, 
they be not ani easi to optim over. In fact, they be much harder: test 
whether a polynomi be a sum of 4-th power be np-hard alreadi for quartic [38] 
(in fact, the cone of 4-th power of linear form be dual to the cone of nonneg 
quartic form [75]) and optim over polynomi that be sum of three squar 
be intract (a thi task even for quadrat subsum the np-hard problem of 
posit semidefinit matrix complet with a rank constraint [48]). these exampl 
illustr that in general, an inclus relationship do not impli anyth with 
respect to optim complexity. hence, we need to take some care when choos 
which subset of sosn,2d to work with. On the one hand, these subset have to 
be “big enough” to be use in practice; on the other hand, they should be more 
tractabl to optim over. 

3.1. the cone of dso and sdso polynomials. We now describ two in- 
terest cone insid sosn,2d that lend themselv to linear and second order cone 
represent and be henc more tractabl for optim purposes. these cone 
will also form the build block of some more elabor cone (with improv per- 
formance) that we will present in subsect 3.2 and section 5. 

definit 2. A polynomi p := p(x) be diagonally-dominant-sum-of-squar 
(dsos) if it can be write a 

(8) p(x) = 
∑ 
i 

αim 
2 
i (x) + 

∑ 
i,j 

β+ij(mi(x) +mj(x)) 
2 + 

∑ 
i,j 

β−ij(mi(x)−mj(x)) 
2, 

for some monomi mi(x),mj(x) and some nonneg scalar αi, β 
+ 
ij , β 

− 
ij . We de- 

note the set of polynomi in n variabl and degre 2d that be dso by dsosn,2d. 

definit 3. A polynomi p := p(x) be scaled-diagonally-dominant-sum-of- 
squar (sdsos) if it can be write a 

(9) p(x) = 
∑ 
i 

αim 
2 
i (x) + 

∑ 
i,j 

(β̂+ijmi(x) + β̃ 
+ 
ijmj(x)) 

2 + 
∑ 
i,j 

(β̂−ijmi(x)− β̃ 
− 
ijmj(x)) 

2, 

for some monomi mi(x),mj(x) and some scalar αi, β̂ 
+ 
ij , β̃ 

+ 
ij , β̂ 

− 
ij , β̃ 

− 
ij with αi ≥ 0. 

We denot the set of polynomi in n variabl and degre 2d that be sdso by 
sdsosn,2d. 

from the definition, the follow inclus relationship should be clear: 

dsosn,2d ⊆ sdsosn,2d ⊆ sosn,2d ⊆ posn,2d. 



dso and sdso optim 9 

fig. 1. A comparison of the set of dsos/sdsos/sos/psd polynomi on a parametr famili of 
bivari quartic give in (10). 

In general, all these contain relationship be strict. figur 1 show these set 
for a famili of bivari quartic parameter by two coeffici a, b:3 

(10) p(x1, x2) = x 
4 
1 + x 

4 
2 + ax 

3 
1x2 + (1− 

1 

2 
a− 1 

2 
b)x21x 

2 
2 + 2bx1x 

3 
2. 

some elementari remark about the two definit abov be in order. It be not 
hard to see that if p have degre 2d, the monomi mi,mj in (8) or (9) never need 
to have degre high than d. In the special case where p be homogen of degre 
2d (i.e., a form), the monomi mi,mj can be take to have degre exactli d. We 
also note that decomposit give in (8) or (9) be not unique; there can even be 
infinit mani such decomposit but the definit requir just one. 

our terminolog in definit 2 and 3 come from a connect (which we will 
soon establish) to the follow class of symmetr matrices. 

definit 4. A symmetr matrix A = (aij) be diagon domin (dd) if 

aii ≥ 
∑ 
j 6=i 

|aij | 

for all i. A symmetr matrix A be scale diagon domin (sdd) if there exist a 
diagon matrix D, with posit diagon entries, such that dad be dd.4 We denot 
the set of n× n dd and sdd matrix with ddn and sddn respectively. 

It follow from gershgorin’ circl theorem [31] that diagon domin matrix 
be posit semidefinite. thi impli that scale diagon domin matrix be 
also posit semidefinit a the eigenvalu of dad have the same sign a those of 
A. hence, if we denot the set of n × n posit semidefinit matrix by pn, the 
follow inclus relationship be evident: 

3it be well know that all psd bivari form be so [74] and henc the outer set exactli char- 
acter all valu of a and b for which thi polynomi be nonnegative. 

4check whether a give matrix A = (aij) be sdd can be do by solv a linear program sinc 
the definit be equival to exist of an element-wis posit vector d such that 

aiidi ≥ 
∑ 
j 6=i 
|aij |dj , ∀i. 



10 amir ali ahmadi and anirudha majumdar 

fig. 2. A section of the cone of 5 × 5 diagon dominant, scale diagon dominant, and 
posit semidefinit matrices. optim over these set can respect be do by lp, socp, 
and sdp. 

ddn ⊆ sddn ⊆ pn. 

these contain be strict for n > 2. In figur 2, we illustr the set of x and y 
for which the matrix 

I + xa+ yB 

be diagon dominant, scale diagon dominant, and posit semidefinite. here, 
I be the ident matrix and the 5 × 5 symmetr matrix A and B be gener 
randomli with iid entri sampl from the standard normal distribution. our interest 
in these inner approxim to the set of psd matrix stem from the fact that 
optim over them can be do by linear and second order cone program 
respect (see theorem 10 below, which be more general). for now, let u relat 
these matrix back to dso and sdso polynomials. 

theorem 5. A polynomi p of degre 2d be dso if and onli if it admit a rep- 
resent a p(x) = zT (x)qz(x), where z(x) be the standard monomi vector of 
degre ≤ d and Q be a dd matrix. 

the follow lemma by barker and carlson provid an extrem ray characteri- 
zation of the set of diagon domin matrix and will be use in the proof of the 
abov theorem. 

lemma 6 (barker and carlson [8]). let {vi}n 
2 

i=1 be the set of all nonzero vector 
in Rn with at most 2 nonzero components, each equal to ±1. then, a symmetr n×n 
matrix M be diagon domin if and onli if it can be write a 

M = 

n2∑ 
i=1 

ηiviv 
T 
i , 

for some ηi ≥ 0. 
proof of theorem 5. suppos first that p(x) = zT (x)qz(x) with Q diagon 

dominant. lemma 6 impli that 

p(x) = 

n2∑ 
i=1 

( 
ηiz 

T (x)viv 
T 
i z(x) 

) 
= 

n2∑ 
i=1 

ηi(v 
T 
i z(x)) 

2, 



dso and sdso optim 11 

where ηi ≥ 0 and {vi} be the set of all nonzero vector in Rn with at most 2 nonzero 
components, each equal to ±1. In thi sum, the vector vi that have onli one nonzero 
entri lead to the first sum in the dso expans (8). the vector vi with two 1 or 
two −1 lead to the second sum, and those with one 1 and one −1 lead to the third. 

for the revers direction, suppos p be dsos, i.e., have the represent in (8). We 
will show that 

p(x) = zT (x) 
∑ 
k 

qkz(x), 

where each Qk be dd and correspond to a singl term in the expans (8). As the 
sum of dd matrix be dd, thi would establish the proof. for each term of the form 
αim 

2 
i (x) we can take Qk to be a matrix of all zero except for a singl diagon entri 

correspond to the monomi mi in z(x), with thi entri equal αi. for each term 
of the form β+ij(mi(x)+mj(x)) 

2, we can take Qk to be a matrix of all zero except for 
four entir correspond to the monomi mi(x) and mj(x) in z(x). all these four 
entri will be set to β+ij . similarly, for each term of the form β 

− 
ij(mi(x) −mj(x))2, 

we can take Qk to be a matrix of all zero except for four entir correspond to 
the monomi mi and mj(x) in z(x). In thi 2× 2 submatrix, the diagon element 
will be β−ij and the off-diagon element will be −β 

− 
ij . clearly, all the Qk matrix 

we have construct be dd. 

theorem 7. A polynomi p of degre 2d be sdso if and onli if it admit a 
represent a p(x) = zT (x)qz(x), where z(x) be the standard monomi vector of 
degre ≤ d and Q be a sdd matrix. 

proof. suppos first that p(x) = zT (x)qz(x) with Q scale diagon dominant. 
then, there exist a diagon matrix D, with posit diagon entries, such that dqd 
be diagon domin and 

p(x) = (d−1z(x))tdqd(d−1z(x)). 

now an argument ident to that in the first part of the proof of theorem 5 (after 
replac z(x) with d−1z(x)) give the desir sdso represent in (9). 

for the revers direction, suppos p be sdsos, i.e., have the represent in (9). 
We show that 

p(x) = zT (x) 
∑ 
k 

qkz(x), 

where each Qk be sdd and correspond to a singl term in the expans (9). As the 
sum of sdd matrix be sdd,5 thi would establish the proof. indeed, for each term 
of the form αim 

2 
i (x) we can take Qk (onc again) to be a matrix of all zero except 

for a singl diagon entri correspond to the monomi mi in z(x), with thi entri 
equal αi. 

for each term of the form (β̂+ijmi(x) + β̃ 
+ 
ijmj(x)) 

2, we can take Qk to be a matrix 
of all zero except for four entir correspond to the monomi mi(x) and mj(x) 

in z(x). thi 2 × 2 block will then be 

( 
β̂+ij 
β̃+ij 

)( 
β̂+ij β̃ 

+ 
ij 

) 
. similarly, for each term of 

the form (β̂−ijmi(x)− β̃ 
− 
ijmj(x)) 

2, we can take Qk to be a matrix of all zero except for 
four entir correspond to the monomi mi and mj(x) in z(x). thi 2× 2 block 

5thi claim be not obviou from the definit but be appar from lemma 9 below which impli 
that sddn be a convex cone. 



12 amir ali ahmadi and anirudha majumdar 

will then be 

( 
β̂−ij 
−β̃−ij 

)( 
β̂−ij −β̃ 

− 
ij 

) 
. It remain to show that a 2 × 2 rank-1 posit 

semidefinit matrix be sdd.6 let A = 

( 
a 
b 

)( 
a b 

) 
be such a matrix. observ that 

( 
1 
a 0 
0 1b 

) 
A 

( 
1 
a 0 
0 1b 

) 
= 

( 
1 1 
1 1 

) 
be dd and henc A be by definit sdd. (note that if a or b be zero, then A be alreadi 
dd.) 

the follow character of sdd matrix will be import for us. 

theorem 8 (see theorem 8 and 9 by boman et al. [16]). A symmetr matrix 
Q be sdd if and onli if it have “factor width” at most 2; i.e., a factor Q = V V T , 
where each column of V have at most two nonzero entries. 

lemma 9. A symmetr n× n matrix Q be sdd if and onli if it can be express 
a 

(11) Q = 
∑ 
i<j 

M ij , 

where each M ij be an n × n matrix with zero everywher except for four entri 

(M ij)ii, (M 
ij)ij , (M 

ij)ji, (M 
ij)jj, which make the 2 × 2 matrix 

[ 
(M ij)ii (M 

ij)ij 
(M ij)ji (M 

ij)jj 

] 
symmetr and posit semidefinite. 

proof. thi be almost immedi from theorem 8: If Q = V V T for some n × k 
matrix V , then Q = 

∑k 
l=1 vlv 

T 
l , where vl denot the l-th column of V . sinc each 

column vl have at most two nonzero entries, say in posit i and j, each matrix vlv 
T 
l 

will be exactli of the desir form M ij in the statement of the lemma. conversely, 
if Q can be write a in (11), then we can write each M ij a M ij = wij,1w 

T 
ij,1 + 

wij,2w 
T 
ij,2, where the vector wij,1 and wij,2 have at most two nonzero entries. If we 

then construct a matrix V which have the collect of the vector wij,1 and wij,2 a 
columns, we will have Q = V V T . 

theorem 10. for ani fix d, optim over dsosn,2d (resp. sdsosn,2d) 
can be do with a linear program (resp. second order cone program) of size polynomi 
in n. 

proof. We will use the character of dsos/sdso polynomi give in theo- 
rem 5 and 7. In both cases, the equal p(x) = zT (x)qz(x),∀x can be impos by a 
finit set of linear equat in the coeffici of p and the entri of Q (these match 
the coeffici of p(x) with those of zT (x)qz(x)). the constraint that Q be dd can 
be imposed, e.g., by a set of linear inequ 

qii ≥ 
∑ 
j 6=i zij ,∀i, 

−zij ≤ qij ≤ zij ,∀i, j, i 6= j 

in variabl qij and zij . thi give a linear program. 
the constraint that Q be sdd can be impos via lemma 9 by a set of equal- 

iti constraint that enforc equat (11). the constraint that each 2 × 2 matrix 

6thi also impli that ani 2× 2 posit semidefinit matrix be sdd. 



dso and sdso optim 13[ 
(M ij)ii (M 

ij)ij 
(M ij)ji (M 

ij)jj 

] 
be psd be a “rotat quadrat cone” constraint and can be im- 

pose use socp [5, 51]: 

(M ij)ii + (M 
ij)jj ≥ 0, 

∣∣∣∣∣∣( 2(m ij)ij 
(M ij)ii − (M ij)jj 

) ∣∣∣∣∣∣≤ (M ij)ii + (M ij)jj . 
In both cases, the final LP and socp be of polynomi size becaus the size of the 
gram matrix be 

( 
n+d 
d 

) 
, which be polynomi in n for fix d. 

We have write publicly-avail code that autom the process of gener 
lp (resp. socps) from dso (resp. sdsos) constraint on a polynomial. more 
inform about thi can be found in the appendix. 

the abil to replac sdp with lp and socp be what result in signific 
speedup in our numer experi (see section 4). for the special case where the 
polynomi involv be quadrat forms, we get a systemat way of inner approxi- 
mate semidefinit programs. A gener sdp that minim tr(cx) subject to the 
constraint tr(aix) = bi, i = 1, . . . ,m, and X � 0, can be replac by 

• a diagon domin program (ddp); i.e., a problem of the form 

minim 
x∈sn 

tr(cx)(12) 

s.t. tr(aix) = bi, i = 1, . . . ,m, 

X dd, 

which be an lp, or 
• a scale diagon domin program (sddp); i.e., a problem of the form 

minim 
x∈sn 

tr(cx)(13) 

s.t. tr(aix) = bi, i = 1, . . . ,m, 

X sdd, 

which be an socp. 
ddp and sddp fit nice into the framework of conic program a they be 

optim problem over the intersect of an affin subspac with a proper cone 
(see, e.g., [9, chap. 2] for a review of conic programming). In section 4.4 and 4.5, 
we show applic of thi idea to problem in financ and statistics. 

3.2. the cone of r-dso and r-sdso polynomi and asymptot guar- 
antees. We now present a hierarchi of cone base on the notion of dso and sdso 
polynomi that can be use to good approxim the cone of nonneg polyno- 
mials. 

definit 11. for an integ r ≥ 0, we say that a polynomi p := p(x1, . . . , xn) 
be r-dso (resp. r-sdsos) if 

p(x) · ( 
n∑ 
i=1 

x2i ) 
r 

be dso (resp. sdsos). We denot the set of polynomi in n variabl and degre 2d 
that be r-dso (resp. r-sdsos) by rdsosn,2d (resp. rdsosn,2d). 

note that for r = 0 we recov our dsos/sdso definitions. moreover, becaus the 
multipli ( 

∑n 
i=1 x 

2 
i ) 
r be nonnegative, we see that for ani r, the properti of be 



14 amir ali ahmadi and anirudha majumdar 

(a) the lp-base r-dso hierarchy. (b) the socp-bas r-sdso hierarchy. 

fig. 3. the improv obtain by go one level up in the r-dsos/r-sdso hierarchi for 
the famili of bivari quartic in (10). 

r-dso or r-sdso be a suffici condit for nonnegativity: 

rdsosn,2d ⊆ rsdsosn,2d ⊆ psdn,2d. 

optim over r-dso (resp. r-sdsos) polynomi be still an LP (resp. socp). 
the proof of the follow theorem be ident to that of theorem 10 and henc 
omitted. 

theorem 12. for ani fix d and r, optim over the set rdsosn,d (resp. 
rsdsosn,d) can be do with linear program (resp. second order cone program- 
ming) of size polynomi in n. 

If we revisit the parametr famili of bivari quartic in (10), the improv 
obtain by go one level high in the hierarchi be illustr in figur 3. interest- 
ingly, for r ≥ 1, r-dso and r-sdso test for nonneg can sometim outperform 
the so test. the follow two exampl illustr this. 

exampl 3.1. consid the motzkin polynomi [59], m(x) = x41x 
2 
2 + x 

2 
1x 

4 
2 − 

3x21x 
2 
2x 

2 
3+x 

6 
3, which histor be the first know exampl of a nonneg polynomi 

that be not a sum of squares. one can give an lp-base nonneg certif of 
thi polynomi by show that M ∈ 2dsos3,6. hence, 2dsos3,6 * sos3,6. 

exampl 3.2. consid the polynomi p(x) = x41x 
2 
2 + x 

4 
2x 

2 
3 + x 

4 
3x 

2 
1 − 3x21x22x23. 

onc again thi polynomi be nonneg but not a sum of squar [74]. however, 
by solv an LP feasibl problem, one can check that p ∈ 1dsos3,6, which prof 
that p be nonnegative, and that 1dsos3,6 * sos3,6. 

It be natur to ask whether everi nonneg polynomi be r-dso (or r-sdsos) 
for some r? the follow theorem deal with thi question and provid asymptot 
guarante on r-dso (and henc r-sdsos) hierarchies. their proof reli on classic 
positivstellensätz from real algebra geometry. 

theorem 13. let p be an even7 posit definit form. then, there exist an 
integ r for which p be r-dso (and henc r-sdsos). 

proof. A well-known theorem of pólya [69] state that if a form f(x1, . . . , xn) be 
posit on the simplex (i.e., the set ∆n := {x ∈ rn|xi ≥ 0, 

∑ 
i xi = 1}), then there 

exist an integ r such that all coeffici of 

(x1 + · · ·+ xn)rf(x1, . . . , xn) 

7an even polynomi be a polynomi whose individu variabl be rais onli to even degrees. 



dso and sdso optim 15 

be positive. under the assumpt of the theorem, thi impli that there be an r 
for which the form p( 

√ 
x1, . . . , 

√ 
xn)(x1 + · · ·+ xn)r and henc the form 

p(x1, . . . , xn)(x 
2 
1 + · · ·+ x2n) 

have posit coefficients. but thi mean that p(x)( 
∑ 
i x 

2 
i ) be a nonneg weight 

sum of squar monomi and therefor clearli dso (see (8)). (in a gram matrix 
represent p(x)( 

∑ 
i x 

2 
i ) = z 

T (x)qz(x), the argument we just give show that we 
can take Q to be diagonal.) 

We remark that even form alreadi constitut a veri interest class of polyno- 
mial sinc they include, e.g., all polynomi come from coposit program ; 
see subsect 4.2. In fact, ani np-complet problem can be reduc in polynomi 
time to the problem of check whether a degree-4 even form be nonneg [60]. An 
applic of thi idea to the independ set problem in combinatori optim 
be present in subsect 4.2. 

the next proposit show that the even assumpt cannot be remov 
from theorem 13. 

proposit 14. for ani 0 < a < 1, the quadrat form 

(14) p(x1, x2, x3) = (x1 + x2 + x3) 
2 + a(x21 + x 

2 
2 + x 

2 
3) 

be posit definit but not r-sdso for ani r. 

proof. posit definit be immedi from have a > 0. let u show that 
the quadrat form (x1 + x2 + x3) 

2 be not r-sdso for ani r. consid the polynomi 

q(x) := (x1 + x2 + x3) 
2(x21 + x 

2 
2 + x 

2 
3) 
r, 

which be a form of degre 2r+ 2. note that the coeffici of x2r+21 in q be 1. observ 
also that q have the follow two monomials: 2x2r+11 x2 and 2x 

2r+1 
1 x3. suppos for 

the sake of contradict that q be sdsos. then it could be write a 

q(x) = 
∑ 
i 

αim 
2 
i (x) + 

∑ 
i,j 

(β̂+ijmi(x) + β̃ 
+ 
ijmj(x)) 

2 + 
∑ 
i,j 

(β̂−ijmi(x)− β̃ 
− 
ijmj(x)) 

2, 

where all monomi mi(x) and mj(x) be of degre r+1. So to produc the monomi 
2x2r+11 x2 and 2x 

2r+1 
1 x3 in q, the right hand side abov must includ the term 

(xr1x2 + x 
r+1 
1 ) 

2 + (xr1x3 + x 
r+1 
1 ) 

2. 

but thi also produc 2x2r+21 , which cannot be canceled. thi contradict the fact 
that the coeffici of x2r+21 in q be 1. 

To see that for ani a ∈ (0, 1) the polynomi p in the statement of the proposit 
cannot be r-sdso either, one can repeat the exact same argument and observ that 
the coeffici of x2r+21 would still not match. 

We remark that the form in (14) can be prove to be posit the improv 
present in section 5, in particular with a “factor width 3” proof system from sub- 
section 5.3. alternatively, one can work with the next theorem, which remov the 
assumpt of even from theorem 13 at the cost of doubl the number of vari- 
abl and the degree.8 

8instead of theorem 15, an earli version of thi paper be quot a result by habicht [33] 
from [73, p. 1], [71, p. 8]. We thank clau scheider for inform u that the statement of 
habicht [33] in german be be misquot by u and the abov references. 



16 amir ali ahmadi and anirudha majumdar 

theorem 15 (see section 4 of [2]). An n-variat form p : = p(x) of degre 2d be 
posit definit if and onli if there exist a posit integ r that make the follow 
form r-dsos: 

p(v2 − w2)− 1√ 
r 

( 

n∑ 
i=1 

(v2i − w2i )2)d + 
1 

2 
√ 
r 

( 

n∑ 
i=1 

(v4i + w 
4 
i )) 

d. 

In [2, section 4], thi theorem be use to construct LP and socp-bas converg 
hierarchi of low bound for the gener polynomi optim problem (2) when 
the feasibl set be compact. 

4. numer exampl and applications. In thi section, we consid sev- 
eral numer exampl that highlight the scalabl of the approach present in 
thi paper. comparison to exist method on exampl consid in the litera- 
ture be provid whenev possible. A softwar packag write use the system 
polynomi optim toolbox (spot) [57] includ a complet implement 
of the present method and be avail online9. the toolbox featur effici poly- 
nomial algebra and allow u to setup the large-scal lp and socp aris from 
our examples. the appendix provid a brief introduct to the softwar packag 
and the associ function requir for set up the dsos/sdso program 
consid in thi paper. the lp and socp result from our program be solv 
with the mosek solver on a machin with 4 processor and a clock speed of 3.4 
ghz and 16gb ram. run time for comparison to sdp-base approach be 
present for the mosek sdp solver10. 

4.1. lower bound on polynomi optim problems. An import 
applic of sum of squar optim be to obtain low bound on polynomi 
optim problems. In thi subsection, we consid the particular problem of 
minim a homogen polynomi p(x) of degre 2d on the unit sphere (i.e., the 
set {x ∈ rn| xtx = 1}). thi well-studi problem be strongli np-hard even when 
d = 2. it optim valu be easili see to be equival to the optim valu of the 
follow problem: 

maxim 
γ 

γ(15) 

s.t. p(x)− γ(xtx)d ≥ 0,∀x ∈ rn. 

By replac the nonneg condit with a sos/dsos/sdso constraint, 
the result problem becom an sdp/lp/socp. tabl 1 and 2 compar optim 
valu and run time respect on problem of increas size. We restrict 
ourselv to quartic form and vari the number of variabl n between 5 and 70. 
tabl 1 compar the optim valu for the dsos, sdsos, 1-dsos, 1-sdso and 
so relax of problem (15) on quartic form whose coeffici be fulli dens 
and drawn independ from the standard normal distribut (we consid a singl 
random instanc for each n). We note that the optim valu present here be 
repres of numer experi we perform for a broader set of random 

9link to spotless iso softwar package: 
https://github.com/anirudhamajumdar/spotless/tree/spotless iso 

10we note that the mosek solver be much faster on our problem than the more commonli use 
sdp solver sedumi [81]. 

https://github.com/anirudhamajumdar/spotless/tree/spotless_iso 


dso and sdso optim 17 

n = 10 n = 15 n = 20 n = 25 n = 30 n = 40 n = 50 n = 60 n = 70 
dso -5.31 -10.96 -18.012 -26.45 -36.85 -62.30 -94.26 -133.02 -178.23 

sdso -5.05 -10.43 -17.33 -25.79 -36.04 -61.25 -93.22 -131.64 -176.89 
1-dso -4.96 -9.22 -15.72 -23.58 NA NA NA NA NA 

1-sdso -4.21 -8.97 -15.29 -23.14 NA NA NA NA NA 
so -1.92 -3.26 -3.58 -3.71 NA NA NA NA NA 

baron -175.41 -1079.89 -5287.88 - -28546.1 - - - - 
tabl 1 

comparison of low bound on the minimum of a quartic form on the sphere for vari 
number of variables. 

n = 10 n = 15 n = 20 n = 25 n = 30 n = 40 n = 50 n = 60 n = 70 
dso 0.30 0.38 0.74 15.51 7.88 10.68 25.99 58.10 342.76 

sdso 0.27 0.53 1.06 8.72 5.65 18.66 47.90 109.54 295.30 
1-dso 0.92 6.26 37.98 369.08 ∞ ∞ ∞ ∞ ∞ 

1-sdso 1.53 14.39 82.30 538.5389 ∞ ∞ ∞ ∞ ∞ 
so 0.24 5.60 82.22 1068.66 ∞ ∞ ∞ ∞ ∞ 

baron 0.35 0.62 3.69 - - - - - - 
tabl 2 

comparison of run time (in seconds) averag over 10 instanc for low bound a 
quartic form on the sphere for vari number of variables. 

instanc (includ coeffici drawn from a uniform distribut instead of the 
normal distribution). also, in all our experiments, we could verifi that the so 
bound actual coincid with the true global optim valu of the problem. thi be 
do by find a point on the sphere that produc a match upper bound. 

As the tabl illustrate, both dso and sdso scale up to problem of dimens 
n = 70. thi be well beyond the size of problem handl by so programming, 
which be unabl to deal with problem with n larg than 25 due to memori (ram) 
constraints. while the price we pay for thi increas scalabl be suboptimality, thi 
be toler in mani applic (a we show in other exampl in thi section). 

tabl 1 also compar the approach present in thi paper to the low bound 
obtain at the root node of the branch-and-bound procedur in the popular global 
optim packag baron [78].11 thi comparison be onli do up to dimens 
30 sinc beyond thi we ran into difficulti pass the larg polynomi to baron’ 
user interface. 

tabl 2 present run times12 averag over 10 random instanc for each n. 
there be a signific differ in run time between dsos/sdso and so 
begin at n = 15. while we be unabl to run so program beyond n = 25, 
dso and sdso program for n = 70 take onli a few minut to execute. memori 
constraint prevent u from execut program for n larg than 70. the result 
indicate, however, that it may be possibl to run larg program within a reason 
amount of time on a machin equip with more ram. 

4.2. coposit program and combinatori optimization. A sym- 
metric matrix Q ∈ rn×n be coposit if xtqx ≥ 0 for all x ≥ 0 (i.e., for all x in the 
nonneg orthant). the problem of optim a linear function over affin section 
of the cone Cn of n × n coposit matrix have recent receiv a lot of attent 

11we thank aida khajavirad for run the baron experi for us. 
12the baron instanc be implement on a 64-bit intel xeon x5650 2.66ghz processor use 

the cplex LP solver. 



18 amir ali ahmadi and anirudha majumdar 

from the optim commun [27], sinc it can exactli model sever problem of 
combinatori and nonconvex optim [17], [27], [19]. for instance, the size α(g) 
of the larg independ set 13 of a graph G on n node be equal to the optim valu 
of the follow coposit program [22]: 

minim 
γ 

γ 

s.t. γ(a+ i)− J ∈ cn,(16) 

where A be the adjac matrix of the graph, I be the ident matrix, and J be the 
matrix of all ones. 

It be easi to see that a matrix Q be coposit if and onli if the quartic form 
(x.2)tq(x.2), with x.2 := (x21, x 

2 
2, . . . , x 

2 
n) 
T , be nonnegative. hence, by requir thi 

form to be r-sos/r-sdsos/r-dsos, one obtain inner approxim to the cone Cn that 
can be optim over use semidefinite, second order cone, and linear programming. 
the so version of thi idea go back to the phd thesi of parrilo [65]. 

In thi section, we compar the qualiti of these bound use anoth hierarch 
lp-base method in the literatur [17], [22]. the r-th level of thi LP hierarchi 
(refer to a the pólya LP from here onwards) requir that the coeffici of the 
form (x.2)tq(x.2) ·(x21 + · · ·+x2n)r be nonnegative. thi be motiv by a theorem by 
pólya, which state that thi constraint will be satisfi for r larg enough (assum 
xtqx > 0 for all nonzero x ≥ 0). It be not difficult to see that the pólya LP be alway 
domin by the LP which requir (x.2)tq(x.2) to be r-dsos. thi be becaus the 
latter requir the underli gram matrix to be diagon dominant, while the 
former requir it to be diagonal, with nonneg diagon entries. 

In [22], de klerk and pasechnik show that when the pólya LP be appli to ap- 
proxim the coposit program in (16), then the precis independ set number of 
the graph be obtain within α(g)2 step of the hierarchy. By the previou argument, 
the same claim immedi hold for the r-dso (and henc r-sdsos) hierarchies. 

tabl 3 revisit exampl 5.2 of [17], where upper bound on the independ set 
number of the complement of the graph of an icosahedron be computed. (thi be a 
graph on 12 node with independ set number equal to 3; see [17] for it adjac 
matrix.) As the result illustrate, so program provid an exact upper bound 
(sinc the size of the larg stabl set be necessarili an integer). the second level 
of the r-dso and r-sdso hierarchi also provid an exact upper bound. In contrast, 
the LP base on polya’ theorem in [17] give the upper bound ∞ for the 0-th and 
the 1-st level, and an upper bound of 6 at the second level. In contrast to the pólya 
lp, one can show that the 0-th level of the r-dso LP alway produc a finit upper 
bound on the independ set number. In fact, thi bound will alway be small than 
n−min di + 1, where di be the degre of node i [1, theorem 5.1] . 

4.3. convex regress in statistics. next, we consid the problem of fit 
a function to data subject to a constraint on the function’ convexity. thi be an 
import problem in statist and have a wide domain of applic includ valu 
function approxim in reinforc learning, option price and model of 
circuit for geometr program base circuit design [34, 35]. formally, we be 
give N pair of data point (xi, yi) with xi ∈ rn, yi ∈ R and our task be to find a 

13an independ set of a graph be a subset of it node no two of which be connected. the 
problem of find upper bound on α have mani applic in schedul and cod theori [52]. 



dso and sdso optim 19 

polya LP r-dso r-sdso so 

r = 0 ∞ 6.000 6.000 3.2362 
r = 1 ∞ 4.333 4.333 NA 
r = 2 6.000 3.8049 3.6964 NA 

tabl 3 
comparison of upper bound on the size of the larg independ set in the complement of 

the graph of an icosahedron. 

dso sdso so 

d = 2 35.11 33.92 21.28 

d = 4 14.86 12.94 NA 
tabl 4 

comparison of fit error for convex re- 
gression. 

dso sdso so 

d = 2 0.49 0.66 0.53 

d = 4 145.85 240.18 ∞ 
tabl 5 

comparison of run time (in s) for con- 
vex regression. 

convex function f from a famili F that minim an appropri notion of fit 
error (e.g., L1 error): 

minim 
f∈f 

N∑ 
i=1 

|f(xi)− yi| 

s.t. f be convex. 

the convex constraint here can be impos by requir that the function wth(x)w 
in 2n variabl (x,w) associ with the hessian matrix h(x) of f(x) be nonnegative. 
restrict ourselv to polynomi function f of bound degree, we obtain the 
follow optim problem: 

minim 
f∈rd[x] 

N∑ 
i=1 

|f(xi)− yi| 

s.t. wth(x)w ≥ 0,∀x,w, 

where h(x) be again the hessian of f(x). As before, we can replac the nonneg 
constraint with a dsos/sdsos/so constraint. for our numer experiment, we gener- 
ate 300 random vector xi in r20 drawn i.i.d. from the standard normal distribution. 
the function valu yi be comput a follows: 

yi = exp(‖xi‖2) + η, 

where η be chosen i.i.d. from the standard normal distribution. tabl 4 and 5 
present the fit error and run time for the dsos/sdsos/so program 
result from restrict the class of function F to polynomi of degre d = 2 and 
d = 4. As the result illustrate, we be abl to obtain significantli small error with 
polynomi of degre 4 use dso and sdso (compar to so with d = 2), 
while the so program for d = 4 do not run due to memori constraints. 

4.4. option pricing. An import problem in financi econom be that of 
determin the price of a deriv secur such a an option give the price of the 
underli asset. signific progress be make in tackl thi problem with the 
advent of the black-schol formula, which oper under two assumptions: (i) the 



20 amir ali ahmadi and anirudha majumdar 

underli stock price be govern by geometr brownian motion, and (ii) there be 
no arbitrage. A natur question that have be consid in financi mathemat 
be to see if one can provid bound on the price of an option in the no-arbitrag 
set give much more minim assumpt on the dynam of the stock price. 
one approach to thi question—studied, e.g., in [13], [18], —i to assum that we be 
onli give the first k moment of the stock price and want to optim bound the 
price of the option. 

more precisely, we consid that we be give m stocks, an associ option with 
payoff function φ : rm+ → R (which will typic depend on the strike price of the 
option), a vector of n moment functions, fi : r+m → R, i = 0, 1, . . . , n (f0 be assum 
to be 1), and the correspond vector of moment q = (q0, . . . , qn) (here q0 = 1). the 
problem of upper bound the price of the option can then be formul a follow 
[13]: 

maxim 
π 

eπ[φ(x)](17) 

s.t. eπ[fi(x)] = qi, i = 0, . . . , n, 

π(x) ≥ 0,∀x ∈ rm+ . 

here, the expect be take over all martingal measur π, defin on rm+ . We 
consid here the case where one be give the mean µ and covari matrix σ of the 
stock prices. problem (17) can then be cast a the follow problem (see [13, section 
6.2]) 

minim 
y,i 

y0 + 

n∑ 
i=1 

yiµi + 

n∑ 
i=1 

n∑ 
j=1 

yij(σij + µiµj)(18) 

s.t. xti x+ ytx+ y0 ≥ φ(x), ∀x ≥ 0, 

which for mani common function φ of interest (see e.g. below) give rise to a copos- 
itiv program. A well-known and obviou suffici condit for a matrix M to be 
coposit be for it to have a decomposit M = P + N , where P be psd and N be 
element-wis nonneg [65]. thi allow one to appli sdp to problem (18) and ob- 
tain upper bound on the option price. By replac the psd condit on the matrix 
P with a dd/sdd condition, we obtain a ddp/sddp. 

We first compar the ddp/sddp/sdp approach on an exampl from [18, 
section 4], which consid the problem of upper bound the price of a european 
call option with m = 3 underli assets. the vector of mean of the asset be 
µ = [44.21, 44.21, 44.21]t and the covari matrix is: 

(19) σ = 

184.04 164.88 164.88164.88 184.04 164.88 
164.88 164.88 184.04 

 . 
further, we have the follow payoff function, which depend on the strike price 

K: 

(20) φ(x) = max(x1 −k,x2 −k,x3 −k, 0). 

tabl 6 compar the upper bound for differ strike price use ddp/sddp/sdp. 
In each case, the upper bound obtain from the sdp be exact. thi can be verifi 
by find a distribut that achiev the upper bound (i.e., find a match 



dso and sdso optim 21 

exact sdp sddp ddp 

K = 30 21.51 21.51 21.51 132.63 

K = 35 17.17 17.17 17.17 132.63 

K = 40 13.20 13.20 13.20 132.63 

K = 45 9.84 9.84 9.85 132.63 

K = 50 7.30 7.30 7.30 132.63 
tabl 6 

comparison of upper bound on option price for differ strike price obtain use sdp, 
sddp and ddp. here, the number of underli asset be m = 3. 

sdp sddp ddp 

upper bound 18.76 19.42 252.24 

run time 2502.6 s 24.36 s 11.85 s 
tabl 7 

comparison of upper bound and run time for a larg (m = 50) option price exampl 
use sdp, sddp and ddp. 

low bound). for example, when K = 30, the distribut support on the set of 
four point (5.971, 5.971, 5.971), (54.03, 46.02, 46.02, 46.02), (46.02, 54.03, 46.02) and 
(46.02, 46.02, 54.03) in R3 with probabl mass 0.105, 0.298, 0.298, 0.298 respec- 
tive do the job. the upper bound obtain use sddp be almost ident to the 
bound from sdp for each strike price. the ddp bound be loose, and interestingli 
do not chang with the strike price. run time for the differ method on 
thi small exampl be neglig and henc not presented. 

In order to demonstr the scalabl of ddp and sddp, we consid a larg 
scale random exampl with m = 50 underli assets. the mean and covari 
be take to be the sampl mean and covari of 100 instanc of vector belong 
to Rm with element drawn uniformli and independ from the interv [0, 10]. 
the strike price be K = 5 and the payoff function be again 

(21) φ(x) = max(x1 −k,x2 −k, . . . , xm −k, 0). 

tabl 7 compar upper bound and run time for the differ methods. 
sddp provid u with a bound that be veri close to the one obtain use sdp, with 
a signific speedup in comput (approxim a factor of 100). the run 
time for ddp be compar to sddp, but the bound be not a tight. 

4.5. spars pca. next, we consid the problem of spars princip compon 
analysi (spars pca). In contrast to standard pca, where the princip compon 
(pcs) in gener depend on all the observ variables, the goal of spars pca be to 
identifi princip compon that onli depend on small subset of the variabl [87]. 
while the statist fidel of the result represent of the data in term of 
spars pc will in gener be low than the standard pcs, spars pc can significantli 
enhanc interpret of the results. thi featur have prove to be veri use 
in applic such a financ and analysi of gene expressions; see, e.g., [21] and 
refer therein. 

given a n× n covari matrix A, the problem of find spars princip com- 



22 amir ali ahmadi and anirudha majumdar 

ponent can be write a the follow optim problem: 

maxim 
x 

xtax(22) 

s.t. ‖x‖2 = 1, 
card(x) ≤ k. 

here, card(x) be the cardin (number of non-zero entries) of x and k be a give 
threshold. the problem can be reformul a the follow rank-constrain matrix 
optim problem [21]: 

maxim 
X 

tr(ax)(23) 

s.t. tr(x) = 1, 

card(x) ≤ k2, 
X � 0, rank(x) = 1. 

In [21], the author propos “dspca”, an sdp relax of thi problem that be 
obtain by drop the rank constraint and replac the cardin constraint 
with a constraint on the l1 norm: 

maxim 
X 

tr(ax)(24) 

s.t. tr(x) = 1, 

1T |x|1 ≤ k, 
X � 0. 

the optim valu of problem (24) be an upper bound on the optim valu of (22). 
further, when the solut X1 to (24) have rank equal to one, the sdp relax be 
tight and the domin eigenvector x1 of X1 be the optim load of the first spars 
PC [21]. when a rank one solut be not obtained, the domin eigenvector can still 
be retain a an approxim solut to the problem. further spars pc can be 
obtain by deflat A to obtain: 

A2 = A− (xt1 ax1)x1xt1 

and re-solv the sdp with A2 in place of A (and iter thi procedure). 
the framework present in thi paper can be use to obtain LP and socp 

relax of (22) by replac the constraint X � 0 by the constraint X ∈ dd∗n 
or X ∈ sdd∗n respectively, where dd∗n and sdd∗n be the dual cone of ddn and 
sddn (see [3, section 3.3] for a descript of these dual cones). sinc S 

+ 
n ⊆ sdd∗n ⊆ 

dd∗n, we be guarante that the result optim solut will be upper bound 
on the sdp solution. further, a in the sdp case, the relax be tight when a 
rank-on solut be obtained, and onc again, if a rank-on solut be not obtained, 
we can still use the domin eigenvector a an approxim solution. 

We first consid exampl 6.1 from [21]. In thi example, there be three hidden 
variabl distribut normally: 

V1 ∼ N (0, 290), V2 ∼ N (0, 300), V3 = −0.3v1 + 0.925v2 + �, � ∼ N (0, 1). 

these hidden variabl gener 10 observ variables: 

Xi = Vj + � 
j 
i , � 

j 
i ∼ N (0, 1), 



dso and sdso optim 23 

X1 X2 X3 X4 X5 X6 X7 X8 X9 x10 expl. var. 
pca, pc1 0.116 0.116 0.116 0.116 -0.395 -0.395 -0.395 -0.395 -0.401 -0.401 60.0 % 
pca, pc2 -0.478 -0.478 -0.478 -0.478 -0.145 -0.145 -0.145 -0.145 0.010 0.010 39.6 % 
other, pc1 0 0 0 0 -0.5 -0.5 -0.5 -0.5 0 0 40.9 % 
other, pc2 0.5 0.5 0.5 0.5 0 0 0 0 0 0 39.5 % 

tabl 8 
comparison of load of princip compon and explain varianc for standard pca and 

spars versions. here, the label “other” denot spars pca base on sdp, ddp, and sddp. each 
of these give the optim spars solution. 

ddp sddp dspca 
no. time (s) nnz opt. expl. time (s) nnz opt. expl. time (s) nnz opt. expl. 
1 0.89 4 35.5 0.067 % 1.40 14 30.6 0.087 % 1296.9 5 30.5 0.086 % 
2 1.18 4 36.6 0.071 % 1.42 14 34.4 0.099 % 1847.3 6 33.6 0.092 % 
3 1.46 4 49.5 0.079 % 1.40 24 41.3 0.097 % 1633.0 16 40.2 0.096 % 
4 1.14 4 44.1 0.072 % 1.80 17 38.7 0.10 % 1984.7 8 37.6 0.091 % 
5 1.10 4 36.7 0.060 % 1.53 34 33.0 0.068 % 2179.6 10 31.7 0.105 % 

tabl 9 
comparison of run times, number of non-zero elements, optim values, and explain 

varianc for five large-scal spars pca exampl use covari matrix of size 100× 100. 

with j = 1 for i = 1, . . . , 4, j = 2 for i = 5, . . . , 8 and j = 3 for i = 9, 10, and �ji 
independ for j = 1, 2, 3 and i = 1, . . . , 10. thi knowledg of the distribut of the 
hidden and observ variabl allow u to comput the exact 10×10 covari matrix 
for the observ variables. the spars pca algorithm describ abov can then be 
appli to thi covari matrix. tabl 8 present the first two princip compon 
comput use standard pca, ddp, sddp and dspca (correspond to sdp). 
As the tabl illustrates, the load correspond to the first two pc comput 
use standard pca be not sparse. all other method (ddp, sddp, and sdp) give 
exactli the same answer and correspond to a rank-on solution, i.e., the optim spars 
solution. As expected, the sparsiti come at the cost of a reduct in the varianc 
explain by the pc (see [87] for comput of the explain variance). 

next, we consid a larger-scal example. We gener five random 100× 100 co- 
varianc matrix of rank 4. tabl 9 present the run times, number of non-zero 
entri (nnz) in the top princip component14, optim valu of the program (24) 
(opt.), and the explain varianc (expl.). the optim valu for ddp and sddp 
upper bound the sdp solut a expected, and be quit close in value. the num- 
ber of non-zero entri and explain varianc be compar across the differ 
methods. the run time be between 1100 and 2000 time faster for ddp in com- 
parison to sdp, and between 900 and 1400 time faster for sddp. henc the exampl 
illustr that one can obtain a veri larg speedup with the approach present here, 
with onli a small sacrific in qualiti of the approxim spars pcs. 

4.6. applic in control theory. As a final applic of the method 
present in thi paper, we consid two exampl from control theori and robotics. 
the applic of so program in control theori be numer and includ 
the comput of region of attract of polynomi system [65], feedback control 
synthesi [40], robust analysi [83], and comput of the joint spectral radiu 
for uncertain linear system [64]. A thorough treatment of the applic of the 

14note that the entri of the pc be threshold lightli in order to remov spuriou non-zero 
element aris from numer inaccuraci in the solvers. 



24 amir ali ahmadi and anirudha majumdar 

fig. 4. An il- 
lustrat of the N- 
link pendulum sys- 
tem (with N = 6). 

−0.05 −0.04 −0.03 −0.02 −0.01 0 0.01 0.02 0.03 0.04 0.05 
−0.25 

−0.2 

−0.15 

−0.1 

−0.05 

0 

0.05 

0.1 

0.15 

0.2 

0.25 

θ 
1 
(radians) 

θ̇ 
1 
(r 
ad 
/s 
) 




so 
sdso 
dso 

(a) θ1-θ̇1 subspace. 

−0.05 −0.04 −0.03 −0.02 −0.01 0 0.01 0.02 0.03 0.04 0.05 
−0.4 

−0.3 

−0.2 

−0.1 

0 

0.1 

0.2 

0.3 

0.4 

θ 
6 
(radians) 

θ̇ 
6 
(r 
ad 
/s 
) 




so 
sdso 
dso 

(b) θ6-θ̇6 subspace. 

fig. 5. figur reproduc from [53] compar project of the roa 
comput for the 6-link pendulum system use dsos, sdso and so 
programming. 

(s)dso approach to control problem be beyond the scope of thi paper but can be 
found in a differ paper [53], which be joint work with tedrake. here we briefli 
highlight two exampl from [53] that we consid particularli representative. 

most of the applic in control theori mention abov reli on so program- 
ming for check lyapunov inequ that certifi stabil of a nonlinear system. 
As discuss in section 1.1, one can comput (inner approxim of) the region of 
attract (roa) of a dynam system ẋ = f(x) by find a lyapunov function 
V : Rn → R that satisfi the follow conditions: 

(25) 
V (x) > 0 ∀x 6= 0, and 
V̇ (x) = 〈∇v (x), f(x)〉 < 0 ∀x ∈ {x| V (x) ≤ β, x 6= 0}. 

thi guarante that the set {x| V (x) ≤ β} be a subset of the roa of the system, 
i.e. initi condit that begin in thi sublevel set converg to the origin. for poly- 
nomial dynam systems, one can specifi suffici condit for (25) use so 
program [65]. By replac the so constraint with (s)dso constraints, we 
can comput inner approxim to the roa more efficiently. while the approxi- 
mation will be more conserv in general, the abil to tradeoff conservat with 
comput time and scalabl be an import one in control applications. 

4.6.1. region of attract for an invert n-link pendulum. As an 
illustration, we consid the problem of comput roa for the underactuatedn -link 
pendulum depict in figur 4. thi system have 2N state x = [θ1, . . . , θN , θ̇1, . . . , θ̇n ] 
compos of the joint angl (with the vertic line) and their derivatives. there 
be N − 1 control input (the joint closest to the base be not actuated). We take 
the unstabl “upright” posit of the system to be the origin of our state space 
and design a linear quadrat regul (lqr) control in order to stabil thi 
equilibrium. A polynomi approxim of the dynam of the close loop system 
be obtain by a taylor expans of order 3. use lyapunov function of degre 2 
result in the time deriv of the lyapunov function be quartic and henc yield 
dsos/sdsos/so constraint on a polynomi of degre 4 in 2N variables. 

figur 5(a) and 5(b) compar project of the roa comput for the system 
with N = 6 onto two 2−dimension subspac of the state space. As the plot 
suggest, the roa comput use sdso be onli slightli more conserv than the 
roa comput use so programming. In fact, compar the volum of the two 
roas, we find: 



dso and sdso optim 25 

fig. 6. A visual of the model of the atla humanoid robot, along with the hardwar 
platform (inset) on which the paramet of the model be based. (pictur of robot reproduc with 
permiss from boston dynamics.) 

(26) 
V ol 

1/2n 
roa-sdso 

V ol 
1/2n 
roa-so 

= 0.79. 

here, the volum have be correctli rescal in the standard manner by the 
dimens of the ambient space. the roa comput use dso be much small 
(but still potenti use in practice). 

compar run time of the differ approach on thi example, we find 
that the LP correspond to the dso program take 9.67 seconds, and the socp 
correspond to the sdso program take 25.9 seconds. the run time of the 
so program be 1526.5 second use mosek and 23676.5 second use sedumi. 
hence, in particular dso be approxim 2500 time faster than so use sedumi 
and 150 time faster than so use mosek, while sdso be 900 time faster in 
comparison to sedumi and 60 time faster than mosek for sos. 

Of cours the real benefit of our approach be that we can scale to problem where 
so program ceas to run due to memory/comput constraints. tabl 10 
illustr thi abil by compar run time of the program obtain use our 
approach with so program for differ valu of 2N (number of states). As 
expected, for case where the so program do run, the dso and sdso program 
be significantli faster. further, the so program obtain for 2N > 12 be too larg 
to run (due to memori constraints). In contrast, our approach allow u to handl 
almost twice a mani states. 

2N (# states) 4 6 8 10 12 14 16 18 20 22 

dso < 1 0.44 2.04 3.08 9.67 25.1 74.2 200.5 492.0 823.2 

sdso < 1 0.72 6.72 7.78 25.9 92.4 189.0 424.74 846.9 1275.6 

so (sedumi) < 1 3.97 156.9 1697.5 23676.5 ∞ ∞ ∞ ∞ ∞ 
so (mosek) < 1 0.84 16.2 149.1 1526.5 ∞ ∞ ∞ ∞ ∞ 

tabl 10 
tabl reproduc from [53] show runtim comparison (in seconds) for roa comput 

on n-link system. 

4.6.2. control synthesi for a humanoid robot. In our final example, we 
highlight a robot applic consid in joint work with tedrak in [53]. control 
of humanoid robot be an import problem in robot and present a signific 
challeng due to the nonlinear dynam of the system and high dimension of the 
state space. here we show how the approach describ in thi paper can be use to 



26 amir ali ahmadi and anirudha majumdar 

(a) nomin 
pose 
(fix 
point) 

(b) stabil 
pose 1 

(c) stabil 
pose 2 

(d) stabil 
pose 3 

(e) stabil 
pose 4 

(f) stabil 
pose 5 

fig. 7. figur reproduc from [53] show the nomin posit of the robot, i.e., the fix 
point be stabil (subplot (a)), and configur of the robot that be stabil by the control 
design use sdso program (subplot (b)-(f)). A video of simul of the control start 
from differ initi condit be avail onlin at http://youtu.be/lmat556ar5c. 

design a balanc control for a model of the atla robot show in figur 6. thi 
robot be design and built by boston dynam inc. and be use for the 2015 
darpa robot challenge. 

our model of the robot be base on physic paramet of the hardwar platform 
and have 30 state and 14 inputs. the task consid here be to balanc the robot on 
it right toe. the balanc control be construct by search for both a quadrat 
lyapunov function and a linear feedback control law in order to maxim the size of 
the result region of attraction. the lyapunov condit be impos use sdso 
programming. We taylor expand the dynam about the equilibrium to degre 3 in 
order to obtain polynomi dynamics. the total comput time be approxim 
22.5 minutes. We note that so program be unabl to handl thi system due to 
memori (ram) constraints. 

figur 7 demonstr the perform of the result control from sdso 
program by plot initi configur of the robot that be stabil to the 
fix point. As the plot illustrates, the control be abl to stabil a veri wide rang 
of initi conditions. A video of simul of the close loop system start from 
differ initi condit be avail onlin at http://youtu.be/lmat556ar5c. 

5. improv on dso and sdso optimization. while dso and 
sdso techniqu result in signific gain in term of solv time and scalability, 
they inevit lead to some loss in solut accuraci when compar to the so 
approach. In thi section, we briefli outlin three possibl strategi to mitig thi 
loss. the first two (section 5.1 and 5.2) gener sequenc of linear and second order 
cone programs, while the third (section 5.3) work with “small” (fixed-size) semidef- 
init programs. the reader may recal that the r-dso and r-sdso hierarchi of 
section 3.2 could also be use to improv on dso and sdso techniques. like the 
first two method that we present here, they do so while stay in the realm of LP 
and socp. they differ from these method on two crucial point however: (i) they be 
more expens to implement, and (ii) they approxim the cone of so polynomi 
“blindly” irrespect of a particular object function. thi be in contrast to the 
method that we present in section 5.1 and 5.2, which approxim the cone in the 
direct of a specif linear object function. 

for breviti of exposition, we explain how all three strategi can be appli to 

http://youtu.be/lmat556ar5c 
http://youtu.be/lmat556ar5c 


dso and sdso optim 27 

approxim a gener semidefinit program: 

minim 
x∈sn 

tr(cx)(27) 

s.t. tr(aix) = bi, i = 1, . . . ,m, 

X � 0. 

A treatment tailor to the case of sum of squar program can be found in the 
refer we provide. 

5.1. iter chang of basis. In [3], ahmadi and hall build on the notion 
of diagon and scale diagon domin to provid a sequenc of improv inner 
approxim to the cone Pn of psd matrix in the direct of the object function 
of an sdp at hand. the idea be simple: defin a famili of cones15 

dd(u) := {M ∈ Sn | M = utqu for some dd matrix q}, 

parametr by an n × n matrix U . optim over the set dd(u) be an LP 
sinc U be fixed, and the defin constraint be linear in the coeffici of the two 
unknown matrix M and Q. furthermore, the matrix in dd(u) be all psd; i.e., 
∀u, dd(u) ⊆ pn. 

the propos in [3] be to solv a sequenc of lps, index by k, by replac the 
condit X � 0 by X ∈ dd(uk): 

dsosk := min 
x∈sn 

tr(cx)(28) 

s.t. tr(aix) = bi, i = 1, . . . ,m, 

X ∈ dd(uk). 

the sequenc of matrix {uk} be defin a follow 

(29) 
U0 = I 

uk+1 = chol(xk), 

where Xk be an optim solut to the LP in (28). 
note that the first LP in the sequenc optim over the set of diagon dom- 

inant matrices. By defin uk+1 a a choleski factor of xk, improv of the 
optim valu be guarante in each iteration. indeed, a Xk = U 

T 
k+1iuk+1, and the 

ident matrix I be diagon dominant, we see that Xk ∈ dd(uk+1) and henc be 
feasibl for iter k+ 1. thi impli that the optim valu at iter k+ 1 be at 
least a good a the optim valu at the previou iteration; i.e., dsosk+1 ≤ dsosk 
(in fact, the inequ be strict under mild assumptions; see [3]). 

In an analog fashion, one can construct a sequenc of socp that inner ap- 
proxim Pn with increas quality. thi time, we defin a famili of cone 

sdd(u) := {M ∈ Sn | M = utqu, for some sdd matrix q}, 

parameter again by an n × n matrix U . for ani U , optim over the set 
sdd(u) be an socp and we have sdd(u) ⊆ pn. thi lead u to the follow 
iter socp sequence: 

15one can think of dd(u) a the set of matrix that be dd after a chang of coordin via 
the matrix U . 



28 amir ali ahmadi and anirudha majumdar 

sdsosk := min 
x∈sn 

tr(cx)(30) 

s.t. tr(aix) = bi, i = 1, . . . ,m, 

X ∈ sdd(uk). 

assum exist of an optim solut Xk at each iteration, we can defin 
the sequenc {uk} iter in the same way a be do in (29). use similar 
reasoning, we have sdsosk+1 ≤ sdsosk. In practice, the sequenc of upper 
bound {sdsosk} approach faster to the sdp optim valu than the sequenc of 
the LP upper bound {dsosk}. figur 8 show the improv (in everi direction) 

(a) LP inner approxim (b) socp inner approxim 

fig. 8. figur reproduc from [3] show improv (in all directions) after one iter 
of the chang of basi algorithm. 

obtain just by a singl iter of thi approach. the outer set in green in both 
subfigur be the feasibl set of a randomli gener semidefinit program. the set in 
black be the DD (left) and the sdd (right) inner approximations. what be show in 
dark blue in both case be the boundari of the improv inner approxim after one 
iteration. note that the socp in particular fill up almost the entir spectrahedron 
in a singl iteration. 

We refer the interest reader to [3] for more details, in particular for an expla- 
nation of how the same techniqu can be use (via duality) to outer approxim 
feasibl set of semidefinit programs. 

5.2. column generation. In [1], ahmadi, dash, and hall design anoth iter- 
ativ method for inner approxim the set of psd matrix use linear and second 
order cone programming. their approach combin dsos/sdso techniqu with 
idea from the theori of column gener in large-scal linear and integ program- 
ming. the high-level idea be to approxim the sdp in (27) by a sequenc of lp 
(parameter by t): 

minim 
x∈sn,αi 

tr(cx)(31) 

s.t. tr(aix) = bi, i = 1, . . . ,m, 

X = 

t∑ 
i=1 

αibi, 

αi ≥ 0, i = 1, . . . , t,(32) 



dso and sdso optim 29 

where b1, . . . , Bt be fix psd matrices. these matrix be initi to be the 
extrem ray of ddn (recal lemma 6), i.e., all rank one matrix viv 

T 
i , where the 

vector vi have at most two nonzero components, each equal to ±1. onc thi initi LP 
be solved, then one add one (or sometim several) new psd matrix Bj to problem 
(31) and resolves. thi process then continues. In each step, the new matrix Bj be 
pick care to bring the optim valu of the LP closer to that of the sdp. usually, 
the construct of Bj involv solv a “price subproblem” (in terminolog of the 
column gener literature), which add appropri cut plane to the dual of 
(31); see [1] for more details. 

the socp analogu of thi process be similar. the sdp in (27) be inner approxi- 
mat by a sequenc of socp (parameter by t): 

minim 
x∈sn,λi∈s2 

tr(cx)(33) 

s.t. tr(aix) = bi, i = 1, . . . ,m, 

X = 

t∑ 
i=1 

viλiv 
T 
i , 

Λi � 0, i = 1, . . . , t, 

where v1, . . . , Vt be fix n × 2 matrices. they be initi a the set of matrix 
that have zero everywhere, except for a 1 in the first column in posit j and a 1 
in the second column in posit k 6= j. thi give exactli sddn (via lemma 9). 
In subsequ steps, one (or sometim several) appropriately-chosen matrix Vi be 
add to problem (33). these matrix be obtain by solv price subproblem 
and help bring the optim valu of the socp closer to that of the sdp in each 
iteration. 

(a) LP iterations. (b) socp iterations. 

fig. 9. figur reproduc from [1] show the success improv on the dd (left) and sdd 
(right) inner approxim of a spectrahedron via five iter of the column gener method. 

figur 9 show the improv obtain by five iter of thi process on a 
randomli gener sdp, where the object be to maxim a linear function in the 
northeast direction. 5 

5.3. factor-width k matrix with k > 2. A relev gener of sdd 
matrix be through the notion of factor-width, defin by boman et al. [16]. the 
factor-width of a symmetr psd matrix Q be the small integ k for which Q can 



30 amir ali ahmadi and anirudha majumdar 

be write a Q = V V T , where each column of V contain at most k nonzeros. 
equivalently, the factor-width of Q be the small k for which Q can be write a a 
sum of psd matrix that be nonzero onli on a singl k × k princip submatrix. 

If we denot the cone of n × n symmetr matrix of factor-width k by FW kn , 
we have that FW kn ⊆ Pn for all k ∈ {1, . . . , n}, FW 2n = sddn (cf. lemma 9), and 
fwnn = pn. for valu of k ∈ {2, . . . , n− 1}, one get an increasingli more accur 
inner approxim to the set of psd matrices, all outperform the approxim 
give by sdd matrices. We do not consid these cone in thi paper a it be alreadi 
know that for k = 3, a represent base on second order cone program be not 
possibl [28]. nevertheless, work with FW 3n can be use a it involv semidefinit 
constraint that be small (3×3) and henc effici solvable. unfortun though, 
optim over FW 3n requir o(n 

3) such semidefinit constraint which in mani 
applic can be prohibitive. We believ that a promis futur direct would 
be to use the column gener framework on section 5.2 to work with a subset of 
the extrem ray of FW kn (for small k) and gener addit one on the fli base 
on problem structure. 

some initi experi with FW kn have be perform by ding and lim [24]. 
the author also develop self-concord barrier function for these cone and show 
that ani second order cone program can be write a an optim problem over 
FW 2n , i.e., a scale diagon domin program (recal the definit from sec- 
tion 3.1). In relat work, perment and parrilo [68] consid optim problem 
over FW kn (and their dual cones) for facial reduct in semidefinit programming. 
We believ the notion of factor-width be like to receiv more attent in upcom 
year in the theori of matrix optimization. 

6. conclusions. We have propos more scalabl altern to so program- 
ming by introduc inner approxim to the sum of squar cone in the form of 
the cone of dso and sdso polynomials. these cone can be optim over use 
LP and socp respectively. the departur from sdp allow u to obtain signific 
gain in term of scalability. our numer exampl from a divers rang of appli- 
cation includ polynomi optimization, combinatori optimization, statist and 
machin learning, deriv pricing, control theory, and robot demonstr that 
with reason tradeoff in optimality, we can handl problem size that be well 
beyond the current capabl of so programming. In particular, we have show 
that our approach be abl to tackl dens problem with a mani a 70 polynomi 
variabl (with degree-4 polynomials). On the theoret front, we have show that 
the (s)dso approach share mani of the theoret asymptot guarante usu- 
alli associ with so programming. finally, in the last section of thi paper, we 
review recent approach that be develop with the idea of bridg the gap 
between the (s)dso approach and the so one. one can obtain improv optim 
valu use these method at the cost of addit comput time. the appendix 
provid a brief but complet tutori on the toolbox that be use to gener the 
numer result in the paper. the accompani code be freeli avail online. 

We would like to emphas that a key benefit of our approach be that it can 
be appli in ani applic where so program be use in order to obtain 
potenti signific gain in scalability. our hope be that the (s)dso approach 
may open up applic area that have previous be beyond reach due to the 
limit in scalabl of so programming. We also forese possibl for real- 
time applic [4], [55]. indeed, technolog for real-tim linear and second order 
cone program be alreadi come to fruition [26], [56]. 



dso and sdso optim 31 

7. appendix. A complet implement of the code use to gener the nu- 
meric result present in thi paper be write use the system polynomi op- 
timiz toolbox (spot) [57] and be freeli avail online16. the toolbox featur 
effici polynomi algebra and allow u to setup the large-scal lp and socp 
aris from our examples. In thi appendix, we provid a brief introduct to the 
software. thi be not meant a a comprehens tutori on the spot toolbox (for 
thi one may refer to spot’ documentation17). rather, the goal here be to provid 
an introduct suffici for set up and solv the dso and sdso program 
in thi paper. the code relev for thi purpos be includ in a branch of spot 
that we have name iso (for “insid sum of squares”). 

7.1. instal spot. download the softwar packag from github avail 
here: 

https://github.com/anirudhamajumdar/spotless/tree/spotless iso 

next, start matlab and run the spot install.m script. thi script will setup the 
matlab path and compil a few mex functions. the user may wish to save the new 
matlab path for futur use. 

7.2. variabl and polynomials. polynomi be defin and manipul 
by the @msspoli class of spot. In order to defin a new variable, one can use the 
msspoly.m function: 

>> x = msspoly(‘x’) 

which creat the polynomi p(x) = x. the argument to thi function be the name 
of the creat variabl and be restrict to four charact chosen from the alphabet 
(lower case and upper case). A matlab vector of variabl can be creat by pass 
a second argument to the function: 

>> x = msspoly(‘x’,n). 

thi will creat a n × 1 vector of variabl that can be access use standard 
array indexing. multivari polynomi can then be construct a follows: 

>> x = msspoly(‘x’,3); 

>> p = 2*x(1)^2 - 5*x(2)^2 + x(3)^2 

variabl can be manipul and oper on use a varieti of functions. these 
includ standard arithmet oper (e.g. addition, multiplication, dot product) 
and oper for manipul vector (e.g. concatenating, reshaping, transposing). 
other use function include: 

deg.m: return the total degre of a polynomial. If a second argument in the 
form of a msspoli be provided, the degre with respect to these variabl be returned. 

16link to the software: 
https://github.com/anirudhamajumdar/spotless/tree/spotless iso 

17link to spot’ documentation: 
https://github.com/spot-toolbox/spotless/blob/master/doc/manual.pdf 

https://github.com/anirudhamajumdar/spotless/tree/spotless_iso 
https://github.com/anirudhamajumdar/spotless/tree/spotless_iso 
https://github.com/spot-toolbox/spotless/blob/master/doc/manual.pdf 


32 amir ali ahmadi and anirudha majumdar 

diff.m: differenti a polynomi (first argument) with respect to a set of 
msspoli variabl (second argument). the result be the matrix of partial derivatives. 

subs.m: substitut the third argument in place of the second argument wherev 
it appear in the first argument. 

7.3. programs. program involv dsos/sdsos/so constraint be con- 
struct use the spotsosprog class. In thi section, we demonstr the work 
of spotsosprog with the help of an example. In particular, we take the problem of 
minim a form on the unit sphere consid in thi paper. the follow exampl 
be also avail in doc/examples/sdsos_example.m. 

% construct polynomi which be to be minim 

x = msspoly(‘x’,6); 

vx = monomials(x,4:4); 

randn(‘state’,0) 

cp = randn(1,length(vx)); 

p = cp*vx; 

thi block of code construct the polynomi that be to be low bounded. In order to 
do this, we creat a six dimension vector x of variabl use the msspoli command 
introduc before. next, we construct a vector of monomi use the monomi 
function. the first input to thi function be the msspoli variabl over which the 
monomi be defined. the second input to the function be the rang of degre the 
monomi should have. In thi case, sinc we be consid homogen quartics, 
the rang be simpli 4 : 4 (i.e., just 4). 

% build program 

prog = spotsosprog; 

prog = prog.withindeterminate(x); 

[prog,gamma] = prog.newfree(1); 

prog = prog.withdsos(p - gamma*(x’*x)^2); 

thi block of code set up the program and constraints. first, the program be 
initi in the form of the variabl prog. thi object will contain inform 
about constraint and decis variables. next, we declar the variabl x to be an 
indetermin or abstract variabl (thu distinguish it from a decis variable). 
decis variabl be creat use the newfre function in the class spotsosprog. 
the input to thi function be the number of new decis variabl to be created. 
the output be the updat program and a variabl correspond to the decis 
variable. In our case, we need a singl variabl gamma to be declared. finally, we 
specifi a dso constraint on p - gamma*(x’*x)^2 use the withdso command. 
there be correspond function withsdso and withso that can be use to setup 



dso and sdso optim 33 

sdso or so constraints. 

% setup option and solv program 

option = spot sdp default options(); 

% use just the interior point algorithm to clean up 

options.solveroptions.msk ipar BI clean optim = ... 

... ‘msk optim intpnt’; 

% don’t use basi identif 

options.solveroptions.msk ipar intpnt basi = ‘msk BI never’; 

% display solver output 

options.verbos = 1; 

sol = prog.minimize(-gamma, @spot mosek, options); 

%get valu of gamma for optim solut 

gamma optim = double(sol.eval(gamma)) 

finally, in thi block of code, we dictat an option structur for the program. In 
particular, the field options.solveropt contain option that be specif to the 
solver to be use (mosek in our case). the minim command be use to specifi the 
object of the program (which must be linear in the decis variables), the function 
handl correspond to the solver to be used, and the structur of options. currently, 
mosek, gurobi and sedumi be the support solvers. so, for example, in order to 
use the gurobi solver for a (s)dso program, we would specifi the function handl 
@spot gurobi. 

the output of the minim command be a solut structure, which contain 
diagnost inform and allow one to access the optim decis variables. the 
last line of our exampl code demonstr how to obtain the optim variabl gamma 
and convert it to a matlab doubl type. 

7.4. addit functionality. next, we review addit function not 
cover in the exampl above. while thi section be not meant to be an exhaust 
list of all the function avail in spot, it should be suffici to reproduc 
the numer result present in thi paper. In the line of code present in the 
follow sections, it be assum that prog be an object of the spotsosprog class, x be 
a msspoli variabl of size n and an indetermin variabl of prog. these variabl 
can be initi a in the exampl abov with the follow line of code: 

prog = spotsosprog; 

x = msspoly(‘x’,n); 

prog = prog.withindeterminate(x); 

7.4.1. creat decis variables. It be often use to construct a polyno- 
mial whose coeffici be decis variables. thi can be achiev with the newfre 
and monomi function introduc above. In particular, one can creat a vector 
of monomi in a msspoli variabl x of a give degre d use the command v = 
monomials(x,0:d). then, the set of coeffici can be declar use [prog,c] = 



34 amir ali ahmadi and anirudha majumdar 

prog.newfree(length(v)). finally, one can obtain the desir polynomi by mul- 
tipli these two together: p = c’*v. 

It be also possibl to creat other type of decis variables. for example, the 
follow function can be use to creat variou type of matrix decis variables: 

newsym: new symmetr matrix. 
newdd: new symmetr matrix constrain to be diagon dominant. 
newsdd: new symmetr matrix constrain to be scale diagon dominant. 
newpsd: new symmetr posit semidefinit matrix. 
newdddual: new symmetr matrix constrain to lie in the dual of the cone of 

diagon domin matrices. 
newsdddual: new symmetr matrix constrain to lie in the dual of the cone of 

scale diagon domin matrices. 
the input to these function be the size of the desir (square) matrix. for 

example, in order to creat a 10×10 symmetr matrix Q constrain to be diagon 
dominant, one can use the follow line of code: 

[prog,q] = prog.newdd(10); 

7.4.2. specifi constraints. In addit to the withdsos, withsdso and 
withso function introduc previously, constraint on exist decis variabl 
can be specifi use the follow functions: 

witheqs: set up constraint of the form expr = 0, where expr be the input to 
the function and be a matrix whose element be to be constrain to be equal to 0. 

withpos: set up constraint of the form expr ≥ 0, where expr be the input to 
the function and be a matrix whose element be to be constrain to be nonnegative. 

note that the function witheq and withpo allow one to specifi constraint in 
a vector manner, thu avoid matlab’ potentially-slow for-loops. 

withdd: constrain a symmetr matrix (the input to the function) to be diago- 
nalli dominant. 

withsdd: constrain a symmetr matrix (the input to the function) to be scale 
diagon dominant. 

withpsd: constrain a symmetr matrix (the input to the function) to be posit 
semidefinite. 

In each case above, the input must be affin function of the decis variabl of 
the program. the output of these function be an updat spotsosprog object that 
contain the new constraints. We illustr the use of the function witheq with the 
help of a simpl example. the other function can be use in a similar manner. 

prog = spotsosprog; 

[prog,tau1] = prog.newfree(10); 

[prog,tau2] = prog.newfree(10); 

prog = prog.witheqs(tau1 - tau2);(34) 

In thi example, the element of the 10× 1 decis vector tau1 be constrain 
to be equal to the element of the vector tau2. 

withpolyeqs: In order to constrain two polynomi p1(x) and p2(x) to be equal 
to each other for all x, one may use the function withpolyeqs. thi function will 



dso and sdso optim 35 

constrain the coeffici of the two polynomi to be equal. here be a simpl example: 

prog = spotsosprog; 

x = msspoly(‘x’,2); 

prog = prog.withindeterminate(x); 

[prog,c] = prog.newfree(4); 

p1 = (c(1) + c(2))*x(1)^2 + c(3)*x(2)^2; 

p2 = 2*x(1)^2 + c(4)*x(2)^2; 

prog = prog.withpolyeqs(p1 - p2); 

thi will constrain c(1) + c(2) = 2 and c(3) = c(4). 

7.4.3. check if a polynomi be dsos. the three util function isdsos, 
issdso and isso allow one to check if a give polynomi be dsos, sdsos, or so 
respectively. the onli input to the function be the polynomi to be checked. the 
output be a boolean variabl indic whether the polynomi be in fact dsos/ sd- 
sos/ sos, the gram matrix, and the monomi basi correspond to the gram matrix 
(these last two be non-empti onli if the give polynomi be in fact dsos/sdsos/sos). 
the follow line of code provid a simpl example: 

x = msspoly(‘x’,3); 

p = x(1)^2 + 5*x(2)^2 + 3*x(3)^2; 

[isdsos,q,v] = isdsos(p)(35) 

one can check that the polynomi p - v’*q*v be the zero polynomi (up to 
numer tolerances). 

acknowledgments. We would like to thank pablo parrilo for acquaint u 
with scale diagon domin matrices, and georgina hall for mani correct and 
simplif on the first draft of thi work. our gratitud extend to russ tedrak 
and the member of the robot locomot group at mit for sever insight dis- 
cussions, particularli around control applications. We thank frank perment and 
mark tobenkin for their help with the numer implement of dsos/sdso 
program in spot, and aida khajavirad for run the experi of section 4.1 
with baron. finally, thi work have benefit from question and comment from 
sever colleagues, among whom we gladli acknowledg greg blekherman, stephen 
boyd, sanjeeb dash, etienn de klerk, jesu de loera, lijun ding, didier henrion, 
jean bernard lasserre, lek-heng lim, bruce reznick, jame saunderson, and bernd 
sturmfels. 

refer 

[1] A. A. ahmadi, S. dash, and G. hall, optim over structur subset of posit 
semidefinit matrix via column generation, discret optimization, (2016). 

[2] A. A. ahmadi and G. hall, On the construct of converg hierarchi for polynomi 
optim base on certif of global positivity. avail at https://arxiv.org/abs/ 
1709.09307, 2017. 

[3] A. A. ahmadi and G. hall, sum of squar basi pursuit with linear and second order cone 
programming, contemporari mathematics, (2017). 

[4] A. A. ahmadi and A. majumdar, some applic of polynomi optim in oper 
research and real-tim decis making, optim letters, 10 (2016), pp. 709–729. 

https://arxiv.org/abs/1709.09307 
https://arxiv.org/abs/1709.09307 


36 amir ali ahmadi and anirudha majumdar 

[5] F. alizadeh and D. goldfarb, second-ord cone programming, mathemat programming, 
95 (2003), pp. 3–51. 

[6] E. artin, über die zerlegung definit funktionen in quadrate, hamb. abh., 5 (1927), 
pp. 100–115. 

[7] C. bachoc and F. vallentin, new upper bound for kiss number from semidefinit pro- 
gramming, journal of the american mathemat society, 21 (2008), pp. 909–924. 

[8] G. barker and D. carlson, cone of diagon domin matrices, pacif journal of math- 
ematics, 57 (1975), pp. 15–32. 

[9] A. ben-tal and A. nemirovski, lectur on modern convex optimization: analysis, algo- 
rithms, and engin applications, vol. 2, siam, 2001. 

[10] D. P. bertseka and J. N. tsitsiklis, introduct to probability, vol. 1, athena scientif 
belmont, ma, 2002. 

[11] D. bertsimas, R. M. freund, and X. A. sun, An acceler first-ord method for solv 
so relax of unconstrain polynomi optim problems, optim meth- 
od and software, 28 (2013), pp. 424–441. 

[12] D. bertsimas, D. A. iancu, and P. A. parrilo, A hierarchi of near-optim polici for 
multistag adapt optimization, ieee transact on automat control, 56 (2011), 
pp. 2809–2824. 

[13] D. bertsima and I. popescu, On the relat between option and stock prices: a convex 
optim approach, oper research, 50 (2002), pp. 358–374. 

[14] D. bertsima and I. popescu, optim inequ in probabl theory: a convex optimiza- 
tion approach, siam journal on optimization, 15 (2005), pp. 780–804. 

[15] G. blekherman, P. A. parrilo, and R. thomas, semidefinit optim and convex 
algebra geometry, siam seri on optimization, 2013. 

[16] E. G. boman, D. chen, O. parekh, and S. toledo, On factor width and symmetr H- 
matrices, linear algebra and it applications, 405 (2005), pp. 239–248. 

[17] I. M. bomz and E. De klerk, solv standard quadrat optim problem via lin- 
ear, semidefinit and coposit programming, journal of global optimization, 24 (2002), 
pp. 163–185. 

[18] P. P. boyl and X. S. lin, bound on conting claim base on sever assets, journal of 
financi economics, 46 (1997), pp. 383–400. 

[19] S. burer, coposit programming, in handbook on semidefinite, conic and polynomi op- 
timization, springer, 2012, pp. 201–218. 

[20] cplex, v12. 2: user manual for cplex, intern busi machin corporation, 46 
(2010), p. 157. 

[21] A. d aspremont, L. E. ghaoui, M. I. jordan, and G. R. lanckriet, A direct formul 
for spars pca use semidefinit programming, siam review, 49 (2007), pp. 434–448. 

[22] E. de klerk and D. V. pasechnik, approxim of the stabil number of a graph via 
coposit programming, siam journal on optimization, 12 (2002), pp. 875–892. 

[23] E. De klerk and R. sotirov, exploit group symmetri in semidefinit program re- 
laxat of the quadrat assign problem, mathemat programming, 122 (2010), 
pp. 225–246. 

[24] L. ding and L. H. lim, higher-ord cone programming. avail also a a master’ thesis, 
univers of chicago, 2016. 

[25] A. C. doherty, P. A. parrilo, and F. M. spedalieri, distinguish separ and entangl 
states, physic review letters, 88 (2002). 

[26] A. domahidi, E. chu, and S. boyd, ecos: An socp solver for emb systems, in 
preeced of the european control conference, ieee, 2013, pp. 3071–3076. 

[27] M. dür, coposit programming–a survey, in recent advanc in optim and it appli- 
cation in engineering, springer, 2010, pp. 3–20. 

[28] H. fawzi, On repres the posit semidefinit cone use the second-ord cone, arxiv 
preprint arxiv:1610.04901, (2016). 

[29] M. R. garey and D. S. johnson, comput and intractability, W. H. freeman and co., san 
francisco, calif., 1979. 

[30] K. gatermann and P. A. parrilo, symmetri groups, semidefinit programs, and sum of 
squares, journal of pure and appli algebra, 192 (2004), pp. 95–128. 

[31] S. A. gershgorin, uber die abgrenzung der eigenwert einer matrix, bulletin de l’académi 
de scienc de l’urss. class de scienc mathématiqu et na, (1931), pp. 749–754. 

[32] M. R. gupta, A. cotter, J. pfeifer, K. voevodski, K. canini, A. mangylov, 
W. moczydlowski, and A. van esbroeck, monoton calibr interpol look-up 
tables, journal of machin learn research, 17 (2016), pp. 1–47. 

[33] W. habicht, uber die zerlegung strikt definit formen in quadrate, comment. math. helv., 



dso and sdso optim 37 

12 (1940), pp. 317–322. 
[34] L. hannah and D. B. dunson, multivari convex regress with adapt partitioning., 

journal of machin learn research, 14 (2013), pp. 3261–3294. 
[35] L. A. hannah and D. B. dunson, ensembl method for convex regress with applic 

to geometr program base circuit design, arxiv preprint arxiv:1206.4645, (2012). 
[36] J. harrison, verifi nonlinear real formula via sum of squares, in theorem prove in 

higher order logics, springer, 2007, pp. 102–118. 
[37] D. hilbert, über die darstellung definit formen al summ von formenquadraten, math. 

ann., 32 (1888). 
[38] C. hillar and l.-h. lim, most tensor problem be np-hard, arxiv preprint arxiv:0911.1393, 

(2009). 
[39] M. huneault and F. galiana, A survey of the optim power flow literature, ieee transac- 

tion on power systems, 6 (1991), pp. 762–770. 
[40] Z. jarvis-wloszek, R. feeley, W. tan, K. sun, and A. packard, some control appli- 

cation of sum of squar programming, in proceed of the 42nd ieee confer on 
decis and control, vol. 5, ieee, 2003, pp. 4676–4681. 

[41] H. khalil, nonlinear systems, prentic hall, 2002. third edition. 
[42] j.-l. krivine, anneaux préordonnés, journal d’analys mathématique, 12 (1964), pp. 307–326. 
[43] R. laraki and J. B. lasserre, semidefinit program for min–max problem and games, 

mathemat programming, 131 (2012), pp. 305–332. 
[44] J. B. lasserre, global optim with polynomi and the problem of moments, siam 

journal on optimization, 11 (2001), pp. 796–817. 
[45] J. B. lasserre, moments, posit polynomi and their applications, vol. 1, world scien- 

tific, 2009. 
[46] J. B. lasserre, k.-c. toh, and S. yang, A bound degre so hierarchi for polynomi 

optimization, euro journal on comput optimization, (2015), pp. 1–31. 
[47] M. laurent, sum of squares, moment matrix and optim over polynomials, in emerg- 

ing applic of algebra geometry, springer, 2009, pp. 157–270. 
[48] M. laurent, M. E. nagy, and A. varvitsiotis, complex of the posit semidefinit 

matrix complet problem with a rank constraint, discret geometri and optimization, 
69 (2013), pp. 105–120. 

[49] X. li, D. sun, and k.-c. toh, qsdpnal: A two-phas proxim augment lagrangian 
method for convex quadrat semidefinit programming, arxiv preprint arxiv:1512.08872, 
(2015). 

[50] L. liberti, C. lavor, N. maculan, and A. mucherino, euclidean distanc geometri and 
applications, siam review, 56 (2014), pp. 3–69. 

[51] M. S. lobo, L. vandenberghe, S. boyd, and H. lebret, applic of second-ord cone 
programming, linear algebra and it applications, 284 (1998), pp. 193–228. 

[52] L. lovász, On the shannon capac of a graph, ieee transact on inform theory, 25 
(1979), pp. 1–7. 

[53] A. majumdar, A. ahmadi, and R. tedrake, control and verif of high-dimension 
system with dso and sdso programming, in 53rd ieee confer on decis and 
control, ieee, 2014, pp. 394–401. 

[54] I. R. manchester, M. M. tobenkin, M. levashov, and R. tedrake, region of attract 
for hybrid limit cycl of walk robots, proceed of ifac, 44 (2011), pp. 5801–5806. 

[55] J. mattingley and S. boyd, real-tim convex optim in signal processing, signal pro- 
cess magazine, ieee, 27 (2010), pp. 50–61. 

[56] J. mattingley and S. boyd, cvxgen: a code gener for emb convex optimization, 
optim and engineering, 13 (2012), pp. 1–27. 

[57] A. megretski, system polynomi optim tool (spot), 2010. 
[58] A. mosek, the mosek optim software, onlin at http://www. mosek. com, 54 (2010), 

pp. 2–1. 
[59] T. S. motzkin, the arithmetic-geometr inequality, in inequ (proc. sympos. wright- 

patterson air forc base, ohio, 1965), academ press, new york, 1967, pp. 205–224. 
[60] K. G. murti and S. N. kabadi, some np-complet problem in quadrat and nonlinear 

programming, mathemat programming, 39 (1987), pp. 117–129. 
[61] Y. nesterov, squar function system and optim problems, in high perform 

optimization, vol. 33 of appl. optim., kluwer acad. publ., dordrecht, 2000, pp. 405–440. 
[62] J. nie and M. schweighofer, On the complex of putinar’ positivstellensatz, journal of 

complexity, 23 (2007), pp. 135–150. 
[63] J. nie and L. wang, regular method for sdp relax in large-scal polynomi 

optimization, siam journal on optimization, 22 (2012), pp. 408–428. 



38 amir ali ahmadi and anirudha majumdar 

[64] P. parrilo and A. jadbabaie, approxim of the joint spectral radiu use sum of squares, 
linear algebra and it applications, 428 (2008), pp. 2385–2402. 

[65] P. A. parrilo, structur semidefinit program and semialgebra geometri method in ro- 
bust and optimization, phd thesis, california institut of technology, may 2000. 

[66] P. A. parrilo, semidefinit program relax for semialgebra problems, mathemat- 
ical programming, 96 (2003), pp. 293–320. 

[67] P. A. parrilo, polynomi game and sum of squar optimization, in proceed of the 45th 

ieee confer on decis and control, 2006. 
[68] F. perment and P. parrilo, partial facial reduction: simplified, equival sdp via 

approxim of the psd cone, arxiv preprint arxiv:1408.4685, (2014). 
[69] G. pólya, über posit darstellung von polynomen, vierteljschr. naturforsch. ges. zürich, 

73 (1928), pp. 141–145. 
[70] I. popescu, A semidefinit program approach to optimal-mo bound for convex 

class of distributions, mathemat of oper research, 30 (2005), pp. 632–657. 
[71] V. powers, posit polynomi and sum of squares: theori and practice, real algebra 

geometry, (2011). 
[72] M. putinar, posit polynomi on compact semi-algebra sets, indiana univers mathe- 

matic journal, 42 (1993), pp. 969–984. 
[73] B. reznick, uniform denomin in hilbert’ 17th problem, math z., 220 (1995), pp. 75–97. 
[74] B. reznick, some concret aspect of hilbert’ 17th problem, in contemporari mathematics, 

vol. 253, american mathemat society, 2000, pp. 251–272. 
[75] B. reznick, blenders, in notion of posit and the geometri of polynomials, springer, 

2011, pp. 345–373. 
[76] C. riener, T. theobald, L. J. andrén, and J. B. lasserre, exploit symmetri in sdp- 

relax for polynomi optimization, mathemat of oper research, 38 (2013), 
pp. 122–141. 

[77] M. roozbehani, optim of lyapunov invari in analysi and implement of 
safety-crit softwar systems, phd thesis, massachusett institut of technology, 2008. 

[78] N. V. sahinidis, baron: A gener purpos global optim softwar package, journal of 
global optimization, 8 (1996), pp. 201–205. 

[79] N. Z. shor, class of global minimum bound of polynomi functions, cybernetics, 23 (1987), 
pp. 731–734. (russian orig.: kibernetika, no. 6, (1987), 9–11). 

[80] G. stengle, A nullstellensatz and a positivstellensatz in semialgebra geometry, mathema- 
tisch annalen, 207 (1974), pp. 87–97. 

[81] J. F. sturm, use sedumi 1.02, a matlab toolbox for optim over symmetr cones, 
optim method and software, 11 (1999), pp. 625 – 653. 

[82] R. tae, B. dumitrescu, and L. vandenberghe, multidimension fir filter design via 
trigonometr sum-of-squar optimization, ieee journal of select topic in signal pro- 
cessing, 1 (2007), pp. 641–650. 

[83] U. topcu, A. packard, P. seiler, and G. balas, robust region-of-attract estimation, 
ieee transact on automat control, 55 (2010), pp. 137 –142. 

[84] F. vallentin, symmetri in semidefinit programs, linear algebra and it applications, 430 
(2009), pp. 360–369. 

[85] L. vandenbergh and S. boyd, semidefinit programming, siam review, 38 (1996), pp. 49– 
95. 

[86] x.-y. zhao, D. sun, and k.-c. toh, A newton-cg augment lagrangian method for 
semidefinit programming, siam journal on optimization, 20 (2010), pp. 1737–1765. 

[87] H. zou, T. hastie, and R. tibshirani, spars princip compon analysis, journal of 
comput and graphic statistics, 15 (2006), pp. 265–286. 


1 introduct 
1.1 whi optim over nonneg polynomials? 

2 review of the semidefinit programming-bas approach and comput consider 
3 dso and sdso optim 
3.1 the cone of dso and sdso polynomi 
3.2 the cone of r-dso and r-sdso polynomi and asymptot guarante 

4 numer exampl and applic 
4.1 lower bound on polynomi optim problem 
4.2 coposit program and combinatori optim 
4.3 convex regress in statist 
4.4 option price 
4.5 spars pca 
4.6 applic in control theori 
4.6.1 region of attract for an invert n-link pendulum 
4.6.2 control synthesi for a humanoid robot 


5 improv on dso and sdso optim 
5.1 iter chang of basi 
5.2 column gener 
5.3 factor-width k matrix with k>2 

6 conclus 
7 appendix 
7.1 instal spot 
7.2 variabl and polynomi 
7.3 program 
7.4 addit function 
7.4.1 creat decis variabl 
7.4.2 specifi constraint 
7.4.3 check if a polynomi be dso 


refer 

