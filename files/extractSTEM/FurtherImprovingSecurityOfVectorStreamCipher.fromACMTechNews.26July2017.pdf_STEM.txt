






































nolta, ieic 

paper 

further improv secur of vector 
stream cipher 

atsushi iwasaki 1a) and ken umeno 2 

1 fukuoka institut of technolog 

wajiro-higashi, higashiku, fukuoka 811-0295, japan 

2 graduat school of informatics, kyoto univers 

yoshida-honmachi, sakyo-ku, kyoto citi 606-8501, japan 

a) a-iwasaki@fit.ac.jp 

receiv octob 10, 2016; revis januari 17, 2017; publish juli 1, 2017 

abstract: vector stream cipher (vsc) be a stream cipher which consist of permut 
polynomi over a ring of modulo 2w. the algorithm for gener key stream be veri simpl 
and the encrypt be veri fast. some theoret attack for vsc have be report so far sinc 
the invent of vsc in 2004. then, the author propos some improv and develop 
“vector stream cipher 2.0 (vsc 2.0)” to be immun against the theoret attacks. In thi 
paper, we propos further improv of vsc 2.0 to publish a a new chao cipher “vector 
stream cipher 2.1 (vsc2.1)”. vsc 2.1 be faster and more secur than vsc 2.0. our result 
suggest that permut polynomi over a ring of modulo 2w be use for cryptography. 

key words: stream cipher, chaos, pseudorandom number, permut polynomi 

1. introduct 
vector stream cipher (vsc) be a stream cipher which be develop by one of the author at commu- 
nicat research laboratori (now call the nation institut of inform and commun 
technology) in 2004 [1]. although stream cipher be usual construct by shift regist and other 
part base on finit field theory, vsc be construct by permut polynomi over a ring of 
modulo 2w [2] and so be classifi in chao cipher. for digit comput and digit signal processors, 
a modulo 2w oper be practic negligible. therefore, the valu of permut polynomi 
over a ring of modulo 2w can be calcul veri fast, and so vsc be veri fast. the properti of the 
polynomi be also use for light implement of vsc. 

On the other hand, the secur of vsc have be investig by sever research [3–6], and 
some secur problem against for the theoret attack be report though ani practic attack 
break vsc have not be report so far [4–6]. (in thi paper, “theoret attack” mean an 
attack, which current need too much comput and so cannot practic break cipher with 
today’ computers. thus, a cipher which be proven to be immun against theoret attack can be 
say to have a certain provabl security, while the success of a theoret attack lead to a potenti 
risk to be attack with future’ computers. On the other hand, “practic attack” mean an attack 
which can practic break cipher with today’ computers.) In order to avoid the problems, the 

215 

nonlinear theori and it applications, ieice, vol. 8, no. 3, pp. 215–223 c©ieic 2017 doi: 10.1587/nolta.8.215 



author propos in 2016 some improv of vsc and develop a new algorithm “vector stream 
cipher 2.0 (vsc 2.0)” [7]. although vsc 2.0 be more secur than the origin vsc, someth to be 
optim be left. In thi paper, we propos further improv of vsc a a result of optim and 
set it a new cipher call “vector stream cipher 2.1”. 

permut polynomi over a ring of modulo 2w have not be appli for cryptographi and not 
be studi except some applic and research [2, 8–12]. our purpos of thi research be not onli 
to develop a new cipher but also to explor possibl of the permut polynomi and chao in 
the field of cryptography. 

thi paper be construct a follows. In section 2 and 3, we introduc the algorithm of the origin 
vsc and vsc 2.0, respectively. In section 4, we propos improv for vsc and vsc 2.0 and 
describ the optim design a a new cipher “vector stream cipher 2.1”. In section 5, we perform 
some experi to investig the secur of the methods. finally, we conclud thi paper. 

2. vector stream cipher 

In thi section, we introduc vector stream cipher 128 (vsc128) [1] which be one kind of origin 
vsc. vsc128 requir 128-bit secret key and 128-bit initi vector. the encrypt algorithm be a 
follows: 

1. assum that A, B, C, D, X, Y , Z and W be 32-bit integ variables. assign a secret key to 
A, B, C and D, and an initi vector to X, Y , Z and W . 

2. repeat the follow oper 8 times. (in thi paper, we call the oper “round”.) 

(a) assum that a, b, c, d, x, y, z and w be 32-bit integ variables. calcul the valu of 
a, b, c, d, x, y, z and w a follows. 

a = A − (A mod 4) + 1 mod 232, 
b = B − (B mod 4) + 1 mod 232, 
c = C − (C mod 4) + 1 mod 232, 
d = D − (D mod 4) + 1 mod 232, 
x = X − (X mod 4) + 1 mod 232, 
y = Y − (Y mod 4) + 1 mod 232, 
z = Z − (Z mod 4) + 1 mod 232, 
w = W − (W mod 4) + 1 mod 232. 

In thi paper, we regard “mod” a modulu operator. 

(b) assum that a′, b′, C ′, d′, X ′, Y ′, Z ′ and W ′ be 32-bit integ variables. 
calcul the valu of a′, b′, C ′, d′, X ′, Y ′, Z ′ and W ′ a follows. 

A′ = a(2a + y) mod 232, 

B′ = b(2b + x) mod 232, 

C ′ = c(2c + z) mod 232, 

D′ = d(2d + w) mod 232, 

X ′ = x(2x + c) mod 232, 

Y ′ = Y (2i + d) mod 232, 

Z ′ = z(2z + a) mod 232, 

W ′ = W (2w + b) mod 232. 

(c) regard (a′, b′, C ′, d′, X ′, Y ′, Z ′,w ′) a a 256-bit sequence, and perform 5-bit left rota- 
tional shift. after that, copi the sequenc to (a, B, C, D, X, Y, Z, W ). write mathemat- 
ically, 

216 



A = (a′ << 5) ⊕ (b′ >> 27) mod 232, B = (b′ << 5) ⊕ (C ′ >> 27) mod 232, 
C = (C ′ << 5) ⊕ (d′ >> 27) mod 232, D = (d′ << 5) ⊕ (X ′ >> 27) mod 232, 
X = (X ′ << 5) ⊕ (Y ′ >> 27) mod 232, Y = (Y ′ << 5) ⊕ (Z ′ >> 27) mod 232, 
Z = (Z ′ << 5) ⊕ (W ′ >> 27) mod 232, W = (W ′ << 5) ⊕ (a′ >> 27) mod 232. 

here, “<<” mean simpl bit shift. 

3. assum that d1, d2, D3 and D4 be 32-bit plaintext and e1, e2, E3 and E4 be the corre- 
spond ciphertext respectively. then, calcul the valu of e1, e2, E3 and E4 a follows. 

E1 = D1 ⊕ X, 
E2 = D2 ⊕ Y, 
E3 = D3 ⊕ Z, 
E4 = D4 ⊕ W. 

4. repeat step 2 and 3 until all the give plaintext be encrypted. 

3. vsc 2.0 
there be some secur problem of vsc128. We think that the follow three point be the most 
import problems. 

• the maximum linear characterist probabl of vsc128 be 2−115. therefore, distinguish 
attack with linear mask be practic [4, 5]. 

• It be report that the output sequenc (key-stream) of vsc128 have a statist deviat if 
the initi vector be chosen among specif vectors, and so the distinguish attack be realiz if 
an attack can chose an initi vector intent [6]. 

• the round of vsc128 be not a bijection. then, the effect key length of vsc128 be small 
than 128bit. 

To solv the abov problems, we propos “vector stream cipher 2.0 (vsc 2.0)” [7], which have 
the follow three improvements. 

• chang the iter number of the round from 8 to 9. herewith, the maximum linear char- 
acteristicprob chang from 2−115 to 2−129, and so a distinguish attack with linear 
mask becom not practical. 

• ad a preprocess which replac a give initi vector with anoth valu like a hash value. 
herewith, an attack cannot choos an initi vector intentionally. 

• introduc a new rule “keep the valu of the variabl D be even”. herewith, by the follow 
theorem 1, the round becom a bijection. In order to keep the new rule, the key length and 
step 2(c) of the vsc128 algorithm change. 

theorem 1. consid a map g : (z/2nz)m → (z/2nz)m, which be describ a 

g(a0, a1, · · · , am−1) = (a′0, a′1, · · · , a′m−1), 
a′i = Ai 

( 
2ai + a 

( 
a(i+1 mod m) 

)) 
mod 2n (∀i ∈ z/mz), 

where a1, · · · , Am and a′1, · · · , a′m be element of z/2nz and a(ai) = Ai − (ai mod 4) + 1 (∀i ∈ 
z/mz). assum that On be a subset of z/2nz, which be construct of odd number in z/2nz. then, if 
we restrict the domain of g to (z/2nz)m except (on)m, g becom a biject map on (z/2nz)m\(on)m. 
If you would like to know the proof of theorem 1, see [7]. 

the algorithm of vsc 2.0 which be base on the abov be a follows: 

217 



1. assum that A, B, C, D, X, Y , Z and W be 32-bit integ variables. set a=0xfedcba98, 
b=0x01234567, c=0x89abcdef and d=0x76543210 and assign an initi vector to X, Y , Z and 
W . (in actuality, we can choos valu of A, B, C and D more freely. sinc the specif 
must be fixed, the values, a=0xfedcba98, b=0x01234567, c=0x89abcdef and d=0x76543210, 
be for the moment chosen.) 

2. repeat the follow oper 30 times. (the oper be the “round” of vsc 2.0.) 

(a) assum that a, b, c, d, x, y, z and w be 32-bit integ variables. calcul the valu of 
a, b, c, d, x, y, z and w a follows. 

a = A − (A mod 4) + 1 mod 232, 
b = B − (B mod 4) + 1 mod 232, 
c = C − (C mod 4) + 1 mod 232, 
d = D − (D mod 4) + 1 mod 232, 
x = X − (X mod 4) + 1 mod 232, 
y = Y − (Y mod 4) + 1 mod 232, 
z = Z − (Z mod 4) + 1 mod 232, 
w = W − (W mod 4) + 1 mod 232. 

(b) assum that a′, b′, C ′, d′, X ′, Y ′, Z ′ and W ′ be 32-bit integ variables. 
calcul the valu of a′, b′, C ′, d′, X ′, Y ′, Z ′ and W ′ a follows. 

A′ = a(2a + y) mod 232, 

B′ = b(2b + x) mod 232, 

C ′ = c(2c + z) mod 232, 

D′ = d(2d + w) mod 232, 

X ′ = x(2x + c) mod 232, 

Y ′ = Y (2i + d) mod 232, 

Z ′ = z(2z + a) mod 232, 

W ′ = W (2w + b) mod 232. 

(c) regard (a′, b′, C ′, d′, X ′, Y ′, Z ′,w ′) a a 256-bitssequence, and perform 5-bit left rota- 
tional shift. after that, copi the sequenc to (a, B, C, D, X, Y, Z, W ). after that, 1-bit 
left rotat shift for low-rank 6-bit of D. write mathematically, 

A = (a′ << 5) ⊕ (b′ >> 27) mod 232, B = (b′ << 5) ⊕ (C ′ >> 27) mod 232, 
C = (C ′ << 5) ⊕ (d′ >> 27) mod 232, D = (d′ << 5) ⊕ ((x ′ >> 27) << 1)) mod 232, 
X = (X ′ << 5) ⊕ (Y ′ >> 27) mod 232, Y = (Y ′ << 5) ⊕ (Z ′ >> 27) mod 232, 
Z = (Z ′ << 5) ⊕ (W ′ >> 27) mod 232, W = (W ′ << 5) ⊕ (a′ >> 27) mod 232. 

3. assign a secret key to A, B, C and D except the least signific bit of D. set the least 
signific bit of D to 0. 

4. perform the round 9 times. 

5. assum that d1, d2, D3 and D4 be 32-bit plaintext and e1, e2, E3 and E4 be the corre- 
spond ciphertext respectively. then, calcul the valu of e1, e2, E3 and E4 a follows. 

E1 = D1 ⊕ X, 
E2 = D2 ⊕ Y, 
E3 = D3 ⊕ Z, 
E4 = D4 ⊕ W. 

218 



6. repeat step 4 and 5 until all the give plaintext be encrypted. 

4. further improv of vsc 2.0 
although the secur of vsc 2.0 be good than the origin vsc, someth to be consid for 
optim of cipher design be left. In particular, we think that the follow two thing should be 
consid for further improvements. 

• the key length of vsc 2.0 be 127bit. thus, the key space be the half of the origin vsc128. 
• the step 2(c) of vsc 2.0 algorithm be slow than that of vsc128. 

both of them be caus by what make the round a bijection. To improv them, we introduc the 
follow theorem. 

theorem 2. assum that g : (z/2nz)m → (z/2nz)m be describ a 

g(a0, a1, · · · , am−1) = (a′0, a′1, · · · , a′m−1), 
a′i = Ai 

( 
2ai + 4a(i+1 mod m) + 1 

) 
mod 2n (∀i ∈ z/mz). 

here, a1, · · · , Am and a′1, · · · , a′m be element of z/2nz. then, g be a bijection. 
proof. It be enough to prove injectivity. assum that (a0, a1, · · · , am−1) and (ã0, ã1, · · · , ˜am−1) 
be element of (z/2nz)m satisfi 

(a0, a1, · · · , am−1) �= (ã0, ã1, · · · , ˜am−1). 

there be non-neg number si (i ∈ z/mz) satisfi 

si ≤ n (∀i ∈ z/mz), 
(s0, s1, · · · , sm−1) �= (n, n, · · · , n), 
ãi = Ai + (2pi − 1)2si mod 2n (∀i ∈ z/mz), 

where pi be natur numbers. assum that 

(a′0, A 
′ 
1, · · · , a′m−1) =g(a0, a1, · · · , a,−1), 

(ã0 
′ 
, ã1 

′ 
, · · · , ã′m−1) =g(ã0, ã1, · · · , ãm−1). 

then, there exist k ∈ z/mz such that sk ≤ si (∀i ∈ z/mz). obviously, sk < n. To simplifi 
notation, we defin new symbol am, ãm, sm and pm a a0, ã0, s0 and p0, respectively. then, 

ãk 
′ 

= ãk{2ãk + 4ãk+1 + 1} mod 2n 
= {ak + (2pk − 1)2sk}{2ak + (2pk − 1) · 2sk+1 + 4ak+1 + (2pk+1 − 1) · 2sk+1+2 + 1} mod 2n 
= a′k + (2pk − 1) · 2sk + r · 2sk+1 + r′ · 2sk+1+2 mod 2n. 

here, r and r′ be natur numbers. sinc sk ≤ sk+1 and sk < n, ãk′ �= a′k. from the above, g be a 
bijection. 

By use theorem 2, we can further improv vsc 2.0. We propos a new cipher “vector stream 
cipher 2.1 (vsc 2.1)”. the algorithm propos here a vsc 2.1 be a follows: 

1. assum that A, B, C, D, X, Y , Z and W be 32-bit integ variables. set a=0xfedcba98, 
b=0x01234567, c=0x89abcdef and d=0x76543210 and assign an initi vector to X, Y , Z and 
W . 

2. repeat the follow oper 30 times. (the oper be the “round” of vsc 2.1.) 

219 



(a) assum that a, b, c, d, x, y, z and w be 32-bit integ variables. calcul the valu of 
a, b, c, d, x, y, z and w a follows. 

a = 4A + 1 mod 232, 

b = 4B + 1 mod 232, 

c = 4C + 1 mod 232, 

d = 4D + 1 mod 232, 

x = 4X + 1 mod 232, 

y = 4Y + 1 mod 232, 

z = 4Z + 1 mod 232, 

w = 4W + 1 mod 232. 

(b) assum that a′, b′, C ′, d′, X ′, Y ′, Z ′ and W ′ be 32-bit integ variables. 
calcul the valu of a′, b′, C ′, d′, X ′, Y ′, Z ′ and W ′ a follows. 

A′ = a(2a + y) mod 232, 

B′ = b(2b + x) mod 232, 

C ′ = c(2c + z) mod 232, 

D′ = d(2d + w) mod 232, 

X ′ = x(2x + c) mod 232, 

Y ′ = Y (2i + d) mod 232, 

Z ′ = z(2z + a) mod 232, 

W ′ = W (2w + b) mod 232. 

(c) regard (a′, b′, C ′, d′, X ′, Y ′, Z ′,w ′) a a 256-bit sequence, and perform 5-bit left rota- 
tional shift. after that, copi the sequenc to (a, B, C, D, X, Y, Z, W ). write mathemat- 
ically, 

A = (a′ << 5) ⊕ (b′ >> 27) mod 232, B = (b′ << 5) ⊕ (C ′ >> 27) mod 232, 
C = (C ′ << 5) ⊕ (d′ >> 27) mod 232, D = (d′ << 5) ⊕ (X ′ >> 27)) mod 232, 
X = (X ′ << 5) ⊕ (Y ′ >> 27) mod 232, Y = (Y ′ << 5) ⊕ (Z ′ >> 27) mod 232, 
Z = (Z ′ << 5) ⊕ (W ′ >> 27) mod 232, W = (W ′ << 5) ⊕ (a′ >> 27) mod 232. 

3. assign a secret key to A, B, C and D. 

4. perform the round 9 times. 

5. assum that d1, d2, D3 and D4 be 32-bit plaintext and e1, e2, E3 and E4 be the corre- 
spond ciphertext respectively. then, calcul the valu of e1, e2, E3 and E4 a follows. 

E1 = D1 ⊕ X, 
E2 = D2 ⊕ Y, 
E3 = D3 ⊕ Z, 
E4 = D4 ⊕ W. 

6. repeat step 4 and 5 until all the give plaintext be encrypted. 

By theorem 2, the round of vsc 2.1 be a bijection. the maximum linear probabl of vsc 2.1 be 
the same a that of vsc 2.0. the key length of vsc 2.1 be 128bit, it be longer than that of vsc 2.0. 
vsc 2.1 be expect to be faster than vsc 2.0 becaus step 2(c) be more simpl than that of vsc 2.0. 

220 



5. experi 
In thi section, we perform some experi for vsc 2.1. 

5.1 speed 
We measur the speed of perform vsc128, vsc 2.0, vsc 2.1 and aes-128. the environ in 
which we measur be show in tabl I. As results, we get tabl ii. vsc2.1 be slightli slow than the 
origin vsc128, but faster than vsc 2.0. 

tabl I. environ on which we measur speed. 

cpu 1.3 ghz intel core i5 
memori 4 GB 1600 mhz ddr3 

OS OS X 10.9.5 (13f34) 
compil gcc 4.2.1 

optim option -ofast 

tabl ii. encrypt speeds. 

algorithm speed(mbps) 

vsc128 1202.254889 
vsc 2.0 1039.222464 
vsc 2.1 1113.193866 

aes-128 ecb 366.901621 

5.2 properti of the preprocess 
We investig properti of the preprocess of vsc 2.0 and vsc 2.1. step 2 of vsc 2.0 algorithm 
and that of vsc 2.1 algorithm be preprocessing, respectively. the detail of the experi be a 
follows: 

1. select an input randomly. (we call the input i1.) 

2. select a bit of I1 and revers the bit. (we call the valu i2.) 

3. appli the preprocess to I1 and i2. (we call the output I ′1 and I ′2 respectively.) 

4. measur the ham distanc between I ′1 and I 
′ 
2. 

5. repeat step 1-4 1000000 times. calcul the averag of the ham distanc which be 
measur at step 3. 

As a result, we get tabl iii. sinc the output length of the both preprocess be 128bit, the result 
show that the preprocess have a good property. 

tabl iii. 

algorithm averag ham distanc 

vsc 2.0 64.000107 
vsc 2.1 63.995965 

5.3 random of key stream 
We perform random test describ by nist sp800-22 [13] for key stream gener by vsc128, 
vsc 2.0 and vsc 2.1. the test be perform for 11 sets. each set be construct of 1000 sequences. 
(exceptionally, the set 10 and 11 be construct of 255 sequenc respectively. A sequenc of the 
set 10 be gener with an initi condit (key and initi vector) whose one bit be “1” and the 

221 



other be “0”. vsc 2.0 requir the least bit of D be “0”. then, the set 10 be construct of onli 255 
sequences. A sequenc of the set 11 be gener with an initi condit whose two bit be “0” and 
the other be “1”. one of the two be the least bit of D. then, set 11 be also construct of onli 255 
sequences.) each sequenc be construct of 1000000 bits, which be gener by vsc128, vsc 2.0 
or vsc 2.1 with a secret key and an initi vector. the secret key and the initi vector be chosen 
randomly, but random pattern be depend on a set. tabl IV show the result. the random 
test be construct of 188 test items. even if sequenc be exactli random, there be case that the 
sequenc do not pa all test items. therefore, the result show that there be no problem about 
random of the key stream of vsc128, vsc 2.0 and vsc 2.1. 

tabl iv. result of random tests. 

number of test item which the set pass 
set no. vsc128 vsc 2.0 vsc 2.1 

1 188 188 187 
2 188 187 188 
3 188 186 188 
4 187 188 188 
5 187 188 188 
6 188 187 188 
7 188 187 188 
8 188 188 187 
9 188 188 188 
10 188 188 188 
11 188 188 188 

6. conclus 
We propos further improv of vsc a a certain optim of cipher design. our propos 
vsc 2.1 be faster than vsc 2.0. We think that vsc 2.1 be more secur than vsc 2.0 becaus of the 
follow two reasons. first be that the key length of vsc 2.1 be longer than that of vsc 2.0. second be 
that ani theoret attack which be report a workabl attack for the origin vsc128 be not 
workabl for vsc 2.1. In particular, vsc 2.1 have the provabl secur for the distinguish attack 
with linear masking. thus, vsc 2.1 be a preciou exampl of chaotic cipher which us permut 
polynomi over a ring of modulo 2w, and suggest that the permut polynomi over a ring of 
modulo 2w and chao theori design unpredict be particularli use for cryptography. 

refer 
[1] K. umeno, S. kim, and A. hasegawa, “128bit vsc specification,” http://www.chaosware.com/ 

vsc128.pdf, 2004. 
[2] r.l. rivest, “permut polynomi modulo 2w,” finit field and their applications, vol. 7, 

pp. 287–292, 2001. 
[3] H. tanaka, K. nemoto, T. miki, and M. sato, “secur evalu of 128bit vsc,” technic 

report of ieice, isec2003-144, pp. 179–184, 2004. 
[4] M. nakamura, T. nosaka, and T. kaneko, “A studi on the linear properti of basic function in 

vsc128,” proc. ess conf. ieice, p. 126, 2004. 
[5] T. nosaka, M. nakamura, and T. kaneko, “A studi on linear cryptanalysi of vsc128,” proc. 

ess conf. ieice, p. 127, 2004. 
[6] Y. tunoo, T. saito, K. myao, T. suzaki, and T. kawabata, “distinguish attack with chosen 

initi vector against vsc128,” sasc workshop, pp. 212–219, 2004. 
[7] A. iwasaki and K. umeno, “improv secur of vector stream cipher,” nonlinear theori 

and it applications, ieice, vol. 7, pp. 30–37, 2016. 

222 



[8] d.e. knuth, “the art of comput programming,” vol. 2, addison-wesley, upper saddl river, 
1981. 

[9] R. coveyou, random number gener Is too import to Be left to chance, studi in 
appli mathematics, iii, pp. 70–111, 1970. 

[10] r.l. rivest, m.j.b. robshaw, R. sidney, and y.l. yin, “the rc6 block cipher,” https://people. 
csail.mit.edu/rivest/pubs/rrsy98.pdf. 

[11] A. iwasaki and K. umeno, “one-strok polynomi over a ring of modulo 2w,” jsiam letters, 
vol. 9, pp. 5–8, 2017. 

[12] A. iwasaki and K. umeno, “three theorem on odd degre chebyshev polynomi and more 
gener permut polynomi over a ring of modul 2w,” arxiv:1602.08238v2, 2016. 

[13] nist, “A statist test suit for random and pseudorandom number gener for cryp- 
tograph applications,” special public 800–22 revis 1a, http://nvlpubs.nist.gov/ 
nistpubs/legacy/sp/nistspecialpublication800-22r1a.pdf, 2010. 

223 


