














































ar
X

iv
:1

70
7.

00
18

2v
2 

 [
qu

an
t-

ph
] 

 1
0 

Ju
l 2

01
7

Experimental realization of quantum cheque using a five-qubit quantum computer

Bikash K. Behera∗

Indian Institute of Science Education and Research Kolkata, Mohanpur 741246, West Bengal, India

Anindita Banerjee†

Department of Physics and Center for Astroparticle Physics and Space Science,
Bose Institute, Block EN, Sector V, Kolkata 700091, India

Prasanta K. Panigrahi‡

Indian Institute of Science Education and Research Kolkata, Mohanpur 741246, West Bengal, India

We demonstrate the implementation of quantum cheque, proposed by Roy Moulick and Panigrahi
[Quantum Inf. Process (2016) 15: 2475], using the five-qubit IBM quantum computer. Appropriate
single qubit, CNOT and Fredkin gates have been implemented for the realization of the quantum
cheque transaction in a quantum networked banking system. Quantum state tomography reveals
the accuracy of the implementation with comparable results from the theoretical and experimental
density matrices.

Keywords: IBM Quantum Experience, Quantum Cheque, Quantum State Tomography

I. INTRODUCTION

We make use of the free web based interface, IBM
Quantum Experience (IBM QE) [1], to experimentally
demonstrate the quantum cheque transaction, proposed
by Roy Moulick and Panigrahi [2]. Python Application
Programming Interface (API) and Software Development
Kit (SDK) [3], have enabled easy writing of codes
and running them on quantum processors. With fast
access to the results of an experiment, the IBM QE
users can communicate and discuss results with IBM
researchers and other users. IBM QE permits a
user easy-connectivity to this cloud [4] based 5-qubit
quantum computer, using which a number of quantum
algorithms [5–8] and quantum computational tasks [9]
have already been performed. Test of Leggett-Garg [10]
and Mermin inequality [11], quantum teleportation of
an unknown single qubit [12] and two qubit state [13]
have been reported. Entanglement assisted invariance
[14], non-Abelian braiding of surface code deffects [15],
and entropic uncertainty and measurement reversibility
[16] have been illustrated. A comparison between
two architectures for quantum computation [17] and
non-destructive discrimination of Bell states [18] have
also been experimentally performed. Here, we explicate
experimental realization of quantum cheque transaction
by implementing the scheme on IBM interface and find
the accuracy of quantum state preparation through
quantum state tomography.
Establishing long distance quantum communication

networks [19, 20] is an active area of research, where
a quantum cheque scheme [2] can be potentially used

∗ bkb13ms061@iiserkol.ac.in
† aninditabanerjee.physics@gmail.com
‡ pprasanta@iiserkol.ac.in

as an alternate for e-Payment Gateways in the field of
e-commerce. It can also be considered as the quantum
analog of the process of Electronic Data Interchange
(EDI) [21]. Recently, practical unforgeable quantum
money has been experimentally verified [22, 23]. The
experimental demonstration therefore paves the way for
designing of the physical devices for this purpose. In
this scheme, efficient transactions can be performed by
storing quantum states in computers or smart cards,
equipped with quantum memories [24, 25]. However,
without quantum memory, the transactions can be
streamed over the quantum internet [26, 27] or the
protocol can be run in real time, with the account
holder physically going to the Bank, collecting a quantum
cheque book, and then preparing a quantum cheque
and issuing to a vendor. The vendor communicates the
quantum cheque to the Bank and withdraws money after
a successful verification of the cheque.
The paper is organized as follows. Section II describes

the implementation of quantum gates e.g., CNOT and
Fredkin gates in order to design quantum circuits for
experimental realization of quantum cheque. Section III
explicates the concept of a quantum cheque, following
which, the implementation is shown on IBM Interface.
Section V demonstrates the accuracy of implementation
by performing quantum state tomography. Finally, in
section VI, we conclude by summarizing our work and
pointing out the future direction for further work.

II. DESIGNING GATES AND SOME
PROTOCOLS ON IBM QE

For the implementation of a quantum cheque, one
requires Hadamard (H), CNOT gate, the Pauli gates (X,
Y and Z) and phase gates (S, S†, T and T †). Combining
some of these gates, a fredkin gate can be constructed,
which is used for the verification purposes of a quantum

http://arxiv.org/abs/1707.00182v2
mailto:bkb13ms061@iiserkol.ac.in
mailto:aninditabanerjee.physics@gmail.com
mailto:pprasanta@iiserkol.ac.in


2

cheque. It is to be noted that, CNOT gate is not
accessible to all five qubits on the interface of IBM,
because of certain restrictions on the qubits. Protocol-I,
depicted in Figure 1, is used to construct CNOT gate
in any order between two qubits. Similarly, Protocol-II,
depicted in Figure 2, is used to swap any two qubits on
IBM interface.

FIG. 1. Protocol-I. Two equivalent quantum circuits
showing implementation of CNOT gate in any order between
two qubits on IBM interface.

FIG. 2. Protocol-II. Positioning of three CNOT gates for
qubit swapping.

III. QUANTUM CHEQUE

A quantum cheque scheme is composed of three
algorithms, Gen, Sign and Verify. Gen algorithm
produces a “cheque book” and a key for the customer,
who issues a cheque. Sign algorithm creates a quantum
cheque state, QC, and Verify algorithm checks the
validity of a cheque. A quantum cheque has mainly
three properties, Verifiability, i.e., it can be verified by
a Bank’s main branch or any of its acting branches,
Non-repudiation, i.e, after issuing a cheque, a customer
must not be able to disclaim it, and Unforgeability, i.e.,
a quantum cheque can not be fabricated or it can not be
reused.

A. The Quantum Cheque Scheme

The quantum cheque scheme can be described by
considering three parties, Alice, Bob and Bank. Here,
the Bank is denoted as the main branch, which can
have several branches securely connected by a classical
channel. In this protocol, only Alice and Bank are
considered to be trusted parties, and not necessarily the
branches. After a cheque is issued by Alice, Bob goes to
Bank or any of its branches to withdraw money.
The following three schemes are followed for a

successful quantum cheque transaction.
1. Gen Algorithm: Initially, a shared key, k, is

prepared by Alice and the Bank. Then Alice gives her

public key, pk, to the Bank and collects her Private Key,
sk.
The Bank prepares a set of m number of GHZ states,

∣

∣

∣
φ(i)

〉

GHZ
= 1√

2

(

∣

∣

∣
0(i)

〉

A1

∣

∣

∣
0(i)

〉

A2

∣

∣

∣
0(i)

〉

B
(1)

+
∣

∣

∣
1(i)

〉

A1

∣

∣

∣
1(i)

〉

A2

∣

∣

∣
1(i)

〉

B

)

where 1 ≤ i ≤ m, along with the respective unique
serial number s ∈ {0, 1}n. From every GHZ entangled
state, the Bank gives two qubits, named |φ〉A1 and
|φ〉A2 , and the serial number to Alice, while keeping the
third qubit, |φ〉B , and other information, secretly in a
database.
Here, {|φ(i)〉GHZ}i=1:m stands for
{|φ(1)〉GHZ , |φ

(2)〉GHZ , . . . , |φ
(m)〉GHZ}.

At the end, Alice possesses
(id, pk, sk, k, s, {|φ(i)〉A1 , |φ

(i)〉A2}i=1:m), and the Bank
carries (id, pk, k, s, {|φ(i)〉B}i=1:m).
2. Sign Algorithm: Alice prepares a random number

by using a random number generation procedure, r ←
U{0,1}L to sign a cheque of amount M and creates a
n-qubit state by using the following one way function
[28],

|ψalice〉 = f(k||id||r||M),

where, k and id, are respectively the secret key and
the identity of Alice. The symbol ‘||’ concatenates two
bit strings.

Alice also prepares m states {|ψ
(i)
M 〉}i=1:m

corresponding to the amount M, using the one way
function g : {0, 1}∗ × |0〉 → |ψ〉, as

|ψ
(i)
M 〉 = g(r||M ||i).

Subsequently, Alice encodes [29] |ψ
(i)
M 〉 with the

entangled qubit, |φ(i)〉A1 after which she performs a Bell
measurement on her first two qubits as shown in Figure
3.
The state of the four qubit entangled system can be

written in the following form,

∣

∣

∣
φ(i)

〉

=
∣

∣

∣
ψ
(i)
M

〉

⊗ |φ〉GHZ

=
1

2

{ ∣

∣Ψ+
〉

A1
(αi |00〉A2B + βi |11〉A2B)

+
∣

∣Ψ−
〉

A1
(αi |00〉A2B − βi |11〉A2B)

+
∣

∣Φ+
〉

A1
(βi |00〉A2B + αi |11〉A2B)

+
∣

∣Φ−
〉

A1
(βi |00〉A2B − αi |11〉A2B)

}

(2)

where |Ψ+〉, |Ψ−〉, |Φ+〉, and |Φ−〉 denote four Bell
states.
Now, Alice applies an appropriate Pauli gate operation

on her qubit |φ(i)〉A2 , according to the Bell state
measurement outcomes:



3

|Ψ+〉 → I |Ψ−〉 → Z
|Φ+〉 → X |Φ−〉 → Y

Figure 3 depicts the encoding procedure of quantum
cheque, which is to be repeated m times.
Alice then uses sign algorithm to sign the serial number

s as σ ← Signsk(s), and generates a quantum cheque

QC = (id, s, r, σ,M, {|φ(i)〉A2}i=1:m, |ψalice〉)

for Bob to encash.

FIG. 3. Depicting the quantum circuit used to generate a
quantum cheque state.

FIG. 4. Quantum circuit for performing swap test on the two
states |Ψ〉 and |Ψ′〉.

Swap Test: The swap test is depicted in Figure
4, where the measurement of ancilla (first qubit) on a
computational basis yields zero if the two states |Ψ〉
and |Ψ′〉 are equal. In this case, swap test is said to
be successful. However, if the two states are different,
then the measurement of ancilla yields both |0〉 and |1〉
each associated with some probability. For 〈Ψ|Ψ′〉 ≥ λ,

the swap test is successful with probability 1+λ
2

2 , and

unsuccessful with probability 1−λ
2

2 . It is evident that,
for the same input states, the swap test is successful with
probability 1 and for different outputs, it is successful
with probability less than 1. The efficiency of this test
can be amplified by repeating it a large number of times.
3. Verify Algorithm: In the verification process,

Bob produces the quantum cheque QC at any of the
acting branches of the Bank. The branch communicates
with the Bank (main branch) to check the validity
of the (id, s) pair, and a verification is run by using
V rfypk(σ, s). As described below, the Bank proceeds
with the verification process if it finds (id, s) and σ to be
valid, otherwise cancels the quantum cheque transaction.
The Bank then measures its qubit, |φB〉 in Hadamard

basis to get |+〉 or |−〉 as output and conveys the results

to the acting branch. The branch applies the appropriate
Pauli gate operation on |φ(i)〉A2 to retrieve the unknown

state |ψ
(i)
M 〉.

|+〉 → I |−〉 → Z

A similar procedure is followed m times to get m

unknown states {|ψ
(i)
M 〉}i=1:m. The Bank generates

|ψ′alice〉 = f(k||id||r||M), and {|ψ
,(i)
M 〉}i=1:m =

{g(r||M ||i)}i=1:m by using these one way functions, and
then performs a swap test on m + 1 set of states,

{|ψalice〉, |ψ
′
alice〉}, and {|ψ

(i)
M 〉, |ψ

,(i)
M 〉}i=1:m.

The cheque is accepted if the swap test is successful,

i.e., if 〈ψalice|ψ
′
alice〉 ≥ λ1 and {〈ψ

(i)
M |ψ

,(i)
M 〉 ≥ λ2}i=1:m,

where λ1 and λ2 are constants fixed by the Bank. Else,
the branch terminates the transaction.

IV. IMPLEMENTATION OF QUANTUM
CHEQUE AT IBM QE

FIG. 5. IBM quantum circuit used to generate the quantum
cheque state.

The IBM quantum circuit for generating a quantum
cheque state has been depicted in Figure 5. It is
equivalent to the quantum circuit shown in Figure
3. Though, these two figures appear to be different,
their equivalency can be checked by using Protocol-I,
Protocol-II and the concept of optimization of circuit. In
Figure 5, the first three qubits are in possession of Alice,
the Bank contains the fifth qubit, and the fourth qubit
remains unused. Alice uses one of her entangled qubit
(2nd qubit), |φ(i)〉A1 , provided by Bank, to encode the

unknown state |ψ
(i)
M 〉. Here, this unknown state can not

be generated by using the one way function, “g” (section
III), since we model only the quantum aspect and for
simplicity only assume the g spits out a description of the
following state, that is known to the preparation device
but unknown to anybody else as [12],

|ψ
(i)
M 〉 = cos(π/8)|0〉+ sin(π/8)|1〉 (3)

It can be computed by operating H, T, H and S gates
sequentially on |0〉. As this state is now split between
Alice’s qubit (3rd qubit) and Bank’s qubit (5th qubit),
measuring the 3rd qubit in computational basis, it is
expected to have |0〉 with probability ≈ 0.85 and |1〉



4

TABLE I. The table shows the results of the outcome of
the quantum cheque state, depicted in Figure 5, measured in
computational basis. The results are obtained by both running
and simulating the experiment with 1024, 4096 and 8192
number of shots.

For Quantum Cheque Generation
Number of Shots Probability of |0〉 Probability of |1〉
Run-1 (1024) 0.741 0.249
Run-2 (4096) 0.766 0.234
Run-3 (8192) 0.755 0.245

Simulation-1 (1024) 0.848 0.152
Simulation-2 (4096) 0.856 0.144
Simulation-3 (8192) 0.856 0.144

with probability ≈ 0.15. The experimental results are
tabulated in Table I.

The encoding procedure (as described in section III)
should be done m times by using m similar quantum
circuits (Figure 5). Through the IBM cloud, it is not
possible to create n-qubit quantum state by using a one
way function, “f” (section III). So, we have taken two
initial states |0〉, and |0〉 for comparison test.

FIG. 6. IBM quantum circuit used to verify the Quantum
Cheque. It is to be noted that a set of two states are to be
taken on the second and the third qubit of the above circuit
for checking swap test.

The quantum circuits implemented on IBM interface,
for quantum cheque verification, is illustrated in Figure
6, which is equivalent to the circuit shown in Figure 4. In
this case, both the initial states (2nd qubit and 3rd qubit)
are taken as, |0〉. (See Figure 6). It is expected to have |0〉
with probability 1, after measuring the ancilla qubit (1st
qubit) in computational basis. The experimental results
are illustrated in table II.

Comparing run result and simulated result, shown in
tables I and II, run result is found to be less accurate
than the simulated result. It is evident that application
of a large number of gates increases decoherence of
a quantum state and produces more noise in the
system. Decoherence and noise due to gates are the
key disadvantages for realizing the implementation of a
quantum cheque with exact accuracy.

TABLE II. Table providing information about the ancilla
state, depicted in Figure 6, when it is measured in
computational basis. The experiment has been performed with
1024, 4096 and 8192 number of shots. Both run and simulated
results are illustrated.

For Quantum Cheque Verification
Number of Shots Probability of |0〉 Probability of |1〉
Run-1 (1024) 0.813 0.188
Run-2 (4096) 0.839 0.161
Run-3 (8192) 0.846 0.154

Simulation-1 (1024) 1.000 0.000
Simulation-2 (4096) 1.000 0.000
Simulation-3 (8192) 1.000 0.000

V. QUANTUM STATE TOMOGRAPHY

We now proceed to carry out state tomography to
check how well, the quantum states are prepared in our
experiment. We mainly consider two states, quantum
cheque state (|φ(i)〉A2), which is to be stored in the
quantum cheque, and ancilla state, used in swap test
(See Section III). In this process, by comparing both
the theoretical and experimental density matrices of a
quantum state, the accuracy of implementation can be
tested.
State tomography can be explained through a single

qubit quantum state, |Ψ〉 = α|0〉+ β|1〉. The theoretical
and experimental density matrices of the given state are
given by equations 4 and 5 respectively.

ρT = |Ψ〉〈Ψ|, (4)

and

ρE =
1

2
(I + 〈X〉X + 〈Y 〉Y + 〈Z〉Z) (5)

Here, 〈O〉 = tr(|Ψ〉〈Ψ|O), where O = X, Y, and
Z. This expectation value can be obtained by rotating
the quantum state along O axis and then measuring in
computational basis. This can be evaluated as, 〈O〉 =
P(0)-P(1), where P(0) and P(1) are the probabilities of
outcome 0 and 1 respectively.
The theoretical (ρTx , ) and experimental (ρ

ER
x , ρ

ES
x )

density matrices (both for run result and simulated
result) of quantum cheque state (x = q) and ancilla state
(x = a) are given below.

ρTq =

[

0.850 0.350
0.350 0.150

]

ρERq =

[

0.760 0.043
0.043 0.240

]

+ i

[

0.000 −0.027
0.027 0.000

]

ρESq =

[

0.852 0.008
0.008 0.148

]

+ i

[

0.000 −0.001
0.001 0.000

]



5

<0|
<1|

|0>
|1>

−1

0

1
 

 

(1a)

0

0.2

0.4

0.6

0.8

<0|
<1|

|0>
|1>

−1

0

1
 

 <0|
<1|

|0>
|1>

−0.5

0

0.5

 

 (1b)

−1

−0.5

0

0.5

1

<0|
<1|

|0>
|1>

−0.5

0

0.5

 

 

<0|
<1|

|0>
|1>

−1

0

1
 

 

(1c)

0.2

0.4

0.6

<0|
<1|

|0>
|1>

−1

0

1
 

 <0|
<1|

|0>
|1>

−0.5

0

0.5
 

 

(1d)

−0.02

−0.01

0

0.01

0.02

<0|
<1|

|0>
|1>

−0.5

0

0.5
 

 

<0|
<1|

|0>
|1>

−1

0

1
 

 

(1e)

0.2

0.4

0.6

0.8

<0|
<1|

|0>
|1>

−1

0

1
 

 <0|
<1|

|0>
|1>

−0.5

0

0.5
 

 

(1f)

−1

−0.5

0

0.5

1
x 10

−3

<0|
<1|

|0>
|1>

−0.5

0

0.5
 

 

FIG. 7. Quantum cheque generation: Real (left)
and imaginary (right) parts of the reconstructed theoretical
(1a,1b), run (1c,1d) and simulated (1e,1f) density matrices
for the quantum cheque state.

ρTa =

[

1.000 0.000
0.000 0.000

]

ρERa =

[

0.846 0.054
0.054 0.154

]

+ i

[

0.000 0.062
−0.062 0.000

]

ρESa =

[

1.000 0.009
0.009 0.000

]

+ i

[

0.000 −0.003
0.003 0.000

]

It is to be noted that the above experimental density
matrices are calculated for running and simulating the
experiment 8192 times. For other number of shots (1024
and 4096), similar procedure can be applied to obtain the
corresponding density matrices. As mentioned in section
IV, by comparing the run, simulated and theoretical
density matrices, it can be concluded that, the simulated
result provides more accurate information, about the
quantum state, as compared to the run results, which
is already mentioned in section IV.

VI. CONCLUSION

To conclude, here, we have demonstrated an
experimental procedure of quantum cheque transaction
in a quantum networked environment. Fredkin gate
has been constructed, by using single qubit and CNOT
gates, for verification of quantum cheque. The quantum

<0|
<1|

|0>
|1>

−1

0

1
 

 

(2a)

0

0.5

1

<0|
<1|

|0>
|1>

−1

0

1
 

 <0|
<1|

|0>
|1>

−0.5

0

0.5

 

 (2b)

−1

−0.5

0

0.5

1

<0|
<1|

|0>
|1>

−0.5

0

0.5

 

 

<0|
<1|

|0>
|1>

−1

0

1
 

 

(2c)

0.2

0.4

0.6

0.8

<0|
<1|

|0>
|1>

−1

0

1
 

 <0|
<1|

|0>
|1>

−0.5

0

0.5
 

 

(2d)

−0.05

0

0.05

<0|
<1|

|0>
|1>

−0.5

0

0.5
 

 

<0|
<1|

|0>
|1>

−1

0

1
 

 

(2e)

0

0.5

1

<0|
<1|

|0>
|1>

−1

0

1
 

 <0|
<1|

|0>
|1>

−0.5

0

0.5
 

 

(2f)

−2

0

2

x 10
−3

<0|
<1|

|0>
|1>

−0.5

0

0.5
 

 

FIG. 8. Quantum cheque verification: Real (left)
and imaginary (right) parts of the reconstructed theoretical
(2a,2b), run (2c,2d) and simulated (2e,2f) density matrices
for the ancilla state.

state tomography has been performed to check the
accuracy of the implementation. It is observed that the
quantum cheque transaction has been carried out with
good fidelity.

ACKNOWLEDGMENTS

B.K.B. is financially supported by DST Inspire
Fellowship. We thank Subhayan Roy Moulick (Oxford)
for contribution to the original concept of quantum
cheque. We are extremely grateful to IBM team and
IBM QE project. We thank IBM community for
helpful suggestions regarding circuit construction. The
discussions and opinions developed in this paper are only
those of the authors and do not reflect the opinions of
IBM or IBM QE team.

[1] IBM Q, URL http://research.ibm.com/ibm-q/.
[2] S. R. Moulick, P. K. Panigrahi “Quantum Cheques,”

Quantum Inf. Process. 15, 2475-2486 (2016).
[3] “Quantum computing gets an API and SDK”.

[4] Davide Castelvecchi, “IBM’s quantum cloud computer
goes commercial,” Nature News. 543, 159 (2017).

[5] Peter Shor, “Algorithms for Quantum Computation:
Discrete Logarithms and Factoring,” Proceeding SFCS

http://research.ibm.com/ibm-q/
http://dx.doi.org/10.1007/s11128-016-1273-4
https://developer.ibm.com/dwblog/2017/quantum-computing-api-sdk-david-lubensky/
http://dx.doi.org/10.1038/nature.2017.21585


6

’94 Proceedings of the 35th Annual Symposium on
Foundations of Computer Science. Pages 124-134 (1994).

[6] L. K. Grover, “A fast quantum mechanical algorithm
for database search, ” (1996), arXiv:quant-ph/9605043.

[7] Andris Ambainis, “Quantum search algorithms,”
(2004), arXiv:quant-ph/0504012.

[8] M. Mosca, “Quantum Algorithms,” (2008),
arXiv:0808.0369.

[9] Simon J. Devitt, “Performing quantum
computing experiments in the cloud,”
Phys. Rev. A. 94(3), 032329 (2016).

[10] Emilie Huffman, and Ari Mizel, “Violation of
noninvasive macrorealism by a superconducting qubit:
Implementation of a Leggett-Garg test that addresses the
clumsiness loophole,” Phys. Rev. A 95, 032131 (2017).

[11] Daniel Alsina, and José Ignacio Latorre, “Experimental
test of Mermin inequalities on a five-qubit quantum
computer,” Phys. Rev. A. 94(1), 012314 (2016).

[12] Serguei Fedortchenko, “A quantum teleportation
experiment for undergraduate students,” (2016),
arXiv:1607.02398.

[13] Mitali Sisodia, Abhishek Shukla, Kishore Thapliyal, and
Anirban Pathak, “Design and experimental realization
of an optimal scheme for teleportion of an n-qubit
quantum state,” (2017), arXiv:1704.05294.

[14] Sebastian Deffner, “Demonstration of entanglement
assisted invariance on IBM’s Quantum Experience,”
(2016), arXiv:1609.07459.

[15] James R Wootton, “Demonstrating
non-Abelian braiding of surface code
defects in a five qubit experiment,”
Quantum Science and Technology. 2(1), 015006 (2017).

[16] Mario Berta, Stephanie Wehner, and Mark M Wilde,
“Entropic uncertainty and measurement reversibility,”
New Journal of Physics. 18(7), 073004 (2016).

[17] Norbert M. Linke, Dmitri Maslov, Martin Roetteler,
Shantanu Debnath, Caroline Figgatt,
Kevin A. Landsman, Kenneth Wright, and
Christopher Monroe, “Experimental comparison
of two quantum computing architectures,”
Proceedings of the National Academy of Sciences . 114(13), 3305-3310 (2017).

[18] Mitali Sisodia, Abhishek Shukla, and Anirban
Pathak, “Experimental realization of nondestructive
discrimination of Bell states using a five-qubit quantum
computer,” (2017), arXiv:1705.00670.

[19] Eli Biham, Bruno Huttner, and Tal Mor, “Quantum
cryptographic network based on quantum memories,”
Phys. Rev. A. 54(2651), (1996).

[20] L. M. Duan, and C. Monroe, “Quantum networks with
trapped ions,” Rev. Mod. Phys. 82(1209), (2010).

[21] James H. Burrows (1996-04-29), “Electronic Data
Interchange (EDI)”, National Institute of Standards and
Technology, Retrieved 2008-05-13.

[22] Karol Bartkiewicz, Antońın Černoch,
Grzegorz Chimczak, Karel Lemr, Adam Miranowicz,
and Franco Nori, “Experimental
quantum forgery of quantum optical money,”
npj Quantum Information. 3, 7 (2017).

[23] Mathieu Bozzio, Adeline Orieux, Luis Trigo Vidarte,
Isabelle Zaquine, Iordanis Kerenidis, and Eleni Diamanti,
“Experimental demonstration of practical unforgeable
quantum money,” (2017), arXiv:1705.01428.

[24] C.A. Trugenberger, “Probabilistic Quantum
Memories,” Phys. Rev. Lett. 87, 067901 (2001).

[25] C. Simon, M. Afzelius, J. Appel, A. Boyer de la Giroday,
S. Dewhurst, N. Gisin, C. Hu, F. Jelezko,S. Kröll, and
J. Müller “Quantum Memories. A Review based on
the European Integrated Project “Qubit Applications
(QAP)”,” Eur. Phys. J. D. 58, 1-22 (2010).

[26] W. Munro, A. Stephens, S. Devitt, K. Harrison,
and K. Nemoto, “Quantum communication
without the necessity of quantum memories,”
Nature Photonics. 6, 777-781 (2012).

[27] H. j. Kimble, “The quantum internet,”
Nature. 453(1023), (2008).

[28] S. Goldwasser, and M. Bellare, “Lecture Notes on
Cryptography”. Summer course on cryptography, MIT,
1996–2001.

[29] M. Hillery, V. Bužek, and A. Berthiaume, “Quantum
secret sharing,” Phys. Rev. A. 59, 1829 (1999).

https://arxiv.org/abs/quant-ph/9605043
https://arxiv.org/abs/quant-ph/0504012
https://arxiv.org/abs/0808.0369
http://dx.doi.org/10.1103/PhysRevA.94.032329
http://dx.doi.org/10.1103/PhysRevA.95.032131
http://dx.doi.org/10.1103/PhysRevA.94.012314
https://arxiv.org/abs/1607.02398
https://arxiv.org/abs/1704.05294
https://arxiv.org/abs/1609.07459
http://dx.doi.org/10.1088/2058-9565/aa5c73
http://dx.doi.org/10.1088/1367-2630/18/7/073004
http://dx.doi.org/10.1073/pnas.1618020114
https://arxiv.org/abs/1705.00670
http://dx.doi.org/10.1103/PhysRevA.54.2651
http://dx.doi.org/10.1103/RevModPhys.82.1209
http://dx.doi.org/10.1038/s41534-017-0010-x
https://arxiv.org/abs/1705.01428
http://dx.doi.org/10.1103/PhysRevLett.87.067901
http://dx.doi.org/doi.org/10.1140/epjd/e2010-00103-y
http://dx.doi.org/10.1038/nphoton.2012.243
http://dx.doi.org/10.1038/nature07127
http://dx.doi.org/10.1103/PhysRevA.59.1829

