






































FPGA Programming Made Easy - insideHPC 


FPGA Programming Made Easy - 
insideHPC 

MichaelS 

Sponsored Post 

Field-programmable gate 
array (FPGAs) be become an increasingly popular tool for 
application where high performance, low latency and power efficiency 
be requires. Since and PFGA can be re-configured for a specific 
application, the opportunity for this type of accelerator be quite 
varied. However, in the past, it be necessary to understand a complex 
program language such a Verilog or VHDL, that be design for 
a specific FPGA. An FPGA allows for the use of a custom hardware 
accelerator that can be use for one application and then reconfigured 
for a completely separate application. Hardware engineer may have 
understood these high level definition languages, but other software 
developer may have found these language hard to use and quite 
different from other form of programming. 

OpenCL (Open Computing Language) be an API for the program of 
a diverse set of processors. OpenCL be a royalty free and open standard 
that be use for a wide range of accelerators, include FPGAs. Using a 
familiar language such a OpenCL, developer can become more 
productive, sooner when decide to use an FPGA for a specific 
purpose. OpenCL be portable and be design to be use with almost any 
type of accelerator. 

As with any devices, there be always optimization that can be make in 
software to get good performance. As with most accelerators, one of 
the most effective method be to express pipelining, which can be do 
with OpenCL. Similar to the method that developer be familiar with, 
the use of library that be optimize for FPGAs task should be use 
where these library be available. 

When develop an application for an FPGA that us OpenCL, there 
be a few different way to create a high perform application. These 

FPGA Programming Made Easy - insideHPC https://insidehpc.com/2018/03/fpga-programming-made-easy/ 

1 sur 2 19-03-18 à 17:52 



would be: 

Emulation – develop the application and then run on a Windows 
or Linux system. The performance will not be high, but will allow 
for learn about and create an application that behaves a 
required. 
Offline compile – create the application use OpenCL and 
generate an FPGA program file. Then move the file to an 
actual FPGA for further testing. 
Cloud – find a cloud provider that have FPGAs a part of their 
offering. By use the supply Intel tool in the cloud, further 
development can be done, with out have to invest in new 
hardware. 

Simplify your FPGA development use OpenCLClick To TweetOpenCL 
also include an application program interface (API) for the host (CPU) 
to communicate with the device (an FPGA in our case), traditionally 
over PCIe, or for one kernel to communicate with another without host 
interaction. In addition to this, Intel provide an I/O Channel API to 
stream data into a kernel directly from a stream I/O interface such 
a 10Gb Ethernet. 

For most programmers, there be a need to abstract the hardware detail 
and flow away from the development process. With an SDK, report a 
to the performance of the application can be generate in seconds, a 
well a the pipeline dependencies. This allows for faster development 
and debug of a new application. By give software programmer 
an easy to use and understand interface to the complexity of an FPGA, 
new and optimize application can be developed faster. 

Download Intel® SDK for OpenCL™ Applications for free. 

Have you try the Intel Intel Media SDK? 

Yes 
No 

FPGA Programming Made Easy - insideHPC https://insidehpc.com/2018/03/fpga-programming-made-easy/ 

2 sur 2 19-03-18 à 17:52 


