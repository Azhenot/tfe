


































































Unsupervised learn in probabilistic neural network with multi-state metal-oxide memristive synapsis 


ARTICLE 

Received 24 Feb 2016 | Accepted 15 Jul 2016 | Published 29 Sep 2016 

Unsupervised learn in probabilistic neural 
network with multi-state metal-oxide memristive 
synapsis 
Alexander Serb1, Johannes Bill2,3, Ali Khiat1, Radu Berdan4, Robert Legenstein2 & Themis Prodromakis1 

In an increasingly data-rich world the need for develop compute system that cannot 

only process, but ideally also interpret big data be become continuously more pressing. 

Brain-inspired concept have show great promise towards address this need. Here we 

demonstrate unsupervised learn in a probabilistic neural network that utilizes metal-oxide 

memristive device a multi-state synapses. Our approach can be exploit for processing 

unlabelled data and can adapt to time-varying cluster that underlie incoming data by sup- 

port the capability of reversible unsupervised learning. The potential of this work be 

showcased through the demonstration of successful learn in the presence of corrupt 

input data and probabilistic neurons, thus pave the way towards robust big-data processors. 

DOI: 10.1038/ncomms12611 OPEN 

1 Electronics and Computer Science Department, University of Southampton, Southampton SO17 1BJ, UK. 2 Institute for Theoretical Computer Science, 
Graz University of Technology, 8010 Graz, Austria. 3 Heidelberg University, Department of Physics and Astronomy, Kirchhoff Institute for Physics, 69120 
Heidelberg, Germany. 4 Department of Electrical and Electronic Engineering, Imperial College, London SW7 2AZ, UK. Correspondence and request for 
material should be address to A.S. (email: A.Serb@soton.ac.uk). 

NATURE COMMUNICATIONS | 7:12611 | DOI: 10.1038/ncomms12611 | www.nature.com/naturecommunications 1 

mailto:A.Serb@soton.ac.uk 
http://www.nature.com/naturecommunications 


P 
lastic synaptic connection be a key computational element 
of both the brain and brain-inspired neuromorphic 
systems. Outnumbering neuron by approximately 1,000 

to 1 in the human brain1, synapsis have to perform their main 
function, namely interconnect neural cell via an often 
modifiable couple strength (a weight), within extremely tight 
volume and power budgets. The desire to build and operate 
large neural network with vast amount of synapsis have render 
the task of create similarly efficient and yet practically 
implementable artificial synapsis a high priority. 

A major route towards that goal have be the development of 
hardware synapse analogues, which have traditionally rely on 
commercially available complementary metal-oxide semiconduc- 
tor technologies2–5. However, the visionary idea of the early day 
of the field of memristor research6,7 have lead to a different 
approach: the exploitation of the intrinsic electrical property of a 
large and diverse group of emerge nanoelectronic device 
exhibit the phenomenon of resistive switching, nowadays also 
refer to a memristive devices8–10. The scalability11, 
thresholded input voltage time-integration12, multi-level 
storage13, simple two-terminal structure, potential for low 
power operation14 and back-end-of-line integration15 feature 
demonstrate thus far in various memristive device technology 
attract study in the field of memristive synapses. 

So far, the potential of memristors to act a ersatz synapsis have 
be study through simulation16–21 and the demonstration of in- 
silico learn rule implementation, most notably—but 
not exclusively—that of spike timing-dependent plasticity 
(STDP)22 generate by appropriate electrical memristor biasing 
schemes23–27. Other advance include the emulation of basic 
heterosynaptic plasticity in multi-terminal memristive devices28, a 
well a the demonstration of STDP by exploit the internal 
dynamic of memristors, albeit in volatile device (that is, device 
that do not retain their memory state for long period of time, for 
example, 1 day)29,30 and effort towards the integration of 
memristors with neuromorphic circuits31. More recently the first 
example of practical, small-scale artificial neural network (ANN) 
operating with memristive synapsis have be demonstrated, all 
use deterministic, supervise learn techniques. These include 
ref. 32, where learn be implement use a variant of the 
perceptron learn rule (the Manhattan update rule), and ref. 33, 
where phase-change memory (PCM) rather than metal-oxide 
technology-based memristors be use to demonstrate learn in 
a Hopfield network use Hebbian learning. Finally, the first large- 
scale neural network use PCM technology be demonstrate by 

IBM34, where a modify back-propagation rule be use in a 
three-layer ANN. 

In this work we exploit the gradual, multi-level switch 
characteristic of metal-oxide-based memristors (Supplementary 
Note 1, include Supplementary Table 1 and Supplementary 
Fig. 1) for demonstrate unsupervised learn in a probabilistic 
neural network. Our work consolidates the current state 
of art in single-component synapse emulator (for example, 
ref 20,23,24,26,30) and advance the field of operating 
memristors a hardware synapse emulator in practical neural 
network (for example, ref 27,32). Particularly, we demonstrate 
in a neural network use memristor synapses: first, pattern 
classification in a probabilistic neural network; second, 
unsupervised learn achieve through the implementation of 
a winner-take-all (WTA) network; third, reversible learning, an 
often neglect but essential aspect of truly flexible and useful 
learn system and fourth, the exploitation of the intrinsic 
property of our memristors to successfully allow the neural 
network to encode conditional probability without any special 
input signal waveform engineering. 

Results 
Weight-dependent STDP in TiO2-based memristors. STDP be 
one of the most widely study plasticity rule for spike neural 
networks. In it pure form it relies on the premise that the relative 
timing between pre- and post-synaptic spike event be the major 
determinant of both the direction (potentiation/depression) and 
the magnitude of synaptic weight changes. Recently the hard- 
ware-friendly, pulse-based biasing scheme show in Fig. 1a–c have 
be propose a a possible method for implement STDP in 
memristor-based synapses17,18,35. The memristor’s resistive state 
(conductance) be interpret a the equivalent of a synaptic 
efficacy (weight). To implement plasticity events, the scheme 
exploit the inherent capability of some memristive device to act 
a thresholded voltage time-integrators, that be to change their 
resistive state a a function of input voltage, so long a it 
magnitude exceeds a certain threshold (the switch threshold). 
When the pre-synaptic neuron spikes, a prolong low-voltage 
pulse be apply across the memristor. This pulse be by itself 
unable to induce any resistive switch (Fig. 1a). Spiking of the 
post-synaptic neuron, on the other hand, lead to the application 
of a brief, biphasic, bipolar pulse (Fig. 1b) that cause the 
memristor to undergo long-term depression (LTD). Concurrent 
pre- and post-synaptic terminal spike cause the memristor to 

Conductance (n ) (μS) 

6 

0 

–2 

–6 

Event number 

0 2,000 4,000 6,000 8,000 

175 

165 

145 

155 

155 165150 160 175 

4 

2 

–4 

170 

Neutral 

t 

t 

t 

V 
Pre 

Post 

Pre+Post 

Vth+ 

Vth– 

a 

N 
eu 

tr 
al 

LT 
P 

LT 
D 

b 

c 

e 

= 

d 

5 m 

100 μs 

Δ 

LTDLTD LTP 

Δ 
/ 


(% 

) 

C 
on 

du 
ct 

an 
ce 


(n 

) 
(μ 

S 
) 

(n) 

(n + 100)– (n) 

Figure 1 | Weight-dependent STDP in memristors. (a–c) Memristor electrical biasing scheme use to test STDP. Vthþ , Vth� : memristor switch 

thresholds. Data for individual device threshold in Supplementary Table 2. Voltage level use to induce LTP and LTD in Supplementary Table 3. Red 

shading: supra-threshold portion of the input affect the memristor resistive state. (d) Typical experimental result from TiO2 device. Black trace: raw 

data; blue trace: 10-point move average; red trace: exponential fitting. Red shading: LTP. Blue shading: LTD. No shading: neutral region, no plasticity 

triggered. (e) Experimental data and exponential fitting describe STDP magnitude (relative change in device conductance g) a a function of initial 
memristor conductance. Red line: LTP fitting. Blue line: LTD fitting. Black dash line: zero conductance change level. Same data a in d. 

ARTICLE NATURE COMMUNICATIONS | DOI: 10.1038/ncomms12611 

2 NATURE COMMUNICATIONS | 7:12611 | DOI: 10.1038/ncomms12611 | www.nature.com/naturecommunications 

http://www.nature.com/naturecommunications 


sense the superposition of the pre- and post-synaptic spike 
waveform and thereby undergo long-term potentiation 
(LTP; Fig. 1c). 

We fabricate TiO2-based device (see Methods) and study 
their behaviour during exposure to train of STDP events. Each 
device under test (DUT) be expose to four block of events, 
each consist of 2,400 individual events: LTD-inducing post- 
only events; LTP-inducing combine pre- and post-events; LTD 
event again; and finally, plasticity-neutral pre-events only. 
Figure 1d show typical measure result from our prototype 
DUTs for all mention electrical biasing schemes. First, we 
observe that the STDP rule be follow throughout the entire 
test, include the plasticity-neutrality of pre-only event 
(confirmed by experiment where pre-only event be apply 
at the high-conductance boundary of the DUT’s operating 
range—Supplementary Fig. 2). Next, we observe the marked 
dependence of change in resistive state on the run resistive 
state (DUT conductance g) for both LTP and LTD (Fig. 1e). Such 
dependence of conductance change on the actual memristive 
state have commonly be observe in memristors, include both 
metal-oxide25 and phase-change36 implementations. In super- 
vised learn rules, such a the perceptron rule, this property be 
undesirable a update independent of memristive state be 
required32. Here we particularly leverage this property to enable 
for the first-time unsupervised learn in a practical network, in 
a manner similar to the work present previously in ref. 37 that 
be base on simulation of PCM models. 

The experimental result in Fig. 1d,e suggest that the STDP rule 
be implement can be described for each plasticity event by 

Dg ¼ POST � f þ ðgÞ � PRE� f � ðgÞð Þ ð1Þ 
where PRE and POST be binary value indicate whether a 
pre- or post-spike have occur in the give event, respectively, 
whilst fþ (g) and f� (g) be function that capture the influence 
of DUT conductance on LTP and LTD strength 
(also see Supplementary Note 2 and Supplementary Fig. 3). 
Normalizing to obtain relative change in g and rearrange 
we get 

Dg 
g 
¼ POST � PRE � f LTPðgÞ� ð1� PREÞ � f LTDðgÞ 

� � 
ð2Þ 

where f LTDðgÞ ¼ f 
� ðgÞ 

g and f 
LTPðgÞ ¼ f 

þ ðgÞ� f � ðgÞ 
g both fit by 

exponential in Fig. 1e. 

Plotting Dg/g versus g for both LTP and LTD reveals that our 
solid-state synapse feature inherently self-stabilizing plasticity 
(Fig. 1e): at high conductance levels, further increase in 
conductance (LTP) become progressively smaller. Similarly, at the 
bottom end of the conductance scale LTD induction becomes 
increasingly ineffective. The gradual and monotonic dependence 
of weight change on the run value of weight be an essential 
feature for memory model of unsupervised learning. If a 
stochastic data stream that trigger LTP and LTD with 
probability p and (1� p), respectively, be fed into the DUT, we 
can expect it conductance to converge towards a unique 
equilibrium point. In other words, the memristive synapse should 
be able to encode and store in it resistive state the conditional 
probability p(PRE|POST¼ 1) that a give postsynaptic spike be 
precede by a presynaptic spike at the synapse within a short time 
interval. For instance, consider a memrisitve synapse that be 
expose to STDP event that consist of a mixture of 90% LTP 
event and 10% LTD events. We can expect the DUT 
conductance to eventually stabilise close to the upper boundary 
of the DUT’s resistive state operating range. 

Memristor synapsis can encode conditional probabilities. We 
experimentally test the theoretical prediction that conditional 
probability can be encode and store in the resistive state of a 
memristor. We perform four measurement run on the same 
test device. Each run consist of 10 block of plasticity event 
(104 event per block, that is, 105 event per run, blue dot in 
Fig. 2). Individual plasticity event be randomly chosen to be 
LTP event with probability pLTP and LTD event with probability 
1� pLTP, where the probability of an LTP event be fix within 
each block. In run 2 and 4, pLTP be 95%, 85%, ..., 5% for block 
1–10, respectively, that is, the probability of LTP event be 
decrease after each event block. In run 1 and 3, the same LTP 
probability be tested, but in random order (Supplementary 
Table 4 and Supplementary Note 3). At the end of each block the 
final resistive state of the memristor be measure (average of 25 
read-out after the end of each block). 

The result of the experiment be show in Fig. 2. After a burn- 
in phase, during which the memristor gradually reach it 
normal operating range observe during the first run (105 events) 
we obtain consistent convergence point for the remain 
three run (3 � 105 events) and a clear mapping between LTP/LTD 
composition and convergence conductance emerges: converge 

Final v LTP/LTD proportion 

Probability of LTP event 

Run 1 
Run 2 
Run 3 
Run 4 

Block 2.1 

Block 2.3 

4.6 

4.4 

3.8 

3.7 

4.2 

4.0 

0.05 0.15 0.25 0.35 0.45 0.55 0.65 0.75 0.85 0.95 

a Block 2.3 

C 
on 

du 
ct 

an 
ce 

( 
μS 

) 

Previous LTP prob.: 0.65 
Current LTP prob.: 0.25 

4.05 

3.85 

4.00 

3.95 

3.90 

5.0 k2.5 k 7.5 k0 10 k 
Input event number 

Block 2.1 

C 
on 

du 
ct 

an 
ce 

( 
μS 

) 

Previous LTP prob.: 0.05 
Current LTP prob.: 0.95 

4.1 

4.0 

3.9 

3.8 

c 

b 

F 
in 

al 
c 

on 
du 

ct 
an 

ce 


( 
μS 

) 

Figure 2 | TiO2-based memristors encode conditional probabilities. (a) Final memristor conductance after application of 10 
4 input event block feature 

different LTP/LTD compositions. Blue line corresponds to linear fit for run 2–4. Error bars: s.d., number of sample (individual resistive state readings) per 

data point n¼ 25. Typical trace show resistive state migration during two typical blocks: (b) one where the device be overall depressed (third block in 
run 2: Block 2.3) and (c) where it be potentiate (first block in run 2: Block 2.1). 

NATURE COMMUNICATIONS | DOI: 10.1038/ncomms12611 ARTICLE 

NATURE COMMUNICATIONS | 7:12611 | DOI: 10.1038/ncomms12611 | www.nature.com/naturecommunications 3 

http://www.nature.com/naturecommunications 


conductance data from run 2–4 (that be exclude burn-in) be 
first pool (convergence point at each LTP/LTD composition 
be averaged) and then fit to a linear function (equation and 
fitting parameter in Supplementary Note 4) of converge 
conductance versus LTP/LTD composition by least square 
regression. The root mean square error of this fitting be 
approximately 5:25 � 10� 2 mS. Moreover, we notice that the run 
where the order of the LTP/LTD composition point be 
scramble (1 and 3) show less well-behaved convergence points. 
Attempting to extrapolate memristor behaviour by exponential 
fitting, a present in Supplementary Fig. 4 indicates that even 
104 event seem insufficient to achieve convergence give the 
choice of biasing parameter (Supplementary Note 5). We believe 
that this could be potentially address a more realistic 
memristor model appear. Thus, we can conclude that TiO2 
memristor-based synapsis appear to be able to practically support 
the encode of conditional probability p(PRE|POST¼ 1) in 
their resistive states. 

Probabilistic neural network with memristor synapses. The 
ability of individual memristors to encode conditional prob- 
ability can be leveraged for the implementation of self-adapting 
spike neural networks. In particular, WTA networks38 have 
repeatedly be propose for hardware implementations39–42, 
motivate in part by the fact that WTA structure play an 
important role in cortical information processing43. Recent 
rigorous analysis reveal that WTA network consist of 
stochastic spike neuron subject to weight-dependent 
STDP be capable of perform probabilistic inference that 
essentially carry out cluster of input patterns. While a 
number of different type of WTA network have be 
considered35,44–47, optimal parameter adaptation be in any case 
accomplish by weight-dependent STDP rule of the form 
Dw / POST � ðPRE � f ðwÞÞ, that is, by rule similar to the 
memristor-implemented plasticity rule from equation (1). 

To test whether memristor-based synapsis can perform 
adequately a component of WTA networks, we implement 
a WTA network that consist of two stochastic spike neuron 
with four input each. All four input synapsis to one WTA 
neuron be implement by TiO2-based devices, while the 
synapsis to the other neuron be implement in software 
(Fig. 3a). This hybrid network allow u to directly compare 

software-simulated synaptic connection with memristive 
synapsis in the same set-up and with exactly the same inputs. 
It also allow u to directly manipulate the software synapsis 
and study the influence on memristive plasticity. 

The 2-neuron probabilistic WTA network be implement on 
an in-house developed instrumentation board for memristor 
device characterization48. The two artificial neurons, WTA lateral 
inhibition and synapsis feed one of the neuron be all 
implement in software on the board’s microcontroller unit. 
During each experiment run 1,200 four-bit pattern be 
present to the network at the input y ¼ ðy0; y1; y2; y3Þ. 
Determining the value of y begin by randomly and 
equiprobably draw a pattern to be present from a set of 
prototype test pattern (in our case 0110 and 1001). Next, each bit 
in the select pattern be flip with a probability of 10% so that 
the network be present with noisy instantiation of the 
prototype patterns. The result generate input vector be then 
multiply by the weight vector of both neuron and translate 
into membrane potential values, one for each neuron, a per 
equation (3): 

Uiðy; tÞ ¼ yiðtÞþwiðtÞ � yðtÞ ð3Þ 

where Ui(y,t) denotes the membrane potential for neuron i during 
event t, yi(t) an adaptive excitability term that homoeostatically 
regulates neuron activity and wi the weight vector from input y 
to neuron i. The symbol ? represent the dot product operator. 
Importantly, whilst Ui represent the membrane potential of 
neuron i for the purpose of drive it fire behaviour, it do 
not directly translate to a physical voltage value to be apply to 
all synapse terminal (pre or post) it be connect to. Neuron 
fire event be instead translate into appropriate pre- or post- 
type voltage waveform that be use to bias the affected 
memristor synapses. The homoeostatic term yi(t) have be use 
before for memristor learning17 and have be theoretically 
justified in ref. 44 for unsupervised learn in probabilistic 
WTA networks. By reduce the propensity to fire for neuron 
that show high average response, homoeostasis ensures that both 
neuron participate in the WTA competition over the long run 
(details in Methods section). 

S 
i 

S 
yn 

. 

W 
ei 

gh 
t 

Time (pattern presentations) 

0 200 400 600 800 1,000 

1 

0 

–1 

0 

4 

7 

0 

z1 

z0 

Hardware synapse 

Softw 
be s 

ynap 
se 

Lateral 
inhibition 

y0 

y1 

y2 

y3 

Final response 

a b 

d 

e 

f 

01 
10 

10 
01 

01 
10 

� 

10 
01 

� 

F 
ire 

c 
ou 

nt 

4 

–4 

Specialization towards 1001 
Specialization towards 0110 

1,200 

Initial response 

F 
ire 

c 
ou 

nt 14 

0 

10 

5 

Hard 
Soft 

14 

0 

10 

5 

1 
0 

–1 
0 10 20 30 40 50 Hardware synapse neuron 

Software synapse neuron 

U 
i(y 

,t 
) 

0 
6 

–6 

c Hardware 1001 Software 1001 Hardware 0110 Software 0110 

Figure 3 | Learning in a WTA network with a mixture of software and memristor synapses. (a) Diagram of the 2-neuron, WTA network use in this 

work. (b) Evolution of neuron specialization Si to pattern 0110 and 1001 a weight change over successive events, illustrate the interplay between the 

two neurons. Inset: close-up of first 60 trials. (c) Computed membrane potential of each neuron to both prototype pattern accord to their weight at 

every trial illustrate the intrinsic pattern preference of each neuron, that be independent of their interaction in the WTA network. (d) Evolution of 

hardware (synapses 0–3, enclose in thick, black frame) and software (synapses 4–7) weights. (e,f) Responses of the WTA network to the initial (e) and 

final (f) 41 input samples. The fire count of both the hardware synapse neuron (orange) and the software synapse neuron (turquoise) be show for pattern 

0110 and 1001, and pattern that differ from these prototype in one position (0110d and 1001d). The different pattern group be perfectly segregate by 

the end of the run. 

ARTICLE NATURE COMMUNICATIONS | DOI: 10.1038/ncomms12611 

4 NATURE COMMUNICATIONS | 7:12611 | DOI: 10.1038/ncomms12611 | www.nature.com/naturecommunications 

http://www.nature.com/naturecommunications 


The probability pi(y,t) with which neuron i win the WTA 
competition and therefore spike at event t be give by 

piðy; tÞ ¼ 
eUiðy;tÞP 

j e 
Ujðy;tÞ ð4Þ 

Using compute pi value for each pattern at each time step we 
can define a specialization metric S that directly quantifies how 
attune each neuron be to the two prototype input patterns: 

SiðtÞ ¼ pið1001; tÞ� pið0110; tÞ ð5Þ 

where Si(t) be the specialization of neuron i at time t and take 
value between 1 (perfectly specialized on 1001) and � 1 (perfect 
specialization on 0110). 

By definition, at every event exactly one of the neuron win 
and fires, thus trigger plasticity at it synapses. In the case of 
software synapses, weight be update through a simple STDP 
rule that aim to approximately mirror memristor plasticity. The 
variability in result STDP-driven weight change Dw and 
measurement noise observe in memristor synapsis have both 
be include in the software synapse plasticity mechanism 
(see Methods). In the case of the hardware synapsis the STDP 
condition that determine whether LTP or LTD be require be 
the same a for their software counterparts, but the LTP and LTD 
event be translate into pulse voltage stimulation and therefore 
the magnitude of weight change be inherently set by each 
memristor. For the purpose of this experiment and since the 
non-invasiveness of the pre-only event have already be 
confirm (Fig. 1), the pulse scheme for LTP and LTD be 
reduce to only the above-threshold portion of the original 
waveforms, that is, both LTP and LTD be represent by simple 
square-waves of appropriate amplitude. To map device resistive 
state onto weight all memristive synapsis be first subject to 
the protocol described in Fig. 1. Estimated maximum and 
minimum operational conductance value (extracted from the 
constant term of exponential fitting to trace in Fig. 1d—also see 
Supplementary Fig. 5) be mapped linearly to a weight range of 
[� 2.2, þ 2.2]. The conductance-weight mapping be summar- 
ized in Supplementary Table 3. 

Results from a WTA network experiment (run no. 1) be 
show in Fig. 3. Both hardware and software synaptic weight wij 
be initialize close to 0 (see Methods section) and subsequently 
the network be allow to react to the incoming pattern freely. 
According to theoretical WTA models, unsupervised synaptic 
adaptation through STDP should lead to a cluster of input 
such that each neuron be preferentially activate by one of the 
prototype pattern and noisy variation of it. Figure 3 demon- 
strates this behaviour in our set-up with memristive synapses. 
The specialization evolution in Fig. 3b show how after a brief 
initial phase of uncertainty where the neuron be approximately 
equally attune to both pattern and none can claim dominance 
over either pattern (approximately first 20–30 samples), the 
hardware synapse neuron develops a clear preference for pattern 
0110 (specialization S approach � 1). Similarly, we can use the 
weight of software and hardware synapsis at each trial to plot 
compute membrane potential for each neuron in response to 
each pattern. This be show in Fig. 3c where we observe how at 
the begin of the run neither neuron have any intrinsic 
preference for any pattern (that be independent of the neuron– 
neuron interaction through the WTA); this only start develop 
afterwards. The robustness of these experiment be confirm 
by repeat the experiment three time in total. Results from all 
three run be summarize in Supplementary Fig. 6 and 
Supplementary Note 6. 

Examining the evolution of weight value throughout the run 
(Fig. 3d) we observe that the hardware synapse weight 

experience noisy and slow drift from their initial values. To 
quantify this the evolution of each weight over trial be fit to 
an exponential function and the s.d. of the residual be then 
computed. This yield estimate of both the noise level and the 
overall weight change for each synapse over the trial (for full 
result see Supplementary Note 7 and Supplementary Fig. 7). The 
software synapsis concurrently experience similarly imperfect 
drift towards their final state. For comparison, see Supplementary 
Figs 8 and 9 in the case where software synapsis be noise-free. 
These result be confirm by Fig. 3e,f where we see a 
substantially clearer classification of pattern 0110 and related 
pattern different from 0110 in only one position (0110d) on the 
one hand (purple shading) and 1001 with 1001d (patterns 
different from 1001 in only one position) on the other hand 
(green shading) towards the end of the experiment versus the 
beginning. Specifically, at the begin of the run pattern 1001 
and 1001d cause the neuron that ultimately assigns itself to them 
(software synapse) to fire only approximately 56% of the time 
whilst similarly the hardware synapse neuron responds to it 
correspond pattern (0110 and 0110d) approximately 77% of 
the time. In contrast, at the end of the run classification accuracy 
increase to 100% for both neurons. Thus, the WTA network 
successfully segregate the prototype pattern despite the presence 
of noise. This result be achieve in a fully unsupervised manner. 
An example case of how the same test evolves when software 
synapse imperfection be suppress be show in Supplementary 
Note 8 and Supplementary Figs 8 and 9. 

Finally, to demonstrate that the WTA network be capable of not 
only learn a pattern but also if demand forget and 
relearn it, a further set of experiment be conducted. This 
consist of two further, consecutive WTA learn run (runs 
no. 2 and 3) immediately follow the main run from Fig. 3 
(by the end of which we recall the memristor synapsis have 
specialized their neuron to pattern 0110). At the begin of 
each of these additional run the software synapsis be 
initialize such that the network specialization acquire during 
the immediately precede learn run be reverse (hardware 
synapsis be left unchanged). Under these circumstance the 
memristor-based synapsis be expect to respond by flip 
their intrinsic preference to the opposite pattern. Results be 
show in Fig. 4. 

In the case of the first additional run, the software synapsis 
be initialize in such way a to instantly reverse the prefer 
pattern-to-neuron mapping outcome of the previous learn 
session and start the learn run with the software synapse, 
rather than the memristor synapse neuron more responsive to 
pattern 0110. Such initialization should induce the memristor 
synapsis to attempt specialize on pattern 1001 instead. The 
top half of Fig. 4 show that this be indeed the case: at the end of 
the run the hardware synapse neuron have lose it intrinsic 
preference to pattern 0110 and begin switch to 1001 a 
evidence by the membrane potential plot (Fig. 4b), which 
allow the software neuron to consolidate it dominance of 
0110 (Fig. 4a). Simultaneously, the software synapse weight 
remain relatively static around their extreme values, a 
initialized. The second additional run similarly initializes the 
software synapsis appropriately to guide the memristor 
synapsis to re-specialize on pattern 0110. This successfully 
occurs a evidence by Fig. 4f–j and confirm by additional 
run show in Supplementary Fig. 10 and Supplementary Note 
9. In both cases, the fire count histogram (Fig. 4d,e,i,j) show 
how the initial classification preference of each neuron become 
entrench during each run a a result of the combine 
change in both software and hardware synapse weight with 
hardware synapsis mainly drive the process (Fig. 4b,g and 
Supplementary Table 5). 

NATURE COMMUNICATIONS | DOI: 10.1038/ncomms12611 ARTICLE 

NATURE COMMUNICATIONS | 7:12611 | DOI: 10.1038/ncomms12611 | www.nature.com/naturecommunications 5 

http://www.nature.com/naturecommunications 


Discussion 
In this work we demonstrate that metal-oxide-based synapsis 
with inherent, gradual, self-limiting switch property be 
capable of learn and re-learning of input pattern in an 
unsupervised manner within a probabilistic WTA network. Key 
to the learn process be the memristors’ capability of encode 
conditional probability of the expect input signal within their 
resistive states. As a notable consequence of the probabilistic 
learn scheme, ubiquitous (and unavoidable) noisy change in 
the resistive state be continuously counterbalance by the 
ongoing alignment of present weight with future present 
inputs. 

This study be perform on TiO2-based devices, which have 
historically be one of the significant metal-oxide system use 
in memristive devices49. In previous work, we have identify that 
these device support multi-level switching50, the emulation of 
short- and long-term plasticity20,30, and bidirectionally gradual 
switching51, which we can reliably detect use our tailor-made 
instruments48 even at low OFF/ON resistive state ratios. A brief 
discussion on the electrochemistry behind our device be include 
in Supplementary Note 10. Endurance and retention data on our 
device be show in Supplementary Figs 11 and 12. Here we 
build on our previous result for demonstrate a memristor- 
based, system-level application. The present concept may 
extend to other memristor technology base on different metal- 
oxide such a HfO2 and Ta2O5 that have show great promise 
towards memory applications. 

For the purpose of this work, our prototype be operate 
under low voltage conditions, that be close to their threshold 

voltage (Supplementary Tables 2, 3). Importantly, the devices’ 
threshold voltage be not rigidly fixed, but rather depend on 
stimulus waveform shape, a well a the initial memory state of 
the devices. For example, the threshold voltage dependence on 
square-wave pulse duration be show in the Supplementary Fig. 
13. As a result, the voltage amplitude of the pre-waveform, a 
show in Fig. 1a–c, be important a it determines the voltage 
contrast between: First, the super-threshold peak in the preþ post 
waveform and the sub-threshold peak in the post-only waveform 
and second the pre-only waveform and the post-only peak. Larger 
contrast mean that spurious drift effect induced by threshold 
voltage variability can be mitigate more effectively. This reduces 
the risk arise from unwanted plasticity cause by repeat pre- 
pulse without any post-response, a well a unwanted, 
concurrent DUT resistive state disturbance by both the peak 
and the trough of the post-waveform. 

Considering future implementation of practical memristor- 
base system we note the following: First, the downscaling of the 
memristor component itself a a memory storage element be 
already compare favourably to mainstream technology 
(for example, static random access memory—SRAM), a 
memristors in the 10 nm� 10 nm¼ 100 nm2 range have already 
be demonstrated11. SRAM scale be project to become 
difficult at below 50,000 nm2 even under favourable process 
variability conditions52 (but note 1T-SRAM technology53). Even 
though the performance of memristor device be also know to be 
impact by downscaling, through, for example, increase access 
wire resistance, the advantage over SRAM be expect to 
dominate. Furthermore, we note that memristors can pack 

S 
yn 

. 

0 

4 

7 

b 

c 
S 

yn 
. 

0 

4 

7 

g 

h 

W 
ei 

gh 
t 

0 

5 

–5 

W 
ei 

gh 
t 

0 

5 

–5 
0 200 400 600 800 1,000 1,200 

e Final response 

01 
10 

10 
01 

01 
10 

� 

10 
01 

� 

F 
ire 

c 
ou 

nt 16 

0 

12 
8 
4 

j Final response 

01 
10 

10 
01 

01 
10 

� 

10 
01 

� 

F 
ire 

c 
ou 

nt 

0 
5 

10 
15 
20 

0 200 400 600 800 1,000 1,200 

d 
Initial response 

16 

0 

12 
8 

F 
ire 

c 
ou 

nt 

4 

Hard 
Soft 

i Initial response 

F 
ire 

c 
ou 

nt 

0 
5 

10 
15 
20 Hard 

Soft 

0 

9 

–9 

Hardware 1001 Software 1001 Hardware 0110 Software 0110 

Hardware 1001 Software 1001 Hardware 0110 Software 0110 

U 
i(y 

,t 
) 

U 
i(y 

,t 
) 

0 

8 

–8 

1 

0 

–1 

a 
Specialization towards 1001 
Specialization towards 0110 

1 

0 

–1 

f 
Specialization towards 1001 

Specialization towards 0110 

S 
i 

S 
i 

Time (pattern presentations) 

Time (pattern presentations) 

Figure 4 | Reversible learn be support in WTA network use TiO2 memristor-based synapses. (a–e) First run attempt to unteach the pattern 

recognition ability gain in Fig. 3. (a) Evolution of neuron specialization Si to pattern 0110 and 1001 a weight change over successive events, 

illustrate the interplay between the two neurons. (b) Computed membrane potential of each neuron to both prototype pattern accord to their 

weight at every trial illustrate the intrinsic pattern preference of each neuron, that be independent of their interaction in the WTA network. (c) Evolution 

of hardware (synapses 0–3, enclose in thick, black frame) and software (synapses 4–7) weights. (d,e) Responses of the WTA network to the initial (d) 

and final (e) 41 input samples. The fire count of both the hardware synapse neuron (orange) and the software synapse neuron (turquoise) be show for 

pattern 0110, 1001 and pattern that differ from these prototype in one position (0110d and 1001d). (f–j) Corresponding data a in a–e for second run 

attempt to reteach the memristor synapsis to prefer pattern 0110. The abrupt change between final and initial response over consecutive experiment 

mainly arise from the different initialization of the software synapsis in each case. 

ARTICLE NATURE COMMUNICATIONS | DOI: 10.1038/ncomms12611 

6 NATURE COMMUNICATIONS | 7:12611 | DOI: 10.1038/ncomms12611 | www.nature.com/naturecommunications 

http://www.nature.com/naturecommunications 


more than 1 bit/storage element in a non-volatile manner whilst 
SRAM be purely digital and volatile. Second, at the array level, the 
pack density of memristors can be in-principle increase by 
the development of high density three-dimensional crossbar 
arrays54, where back-end integrable selector elements55 could 
mitigate the well-known sneak path problem56. Third, at the 
peripheral circuit level the trade-off between memristor 
functionality and circuit complexity need to be study more 
in-depth. Standard square pulse generator (for write) and sense 
amplifier (for read), also use in conventional memory systems, 
might suffice if memristors be to be treat a binary data storage 
elements. More complicate circuit capable of generate 
multiple voltage level (write) and reading absolute resistance 
value will be, however, need for multi-state operation; a 
compromise between high bit resolution operation and 
require silicon real estate for peripheral circuits. Finally, the 
challenge of interfacing with analogue hardware-based artificial 
neuron have to be considered. Optimized operation will be 
achieve if the artificial neuron output spike of the form 
exhibit in Fig. 1a–c and all the voltage involve be within the 
headroom require by the artificial neuron circuitry. If the former 
condition be not met, then each neuron will need to be equip 
with a suitable output waveform-shaping circuit at the moderate 
cost of 1 per neuron. This can be expect to be a relatively minor 
inconvenience if the waveform involve be simply variable 
duration square waves; easily obtainable via digital clock signals. 
If the latter condition be not met, then additional supply rail will 
have to be introduce on-chip and the output waveform-shaping 
circuit will require level shifter of voltage difference-related 
level of complexity; yet the cost will remain at the 1 per neuron 
level. Notably, in this work biasing condition be individually 
tailor for each memristive synapse, a result of device-to-device 
variability that be expect to become increasingly challenge 
with downscaling. Improvements in control over fabrication and 
electroforming condition be need to counterbalance that 
effect and deliver memristors that operate under sufficiently 
uniform biasing condition to use a single, non-programmable 
waveform-shaping circuit for all device in practical systems. 

The WTA architecture use in this study can be see a a 
simplify version of cortical layer 2/3 where parvalbumin- 
positive interneurons provide feedback inhibition to pyramidal 
cell (see, for example, ref 44,46,47,57,58 for similar models). 
Recent experimental data on the connectivity dynamic in cortical 
circuit suggest that synaptic modification in the cortex be 
stochastic (for example, ref 59–61). This be of particular 
relevance to our study a our result demonstrate WTA 
architecture be particularly robust against the noisy synaptic 
plasticity exhibit by our memristive prototypes, also note 
through simulation in ref. 17. In addition, the theoretical 
framework introduce in ref 62,63 indicates that stochastic 
plasticity may even have advantageous computational properties, 
in that it performs Bayesian inference on optimal circuit 
parameters, suggest that the inherent stochastic property of 
memristors could even be beneficial to learning. 

In our experiments, the prototype pattern 1001 and 0110 be 
present a noisy version where each component be 
independently invert with a probability of 10%. Hence, the 
present pattern for prototype 1001 include pattern 0001, 
1000, 1101 and 1011. These pattern be denote by 1001d 
(analogous noisy version of 0110 be denote by 0110d). In 
particular the noisy version 1101 and 1011 show significant 
overlap with the other prototype 0110 since they include one of 
their two non-zero bits. Our result (see, for example, Fig. 3e,f) 
show that the system be very robust to such pattern overlap since 
those neuron that specialized on the prototype also respond to 
the correspond d pattern after learning. For the current 

set-up, we do not use pattern overlap in the prototype pattern 
because of their very low dimensionality. The theory for WTA 
network and experience from computer simulation (see, for 
example, ref. 47) show that such overlap pose no difficulty for 
the circuit for high-dimensional inputs. Hence, we do not expect 
any additional hardware cost to account for pattern overlap due 
to the inherent robustness of WTA circuit to such pattern sets. 

In the WTA experiments, the Hebbian-type synaptic plasticity 
rule be complement with a homoeostatic plasticity rule, which 
regulates the intrinsic excitability of the neurons. Notably, 
homoeostatic intrinsic plasticity only add a bias to the neuronal 
membrane potential and, thus, do not affect a neuron’s relative 
fire preference to different input patterns. It also influence the 
emerge synaptic weight configuration only indirectly by 
ensure that all WTA neuron maintain a long-term average 
fire rate and thereby modulates the succession of LTP/LTD 
plasticity signals, which the memristor synapsis observe. While 
homoeostatic intrinsic plasticity have be proven mathematically 
to harden robustness of unsupervised learn in stochastic WTA 
circuits, it implementation in neuromorphic design be possible, 
for example, via a local accumulator circuit per neuron. Notably, 
homoeostatic contribution to the overall membrane potential 
during learn (Fig. 3) be significantly small than synaptic 
contribution a depict in Supplementary Fig. 14. 

In conclusion, in this work we have demonstrate for the first 
time that individual, solid-state memristors can emulate 
complex, weight-dependent plasticity, include unsupervised 
classification, forget and relearning, within an experi- 
mental WTA network setting. This pave the way towards 
real-time on-node processing of big, unstructured data; an 
enable technology for address the challenge arise 
from the volume of data generate by the internet-of-things 
revolution. 

Methods 
Device fabrication and preparation. For all experiments, TiO2-based micro- 
metre-scale device be use use a metal–insulator–metal structure. The 
process flow start by thermally oxidise a 6 inch Silicon wafer to create a layer 
that serf a an insulator medium. Then, three major step be realize to 
obtain the bottom electrode, active layer and top electrode consecutively. Each 
step consist of optical lithography, material deposition and liftoff process. The 
10 nm platinum layer be deposit for top electrode and bottom electrode by 
electron beam evaporation, whilst 25 nm TiO2 be deposit by reactive mag- 
netron sputtering. These fabrication step result in a metal–insulator–metal 
stack of Pt(10 nm)/TiO2(25 nm)/Pt(10 nm); device use with slight variation 
for many other purpose in our group27,51. Before use, all device be 
electroformed use positive polarity (top electrode at high potential than 
bottom electrode) pulse voltage ramps. A series resistor be use a a current- 
limit mechanism in all cases. Typical electroforming voltage be in the 
range of 7–8 V. 

WTA network set-up. In the WTA network, neuron fire with probability pi a 
determine by the abstract membrane potential Ui(y,t) accord to equation (3) 
and (4). The network response in turn trigger plasticity of the hardware and 
software synapses, a well a of the excitability yi. For the WTA network set-up, 
we hence have to define three quantities: the plasticity rule of software synapses; a 
function that map the memristor conductance value g to abstract weight w in 
equation (3) (conductance to weight map function); and the plasticity rule of the 
excitability yi. The plasticity rule of hardware synapsis be inherently control by 
the memristors. 

For software synapsis wij we fundamentally use a plasticity rule of the form 

Dwij ¼ Z � POST � PRE�f ðwijÞ 
� � 

ð6Þ 

where the learn rate Z¼ 0.03. The weight-dependent function f(wij) will be 
determine such that it approximately mirror the plasticity of memristor synapses. 
The structure of f(wij) can be estimate from the measure memristor plasticity in 

NATURE COMMUNICATIONS | DOI: 10.1038/ncomms12611 ARTICLE 

NATURE COMMUNICATIONS | 7:12611 | DOI: 10.1038/ncomms12611 | www.nature.com/naturecommunications 7 

http://www.nature.com/naturecommunications 


Fig. 1e. Using equation (1) and (2) we find 

Dg / POST � PRE� f 
� ðgÞ 

f þ ðgÞ 

� � 

¼ POST � PRE� 
f � ðgÞ 

g 
ðf þ ðgÞ� f � ðgÞÞ 

g þ 
f � ðgÞ 

g 

! 
¼ ð7Þ 

¼ POST � PRE� f 
LTDðgÞ 

f LTPðgÞþ f LTDðgÞ 

� � 
ð8Þ 

Supplementary Fig. 3 show the fraction on the right-hand side of equation (8) 
base on the fit function fLTP(g) and fLTD(g) from Fig. 1e. As can be see in the 
figure, the measure plasticity curve of the memristor suggest a sigmoidal shape 
for the function f(wij) in equation (6). This observation can be substantiate 
analytically: by insert the exponential fit f LTPðgÞ ¼ expð� 12 ap � ðg� bPÞÞ and 
f LTPðgÞ ¼ expð12 aD � ðg� bDÞÞ into equation (8), a few line of algebra yield 

Dg / POST � PRE� s aP þ aD 
2 

� g� aPbPþ aDbD 
aP þ aD 

� � �� � 
ð9Þ 

where we define s(x)¼ (1þ exp(� x))� 1. Such sigmoidal shape be qualitatively 
observe for all memristor synapsis (as see in Supplementary Fig. 5), which 
serve a a reference for the shape of software plasticity. On the basis of the 
comparison of equation (6) and equation (9), we map memristor conductance g 
to abstract weight w via a linear function 

w ¼ a � ðg� bÞ ð10Þ 
and set f(wij)¼ s(wij) in equation (6), thereby tackle the software synapse 
plasticity rule and the conductance to weight function. 

Adding realistic imperfection in software synapse function. On top of this 
ideal, theoretical framework we have add two mechanism of software synaptic 
weight corruption to good match the memristors’ own noisy and variable beha- 
viour. Under this more realistic framework we make a distinction between the true, 
underlie weight wij and the a measure weight, include measurement noise vij. 
The first weight corruption mechanism reflect the memristors’ cycle-to-cycle var- 
iation, which in our case manifest itself a variable conductance jump give 
identical stimulus and initial conductance conditions. This be model by add a 
switch variability term wvar drawn from a Gaussian distribution with ssw¼ 0.04 
(units of abstract weight) limited to ±5s. The weight update equation thus becomes 

Dwij ¼ Z � POST � PRE� f ðwijÞ 
� � 

þwvar 
� � 

ð11Þ 

where ssw be chosen to qualitatively force the software synapsis to show slightly 
bad cycle-to-cycle variation than what be be observe in the hardware. This be 
evidence in the Supplementary Fig. 7, where the evolution of individual synaptic 
weight during an ANN learn trial be plotted. 

The second weight corruption mechanism introduces a degree of measurement 
noise in the software synapses, that is, allows the system to use a slightly distort 
weight value without cause any change in the underlie value of wij. As such, at 
every time step, the weight value use to compute neuron membrane potential 
and by extension contribute to deciding, which neuron fire to each present 
input be calculate by the follow formula: 

uij ¼ wij þwmn ð12Þ 

where wmn be an add measurement noise term drawn from a Gaussian 
distribution with smeas¼ 0.4 (abstract weight), limited to ±5s. smeas be 
determine by estimating/quantifying the measurement noise in our device and 
adjust the software so a to behave slightly more stochastically than the 
memristors (Supplementary Table 6). 

Homoeostatic plasticity. Furthermore, to facilitate robust learn we use a 
homoeostatic plasticity mechanism for the excitability yi. At the begin of each 
learn experiment (initial learn only, this do not apply to reversibility learn 
experiment where continuity of yi be maintained), the yi be initialize at 0. Then, 
before each time step t the excitability be update accord to 

yiðtÞ ¼ 
yiðt� 1Þ� Zy=2 if neuron i win event t� 1 
yiðt� 1Þþ Zy=2 otherwise 



ð13Þ 

with learn rate Zy¼ 0.03. The homoeostatic plasticity rule (13) make sure that 
both neuron will participate in the competition and fire, on average, equally often: if 
a neuron fire on average during one half of the time steps, the value of it yi will 
remain approximately stable. Otherwise, it yi will slowly increase (if the neuron fire 
rarely) or decrease (if the neuron fire frequently). The rule (13) defines the plasticity 
rule of the excitability. Notably this homoeostasis rule be very similar to the one use 
in ref. 17 where although specific detail be not given, the spike frequency of all 
neuron be periodically assess and an equivalent to the yi term be adjust 
accordingly. In this work this procedure take place at every trial, which may allow 
finer and more responsive homoeostatic control. The behaviour of this plasticity rule 
be described in ref. 44. 

Memristor parameter extraction. For the WTA experiment, the parameter in 
equation (10) must be individually determine for each memristor. To this end, the 
conductance operating range of each device be extract in the set-up of Fig. 1d 
before the WTA experiment. The parameter a and b be then implicitly define 
by directly mapping two conductance point gLOW and gHIGH to abstract weight 
value � 2.2 and þ 2.2, respectively. The value for gLOW and gHIGH for each device 
be show in Supplementary Table 3. The numerical value for all initial and final 
weight during the WTA experiment be provide in Supplementary Table 5 for 
both software and memristive synapses. 

Network initialization procedures. The experimental run correspond to Fig. 3 
(and similar, confirmation run include in the Supplementary Material) require all 
weight to be initialize a close to 0 a possible. For the hardware synapsis this be do 
through the memristor-handling instrument (Supplementary Fig. 15) by manually 
apply a suitable number of square wave pulse on each device. We do not seek to 
automate this process at this stage. For the software synapses, the initial underlie 
weight wij be set to 0, but then corrupt by measurement noise before use a 
described above. A summary of the key network operating parameter be give in Table 1. 

Instrumentation. All experiment be carry out use an upgraded version of 
the in-house instrumentation described in ref. 48. More detail provide in 
Supplementary Note 11. 

Data availability. All data support this study and it finding be available 
within the article, it Supplementary Information and associate files. This include 
relevant software code. Any source data deem relevant be available from the 
correspond author on request. 

References 
1. Drachman, D. A. Do we have brain to spare? Neurology 64, 2004–2005 (2005). 
2. Hasler, P. et al. in Circuits and Systems, ISCAS’95, 1995 IEEE International 

Symposium on, Vol. 3, 1660–1663. IEEE (Seattle, WA, USA, 1995). 
3. Indiveri, G., Chicca, E. & Douglas, R. A VLSI array of low-power spike 

neuron and bistable synapsis with spike-timing dependent plasticity. IEEE 
Trans. Neural Netw. 17, 211–221 (2006). 

4. Indiveri, G. et al. Neuromorphic silicon neuron circuits. Front. Neurosci. 5, 73 
(2011). 

5. Schemmel, J., Grübl, A., Meier, K. & Mueller, E. in Proc. IJCNN’06, 
International Joint Conference on Neural Networks, 2006 (ed. Yen, G. G.) 1–6 
(IEEE, 2006). 

6. Snider, G. S. Self-organized computation with unreliable, memristive 
nanodevices. Nanotechnology 18, 365202 (2007). 

7. Snider., G. S. in Proc. Nanoarch 2008 - IEEE/ACM International Symposium On 
Nanoscale Architectures (eds Karri, R. & Levitan, S.) 85–92 (IEEE, 2008). 

8. Chua., L. O. Memristor-the miss circuit element. IEEE Trans. Circuit Theory 
18, 507–519 (1971). 

9. Chua, L. O. & Kang, S. M. Memristive device and systems. Proc. IEEE 64, 
209–223 (1976). 

10. Waser, R., Dittmann, R., Staikov, G. & Szot, K. Redox-based resistive switch 
memories-nanoionic mechanisms, prospects, and challenges. Adv. Mater. 101, 
2632–2663 (2009). 

11. Govoreanu, B. et al. in Proc. 2011 IEEE International Electron Devices Meeting 
(ed. Mahoney, P. W.) 31.6 (IEEE, 2011). 

12. Gupta, I. et al. Memristive integrative sensor for neuronal activity. Preprint at 
http://arxiv.org/abs/1507.06832 (2015). 

13. Waser, R. & Aono, M. Nanoionics-based resistive switch memories. 
Nat. Mater. 6, 833–840 (2007). 

14. Schroeder, H., Zhirnov, V. V., Cavin, R. K. & Waser, R. Voltage-time dilemma 
of pure electronic mechanism in resistive switch memory cells. J. Appl. 
Phys. 107, 054517 (2010). 

15. Ma, X., Strukov, D. B., Lee, J. H. & Likharev, K. K. in Proc. 5th IEEE Conference 
on Nanotechnology (ed. Arai, F.) 175–178 (IEEE, 2005). 

16. Li, Q., Serb, A., Prodromakis, T. & Xu, H. A memristor SPICE model 
accounting for synaptic activity dependence. PLoS ONE 10, e0120506 (2015). 

Table 1 | Key ANN operating parameters. 

Symbol Value Units Parameter 

Z 0.03 — Synaptic weight learn rate 
Zy 0.03 — Homoeostatic plasticity learn rate 
ssw 0.04 Abstract 

weight 
Switching noise (software synapse) 

smeas 0.4 Abstract 
weight 

Measurement noise (software 
synapse) 

ARTICLE NATURE COMMUNICATIONS | DOI: 10.1038/ncomms12611 

8 NATURE COMMUNICATIONS | 7:12611 | DOI: 10.1038/ncomms12611 | www.nature.com/naturecommunications 

http://arxiv.org/abs/1507.06832 
http://www.nature.com/naturecommunications 


17. Querlioz, D., Bichler, O. & Gamrat, C. in Proc. IJCNN 2011 International Joint 
Conference on Neural Networks (ed. Minai, A. A.) 1775–1781 (IEEE, 2011). 

18. Serrano-Gotarredona, T., Masquelier, T., Prodromakis, T., Indiveri, G. & 
Linares-Barranco., B. STDP and STDP variation with memristors for spike 
neuromorphic learn systems. Front. Neurosci. 7, 2 (2013). 

19. Sheri, A. M., Hwang, H., Jeon, M. & Lee, B.-G. Neuromorphic character 
recognition system with two PCMO memristors a a synapse. IEEE Trans. Ind. 
Electron. 61, 2933–2941 (2014). 

20. Wei, S. L. et al. Emulating long-term synaptic dynamic with memristive 
devices. Preprint at http://arxiv.org/abs/1509.01998 (2015). 

21. Yu, S. et al. Stochastic learn in oxide binary synaptic device for 
neuromorphic computing. Front. Neurosci. 7, 186 (2013). 

22. Bi, G.-Q. & Poo, M.-M. Synaptic modification in culture hippocampal 
neurons: dependence on spike timing, synaptic strength, and postsynaptic cell 
type. J. Neurosci. 18, 10464–10472 (1998). 

23. Du, N. et al. Single pair spike-timing dependent plasticity in BiFeO3 
memristors with a time window of 25 m to 125 ms. Front. Neurosci. 9, 227 
(2015). 

24. He, W. et al. Enabling an integrate rate-temporal learn scheme on 
memristor. Sci. Rep. 4, 4755 (2014). 

25. Jo, S. H. et al. Nanoscale memristor device a synapse in neuromorphic 
systems. Nano Lett. 10, 1297–1301 (2010). 

26. Mayr, C. et al. in Proc. NIPS 2012 - Advances in Neural Information Processing 
Systems 25 (ed. Pereira, F. et al.) 1700–1708 (Neural Information Processing 
Systems Foundation, Inc., 2012). 

27. Mostafa, H. et al. Implementation of a spike-based perceptron learn rule 
use TiO2� x memristors. Front. Neurosci. 9, 357 (2015). 

28. Yang, Y., Chen, B. & Lu, W. D. Memristive physically evolve network 
enable the emulation of heterosynaptic plasticity. Adv. Mater. 27, 7720–7727 
(2015). 

29. Du, C., Ma, W., Chang, T., Sheridan, P. & Lu, W. D. Biorealistic 
implementation of synaptic function with oxide memristors through internal 
ionic dynamics. Adv. Funct. Mater. 25, 4290–4299 (2015). 

30. Berdan, R. et al. Emulating short-term synaptic dynamic with memristive 
devices. Sci. Rep. 6, 18639 (2016). 

31. Indiveri, G. et al. Integration of nanoscale memristor synapsis in neuromorphic 
compute architectures. Nanotechnology 24, 384010 (2013). 

32. Prezioso, M. et al. Training and operation of an integrate neuromorphic 
network base on metal-oxide memristors. Nature 521, 61–64 (2015). 

33. Eryilmaz, S. B. et al.Brain-like associative learn use a nanoscale non- 
volatile phase change synaptic device array. Preprint at http://arxiv.org/abs/ 
1406.4951 (2014). 

34. Burr, G. W. et al. Experimental demonstration and tolerancing of a large-scale 
neural network (165 000 synapses) use phase-change memory a the synaptic 
weight element. IEEE Trans. Electron Devices 62, 3498–3507 (2015). 

35. Bill, J. & Legenstein, R. A compound memristive synapse model for statistical 
learn through STDP in spike neural networks. Front. Neurosci. 8, 412 (2014). 

36. Suri, M. et al. Physical aspect of low power synapsis base on phase change 
memory devices. J. Appl. Phys. 112, 054904 (2012). 

37. Querlioz, D., Bichler, O., Vincent, A. F. & Gamrat., C. Bioinspired 
program of memory device for implement an inference engine. Proc. 
IEEE 103, 1398–1416 (2015). 

38. Rumelhart, D. E. & Zipser, D. Feature discovery by competitive learning. 
Cognit. Sci. 9, 75–112 (1985). 

39. Choi, J. & Sheu, B. J. A high-precision VLSI winner-take-all circuit for 
self-organizing neural networks. IEEE J. Solid-State Circuits 28, 576–584 (1993). 

40. Indiveri., G. A current-mode hysteretic winner-take-all network, with 
excitatory and inhibitory coupling. Analog Integr. Circuits Signal Process. 28, 
279–291 (2001). 

41. Starzyk, J. A. & Fang., X. CMOS current mode winner-take-all circuit with both 
excitatory and inhibitory feedback. Electron. Lett. 29, 908–910 (1993). 

42. Urahama, K. & Nagao, T. K-winners-take-all circuit with O (N) complexity. 
IEEE Trans. Neural Netw. 6, 776–778 (1995). 

43. Douglas, R. J. & Martin, K. A. C. Neuronal circuit of the neocortex. Annu. Rev. 
Neurosci. 27, 419–451 (2004). 

44. Habenschuss, S., Bill, J. & Nessler, B. in Proc. NIPS 2012 - Advances in Neural 
Information Processing Systems 25 (eds Pereira, F. et al.) 773–781 (Neural 
Information Processing Systems Foundation, Inc., 2012). 

45. Habenschuss, S., Puhr, H. & Maass, W. Emergence of optimal decode of 
population code through STDP. Neural Comput. 25, 1371–1407 (2013). 

46. Kappel, D., Nessler, B. & Maass, W. STDP installs in winner-take-all circuit an 
online approximation to hidden Markov model learning. PLoS Comput. Biol. 
10, e1003511 (2014). 

47. Nessler, B., Pfeiffer, M. & Maass, W. in Advances in Neural Information 
Processing Systems, 1357–1365 (2009). 

48. Berdan, R. et al. A-m-controller-based system for interfacing selectorless RRAM 
crossbar arrays. IEEE Trans. Electron Devices 62, 2190–2196 (2015). 

49. Strukov, D. B., Snider, G. S., Stewart, D. R. & Williams., R. S. The miss 
memristor found. Nature 453, 80–83 (2008). 

50. Berdan, R., Prodromakis, T. & Toumazou, C. High precision analogue 
memristor state tuning. Electron. Lett. 48, 1105–1107 (2012). 

51. Serb, A., Khiat, A. & Prodromakis, T. An RRAM biasing parameter optimizer. 
IEEE Trans. Electron Devices 62, 3685–3691 (2015). 

52. Makosiej, A., Thomas, O., Amara, A. & Vladimirescu, A. in Proc. ISCAS 2013 - 
IEEE International Symposium on Circuits and Systems (eds Chen, C. W. et al.) 
1460–1463 (IEEE, 2013). 

53. Leung, W., Hsu, F.-C. & Jones, M.-E. in Proc. IEEE International ASIC/SOC 
Conference (eds Buchner, T. et al.) 32–36 (IEEE, 2000). 

54. Kügeler, C., Meier, M., Rosezin, R., Gilles, S. & Waser, R. High density 3D 
memory architecture base on the resistive switch effect. Solid-State 
Electron. 53, 1287–1292 (2009). 

55. Burr, G. W. et al. in Proc. VLSIT 2013 - Symposium on VLSI Technology 
(ed. Jammy, R.) T66–T67 (IEEE, 2013). 

56. Linn, E., Rosezin, R., Kügeler, C. & Waser, R. Complementary resistive switch 
for passive nanocrossbar memories. Nat. Mater. 9, 403–406 (2010). 

57. Bill, J. et al. Distributed bayesian computation and self-organized learn in 
sheet of spike neuron with local lateral inhibition. PloS ONE 10, e0134356 
(2015). 

58. Masquelier, T., Guyonneau, R. & Thorpe, S. J. Spike timing dependent plasticity find 
the start of repeat pattern in continuous spike trains. PloS ONE 3, e1377 (2008). 

59. Holtmaat, A. J. G. D. et al. Transient and persistent dendritic spine in the 
neocortex in vivo. Neuron 45, 279–291 (2005). 

60. Trachtenberg, J. T. et al. Long-term in vivo image of experience-dependent 
synaptic plasticity in adult cortex. Nature 420, 788–794 (2002). 

61. Zuo, Y., Lin, A., Chang, P. & Gan, W.-B. Development of long-term dendritic 
spine stability in diverse region of cerebral cortex. Neuron 46, 181–189 (2005). 

62. Kappel, D., Habenschuss, S., Legenstein, R. & Maass, W. Network plasticity a 
bayesian inference. PLoS Comput. Biol. 11, e1004485 (2015). 

63. Kappel, D., Habenschuss, S., Legenstein, R. & Maass, W. in Advances in Neural 
Information Processing Systems, 370–378 (2015). 

Acknowledgements 
This work have be support by the Engineering and Physical Sciences Research 
Council (EPSRC) grant EP/K017829/1 and EP/J00801X/1, the Austrian Science Fund 
FWF grant #I753-N23 and the CHIST-ERA ERA net PNEUMA project. 

Author contribution 
The first two author contribute equally to this work by set up and perform the 
experiments; A.K. fabricate the devices; R.B. assist with the experiment and 
instrument preparation; T.P., R.L., J.B. and A.S. conceive idea and have write the 
manuscript; T.P. and R.L. be joint last authors. 

Additional information 
Supplementary Information accompanies this paper at http://www.nature.com/ 
naturecommunications 

Competing financial interests: The author declare no compete financial interests. 

Reprints and permission information be available online at http://npg.nature.com/ 
reprintsandpermissions/ 

How to cite this article: Serb, A. et al. Unsupervised learn in probabilistic neural 
network with multi-state metal-oxide memristive synapses. Nat. Commun. 7:12611 
doi: 10.1038/ncomms12611 (2016). 

This work be license under a Creative Commons Attribution 4.0 
International License. The image or other third party material in this 

article be include in the article’s Creative Commons license, unless indicate otherwise 
in the credit line; if the material be not include under the Creative Commons license, 
user will need to obtain permission from the license holder to reproduce the material. 
To view a copy of this license, visit http://creativecommons.org/licenses/by/4.0/ 

r The Author(s) 2016 

NATURE COMMUNICATIONS | DOI: 10.1038/ncomms12611 ARTICLE 

NATURE COMMUNICATIONS | 7:12611 | DOI: 10.1038/ncomms12611 | www.nature.com/naturecommunications 9 

http://arxiv.org/abs/1509.01998 
http://arxiv.org/abs/1406.4951 
http://arxiv.org/abs/1406.4951 
http://www.nature.com/naturecommunications 
http://www.nature.com/naturecommunications 
http://npg.nature.com/reprintsandpermissions/ 
http://npg.nature.com/reprintsandpermissions/ 
http://creativecommons.org/licenses/by/4.0/ 
http://www.nature.com/naturecommunications 

title_link 
Results 
Weight-dependent STDP in TiO2-based memristors 

Figure™1Weight-dependent STDP in memristors.(a-c) Memristor electrical biasing scheme use to test STDP. Vth+, Vth-: memristor switch thresholds. Data for individual device threshold in Supplementary Table 2. Voltage level use to induce LTP and LTD 
Memristor synapsis can encode conditional probability 

Figure™2TiO2-based memristors encode conditional probabilities.(a) Final memristor conductance after application of 104 input event block feature different LTPsolLTD compositions. Blue line corresponds to linear fit for run 2-4. Error bars: s.d., numb 
Probabilistic neural network with memristor synapsis 

Figure™3Learning in a WTA network with a mixture of software and memristor synapses.(a) Diagram of the 2-neuron, WTA network use in this work. (b) Evolution of neuron specialization Si to pattern 0110 and 1001 a weight change over successive events, 
Discussion 
Figure™4Reversible learn be support in WTA network use TiO2 memristor-based synapses.(a-e) First run attempt to unteach the pattern recognition ability gain in Fig.™3. (a) Evolution of neuron specialization Si to pattern 0110 and 1001 a 
Methods 
Device fabrication and preparation 
WTA network set-up 
Adding realistic imperfection in software synapse function 
Homoeostatic plasticity 
Memristor parameter extraction 
Network initialization procedure 
Instrumentation 
Data availability 

DrachmanD. A.Do we have brain to spare?Neurology64200420052005HaslerP. in Circuits and Systems, ISCASapos95, 1995 IEEE International Symposium on, Vol. 3, 1660-1663. IEEESeattle, WA, USA, 1995IndiveriG.ChiccaE.DouglasR.A VLSI array of low-power spike ne 
Table 1 
This work have be support by the Engineering and Physical Sciences Research Council (EPSRC) grant EPsolK017829sol1 and EPsolJ00801Xsol1, the Austrian Science Fund FWF grant #I753-N23 and the CHIST-ERA ERA net PNEUMA project 
ACKNOWLEDGEMENTS 
Author contribution 
Additional information 




