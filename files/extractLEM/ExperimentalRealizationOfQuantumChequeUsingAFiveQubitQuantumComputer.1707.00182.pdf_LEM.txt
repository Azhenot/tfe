














































ar 
X 

iv 
:1 

70 
7. 

00 
18 

2v 
2 

[ 
qu 

an 
t- 

ph 
] 

1 
0 

Ju 
l 2 

01 
7 

Experimental realization of quantum cheque use a five-qubit quantum computer 

Bikash K. Behera∗ 

Indian Institute of Science Education and Research Kolkata, Mohanpur 741246, West Bengal, India 

Anindita Banerjee† 

Department of Physics and Center for Astroparticle Physics and Space Science, 
Bose Institute, Block EN, Sector V, Kolkata 700091, India 

Prasanta K. Panigrahi‡ 

Indian Institute of Science Education and Research Kolkata, Mohanpur 741246, West Bengal, India 

We demonstrate the implementation of quantum cheque, propose by Roy Moulick and Panigrahi 
[Quantum Inf. Process (2016) 15: 2475], use the five-qubit IBM quantum computer. Appropriate 
single qubit, CNOT and Fredkin gate have be implement for the realization of the quantum 
cheque transaction in a quantum networked banking system. Quantum state tomography reveals 
the accuracy of the implementation with comparable result from the theoretical and experimental 
density matrices. 

Keywords: IBM Quantum Experience, Quantum Cheque, Quantum State Tomography 

I. INTRODUCTION 

We make use of the free web base interface, IBM 
Quantum Experience (IBM QE) [1], to experimentally 
demonstrate the quantum cheque transaction, propose 
by Roy Moulick and Panigrahi [2]. Python Application 
Programming Interface (API) and Software Development 
Kit (SDK) [3], have enable easy write of code 
and run them on quantum processors. With fast 
access to the result of an experiment, the IBM QE 
user can communicate and discus result with IBM 
researcher and other users. IBM QE permit a 
user easy-connectivity to this cloud [4] base 5-qubit 
quantum computer, use which a number of quantum 
algorithm [5–8] and quantum computational task [9] 
have already be performed. Test of Leggett-Garg [10] 
and Mermin inequality [11], quantum teleportation of 
an unknown single qubit [12] and two qubit state [13] 
have be reported. Entanglement assist invariance 
[14], non-Abelian braiding of surface code deffects [15], 
and entropic uncertainty and measurement reversibility 
[16] have be illustrated. A comparison between 
two architecture for quantum computation [17] and 
non-destructive discrimination of Bell state [18] have 
also be experimentally performed. Here, we explicate 
experimental realization of quantum cheque transaction 
by implement the scheme on IBM interface and find 
the accuracy of quantum state preparation through 
quantum state tomography. 
Establishing long distance quantum communication 

network [19, 20] be an active area of research, where 
a quantum cheque scheme [2] can be potentially use 

∗ bkb13ms061@iiserkol.ac.in 
† aninditabanerjee.physics@gmail.com 
‡ pprasanta@iiserkol.ac.in 

a an alternate for e-Payment Gateways in the field of 
e-commerce. It can also be consider a the quantum 
analog of the process of Electronic Data Interchange 
(EDI) [21]. Recently, practical unforgeable quantum 
money have be experimentally verify [22, 23]. The 
experimental demonstration therefore pave the way for 
design of the physical device for this purpose. In 
this scheme, efficient transaction can be perform by 
store quantum state in computer or smart cards, 
equip with quantum memory [24, 25]. However, 
without quantum memory, the transaction can be 
stream over the quantum internet [26, 27] or the 
protocol can be run in real time, with the account 
holder physically go to the Bank, collect a quantum 
cheque book, and then prepare a quantum cheque 
and issue to a vendor. The vendor communicates the 
quantum cheque to the Bank and withdraws money after 
a successful verification of the cheque. 
The paper be organize a follows. Section II describes 

the implementation of quantum gate e.g., CNOT and 
Fredkin gate in order to design quantum circuit for 
experimental realization of quantum cheque. Section III 
explicates the concept of a quantum cheque, follow 
which, the implementation be show on IBM Interface. 
Section V demonstrates the accuracy of implementation 
by perform quantum state tomography. Finally, in 
section VI, we conclude by summarize our work and 
point out the future direction for further work. 

II. DESIGNING GATES AND SOME 
PROTOCOLS ON IBM QE 

For the implementation of a quantum cheque, one 
require Hadamard (H), CNOT gate, the Pauli gate (X, 
Y and Z) and phase gate (S, S†, T and T †). Combining 
some of these gates, a fredkin gate can be constructed, 
which be use for the verification purpose of a quantum 

http://arxiv.org/abs/1707.00182v2 
mailto:bkb13ms061@iiserkol.ac.in 
mailto:aninditabanerjee.physics@gmail.com 
mailto:pprasanta@iiserkol.ac.in 


2 

cheque. It be to be note that, CNOT gate be not 
accessible to all five qubits on the interface of IBM, 
because of certain restriction on the qubits. Protocol-I, 
depict in Figure 1, be use to construct CNOT gate 
in any order between two qubits. Similarly, Protocol-II, 
depict in Figure 2, be use to swap any two qubits on 
IBM interface. 

FIG. 1. Protocol-I. Two equivalent quantum circuit 
show implementation of CNOT gate in any order between 
two qubits on IBM interface. 

FIG. 2. Protocol-II. Positioning of three CNOT gate for 
qubit swapping. 

III. QUANTUM CHEQUE 

A quantum cheque scheme be compose of three 
algorithms, Gen, Sign and Verify. Gen algorithm 
produce a “cheque book” and a key for the customer, 
who issue a cheque. Sign algorithm creates a quantum 
cheque state, QC, and Verify algorithm check the 
validity of a cheque. A quantum cheque have mainly 
three properties, Verifiability, i.e., it can be verify by 
a Bank’s main branch or any of it act branches, 
Non-repudiation, i.e, after issue a cheque, a customer 
must not be able to disclaim it, and Unforgeability, i.e., 
a quantum cheque can not be fabricate or it can not be 
reused. 

A. The Quantum Cheque Scheme 

The quantum cheque scheme can be described by 
consider three parties, Alice, Bob and Bank. Here, 
the Bank be denote a the main branch, which can 
have several branch securely connect by a classical 
channel. In this protocol, only Alice and Bank be 
consider to be trust parties, and not necessarily the 
branches. After a cheque be issue by Alice, Bob go to 
Bank or any of it branch to withdraw money. 
The follow three scheme be follow for a 

successful quantum cheque transaction. 
1. Gen Algorithm: Initially, a share key, k, be 

prepared by Alice and the Bank. Then Alice give her 

public key, pk, to the Bank and collect her Private Key, 
sk. 
The Bank prepares a set of m number of GHZ states, 

∣ 

∣ 

∣ 
φ(i) 

〉 

GHZ 
= 1√ 

2 

( 

∣ 

∣ 

∣ 
0(i) 

〉 

A1 

∣ 

∣ 

∣ 
0(i) 

〉 

A2 

∣ 

∣ 

∣ 
0(i) 

〉 

B 
(1) 

+ 
∣ 

∣ 

∣ 
1(i) 

〉 

A1 

∣ 

∣ 

∣ 
1(i) 

〉 

A2 

∣ 

∣ 

∣ 
1(i) 

〉 

B 

) 

where 1 ≤ i ≤ m, along with the respective unique 
serial number s ∈ {0, 1}n. From every GHZ entangle 
state, the Bank give two qubits, name |φ〉A1 and 
|φ〉A2 , and the serial number to Alice, while keep the 
third qubit, |φ〉B , and other information, secretly in a 
database. 
Here, {|φ(i)〉GHZ}i=1:m stand for 
{|φ(1)〉GHZ , |φ 

(2)〉GHZ , . . . , |φ 
(m)〉GHZ}. 

At the end, Alice posse 
(id, pk, sk, k, s, {|φ(i)〉A1 , |φ 

(i)〉A2}i=1:m), and the Bank 
carry (id, pk, k, s, {|φ(i)〉B}i=1:m). 
2. Sign Algorithm: Alice prepares a random number 

by use a random number generation procedure, r ← 
U{0,1}L to sign a cheque of amount M and creates a 
n-qubit state by use the follow one way function 
[28], 

|ψalice〉 = f(k||id||r||M), 

where, k and id, be respectively the secret key and 
the identity of Alice. The symbol ‘||’ concatenates two 
bit strings. 

Alice also prepares m state {|ψ 
(i) 
M 〉}i=1:m 

correspond to the amount M, use the one way 
function g : {0, 1}∗ × |0〉 → |ψ〉, a 

|ψ 
(i) 
M 〉 = g(r||M ||i). 

Subsequently, Alice encodes [29] |ψ 
(i) 
M 〉 with the 

entangle qubit, |φ(i)〉A1 after which she performs a Bell 
measurement on her first two qubits a show in Figure 
3. 
The state of the four qubit entangle system can be 

write in the follow form, 

∣ 

∣ 

∣ 
φ(i) 

〉 

= 
∣ 

∣ 

∣ 
ψ 
(i) 
M 

〉 

⊗ |φ〉GHZ 

= 
1 

2 

{ ∣ 

∣Ψ+ 
〉 

A1 
(αi |00〉A2B + βi |11〉A2B) 

+ 
∣ 

∣Ψ− 
〉 

A1 
(αi |00〉A2B − βi |11〉A2B) 

+ 
∣ 

∣Φ+ 
〉 

A1 
(βi |00〉A2B + αi |11〉A2B) 

+ 
∣ 

∣Φ− 
〉 

A1 
(βi |00〉A2B − αi |11〉A2B) 

} 

(2) 

where |Ψ+〉, |Ψ−〉, |Φ+〉, and |Φ−〉 denote four Bell 
states. 
Now, Alice applies an appropriate Pauli gate operation 

on her qubit |φ(i)〉A2 , accord to the Bell state 
measurement outcomes: 



3 

|Ψ+〉 → I |Ψ−〉 → Z 
|Φ+〉 → X |Φ−〉 → Y 

Figure 3 depicts the encode procedure of quantum 
cheque, which be to be repeat m times. 
Alice then us sign algorithm to sign the serial number 

s a σ ← Signsk(s), and generates a quantum cheque 

QC = (id, s, r, σ,M, {|φ(i)〉A2}i=1:m, |ψalice〉) 

for Bob to encash. 

FIG. 3. Depicting the quantum circuit use to generate a 
quantum cheque state. 

FIG. 4. Quantum circuit for perform swap test on the two 
state |Ψ〉 and |Ψ′〉. 

Swap Test: The swap test be depict in Figure 
4, where the measurement of ancilla (first qubit) on a 
computational basis yield zero if the two state |Ψ〉 
and |Ψ′〉 be equal. In this case, swap test be say to 
be successful. However, if the two state be different, 
then the measurement of ancilla yield both |0〉 and |1〉 
each associate with some probability. For 〈Ψ|Ψ′〉 ≥ λ, 

the swap test be successful with probability 1+λ 
2 

2 , and 

unsuccessful with probability 1−λ 
2 

2 . It be evident that, 
for the same input states, the swap test be successful with 
probability 1 and for different outputs, it be successful 
with probability less than 1. The efficiency of this test 
can be amplify by repeat it a large number of times. 
3. Verify Algorithm: In the verification process, 

Bob produce the quantum cheque QC at any of the 
act branch of the Bank. The branch communicates 
with the Bank (main branch) to check the validity 
of the (id, s) pair, and a verification be run by use 
V rfypk(σ, s). As described below, the Bank proceeds 
with the verification process if it find (id, s) and σ to be 
valid, otherwise cancel the quantum cheque transaction. 
The Bank then measure it qubit, |φB〉 in Hadamard 

basis to get |+〉 or |−〉 a output and conveys the result 

to the act branch. The branch applies the appropriate 
Pauli gate operation on |φ(i)〉A2 to retrieve the unknown 

state |ψ 
(i) 
M 〉. 

|+〉 → I |−〉 → Z 

A similar procedure be follow m time to get m 

unknown state {|ψ 
(i) 
M 〉}i=1:m. The Bank generates 

|ψ′alice〉 = f(k||id||r||M), and {|ψ 
,(i) 
M 〉}i=1:m = 

{g(r||M ||i)}i=1:m by use these one way functions, and 
then performs a swap test on m + 1 set of states, 

{|ψalice〉, |ψ 
′ 
alice〉}, and {|ψ 

(i) 
M 〉, |ψ 

,(i) 
M 〉}i=1:m. 

The cheque be accepted if the swap test be successful, 

i.e., if 〈ψalice|ψ 
′ 
alice〉 ≥ λ1 and {〈ψ 

(i) 
M |ψ 

,(i) 
M 〉 ≥ λ2}i=1:m, 

where λ1 and λ2 be constant fix by the Bank. Else, 
the branch terminates the transaction. 

IV. IMPLEMENTATION OF QUANTUM 
CHEQUE AT IBM QE 

FIG. 5. IBM quantum circuit use to generate the quantum 
cheque state. 

The IBM quantum circuit for generate a quantum 
cheque state have be depict in Figure 5. It be 
equivalent to the quantum circuit show in Figure 
3. Though, these two figure appear to be different, 
their equivalency can be checked by use Protocol-I, 
Protocol-II and the concept of optimization of circuit. In 
Figure 5, the first three qubits be in possession of Alice, 
the Bank contains the fifth qubit, and the fourth qubit 
remains unused. Alice us one of her entangle qubit 
(2nd qubit), |φ(i)〉A1 , provide by Bank, to encode the 

unknown state |ψ 
(i) 
M 〉. Here, this unknown state can not 

be generate by use the one way function, “g” (section 
III), since we model only the quantum aspect and for 
simplicity only assume the g spit out a description of the 
follow state, that be know to the preparation device 
but unknown to anybody else a [12], 

|ψ 
(i) 
M 〉 = cos(π/8)|0〉+ sin(π/8)|1〉 (3) 

It can be compute by operating H, T, H and S gate 
sequentially on |0〉. As this state be now split between 
Alice’s qubit (3rd qubit) and Bank’s qubit (5th qubit), 
measure the 3rd qubit in computational basis, it be 
expect to have |0〉 with probability ≈ 0.85 and |1〉 



4 

TABLE I. The table show the result of the outcome of 
the quantum cheque state, depict in Figure 5, measure in 
computational basis. The result be obtain by both run 
and simulate the experiment with 1024, 4096 and 8192 
number of shots. 

For Quantum Cheque Generation 
Number of Shots Probability of |0〉 Probability of |1〉 
Run-1 (1024) 0.741 0.249 
Run-2 (4096) 0.766 0.234 
Run-3 (8192) 0.755 0.245 

Simulation-1 (1024) 0.848 0.152 
Simulation-2 (4096) 0.856 0.144 
Simulation-3 (8192) 0.856 0.144 

with probability ≈ 0.15. The experimental result be 
tabulate in Table I. 

The encode procedure (as described in section III) 
should be do m time by use m similar quantum 
circuit (Figure 5). Through the IBM cloud, it be not 
possible to create n-qubit quantum state by use a one 
way function, “f” (section III). So, we have take two 
initial state |0〉, and |0〉 for comparison test. 

FIG. 6. IBM quantum circuit use to verify the Quantum 
Cheque. It be to be note that a set of two state be to be 
take on the second and the third qubit of the above circuit 
for check swap test. 

The quantum circuit implement on IBM interface, 
for quantum cheque verification, be illustrate in Figure 
6, which be equivalent to the circuit show in Figure 4. In 
this case, both the initial state (2nd qubit and 3rd qubit) 
be take as, |0〉. (See Figure 6). It be expect to have |0〉 
with probability 1, after measure the ancilla qubit (1st 
qubit) in computational basis. The experimental result 
be illustrate in table II. 

Comparing run result and simulated result, show in 
table I and II, run result be found to be less accurate 
than the simulated result. It be evident that application 
of a large number of gate increase decoherence of 
a quantum state and produce more noise in the 
system. Decoherence and noise due to gate be the 
key disadvantage for realize the implementation of a 
quantum cheque with exact accuracy. 

TABLE II. Table provide information about the ancilla 
state, depict in Figure 6, when it be measure in 
computational basis. The experiment have be perform with 
1024, 4096 and 8192 number of shots. Both run and simulated 
result be illustrated. 

For Quantum Cheque Verification 
Number of Shots Probability of |0〉 Probability of |1〉 
Run-1 (1024) 0.813 0.188 
Run-2 (4096) 0.839 0.161 
Run-3 (8192) 0.846 0.154 

Simulation-1 (1024) 1.000 0.000 
Simulation-2 (4096) 1.000 0.000 
Simulation-3 (8192) 1.000 0.000 

V. QUANTUM STATE TOMOGRAPHY 

We now proceed to carry out state tomography to 
check how well, the quantum state be prepared in our 
experiment. We mainly consider two states, quantum 
cheque state (|φ(i)〉A2), which be to be store in the 
quantum cheque, and ancilla state, use in swap test 
(See Section III). In this process, by compare both 
the theoretical and experimental density matrix of a 
quantum state, the accuracy of implementation can be 
tested. 
State tomography can be explain through a single 

qubit quantum state, |Ψ〉 = α|0〉+ β|1〉. The theoretical 
and experimental density matrix of the give state be 
give by equation 4 and 5 respectively. 

ρT = |Ψ〉〈Ψ|, (4) 

and 

ρE = 
1 

2 
(I + 〈X〉X + 〈Y 〉Y + 〈Z〉Z) (5) 

Here, 〈O〉 = tr(|Ψ〉〈Ψ|O), where O = X, Y, and 
Z. This expectation value can be obtain by rotate 
the quantum state along O axis and then measure in 
computational basis. This can be evaluate as, 〈O〉 = 
P(0)-P(1), where P(0) and P(1) be the probability of 
outcome 0 and 1 respectively. 
The theoretical (ρTx , ) and experimental (ρ 

ER 
x , ρ 

ES 
x ) 

density matrix (both for run result and simulated 
result) of quantum cheque state (x = q) and ancilla state 
(x = a) be give below. 

ρTq = 

[ 

0.850 0.350 
0.350 0.150 

] 

ρERq = 

[ 

0.760 0.043 
0.043 0.240 

] 

+ i 

[ 

0.000 −0.027 
0.027 0.000 

] 

ρESq = 

[ 

0.852 0.008 
0.008 0.148 

] 

+ i 

[ 

0.000 −0.001 
0.001 0.000 

] 



5 

<0| 
<1| 

|0> 
|1> 

−1 

0 

1 




(1a) 

0 

0.2 

0.4 

0.6 

0.8 

<0| 
<1| 

|0> 
|1> 

−1 

0 

1 


<0| 
<1| 

|0> 
|1> 

−0.5 

0 

0.5 



(1b) 

−1 

−0.5 

0 

0.5 

1 

<0| 
<1| 

|0> 
|1> 

−0.5 

0 

0.5 





<0| 
<1| 

|0> 
|1> 

−1 

0 

1 




(1c) 

0.2 

0.4 

0.6 

<0| 
<1| 

|0> 
|1> 

−1 

0 

1 


<0| 
<1| 

|0> 
|1> 

−0.5 

0 

0.5 




(1d) 

−0.02 

−0.01 

0 

0.01 

0.02 

<0| 
<1| 

|0> 
|1> 

−0.5 

0 

0.5 




<0| 
<1| 

|0> 
|1> 

−1 

0 

1 




(1e) 

0.2 

0.4 

0.6 

0.8 

<0| 
<1| 

|0> 
|1> 

−1 

0 

1 


<0| 
<1| 

|0> 
|1> 

−0.5 

0 

0.5 




(1f) 

−1 

−0.5 

0 

0.5 

1 
x 10 

−3 

<0| 
<1| 

|0> 
|1> 

−0.5 

0 

0.5 




FIG. 7. Quantum cheque generation: Real (left) 
and imaginary (right) part of the reconstruct theoretical 
(1a,1b), run (1c,1d) and simulated (1e,1f) density matrix 
for the quantum cheque state. 

ρTa = 

[ 

1.000 0.000 
0.000 0.000 

] 

ρERa = 

[ 

0.846 0.054 
0.054 0.154 

] 

+ i 

[ 

0.000 0.062 
−0.062 0.000 

] 

ρESa = 

[ 

1.000 0.009 
0.009 0.000 

] 

+ i 

[ 

0.000 −0.003 
0.003 0.000 

] 

It be to be note that the above experimental density 
matrix be calculate for run and simulate the 
experiment 8192 times. For other number of shot (1024 
and 4096), similar procedure can be apply to obtain the 
correspond density matrices. As mention in section 
IV, by compare the run, simulated and theoretical 
density matrices, it can be conclude that, the simulated 
result provide more accurate information, about the 
quantum state, a compare to the run results, which 
be already mention in section IV. 

VI. CONCLUSION 

To conclude, here, we have demonstrate an 
experimental procedure of quantum cheque transaction 
in a quantum networked environment. Fredkin gate 
have be constructed, by use single qubit and CNOT 
gates, for verification of quantum cheque. The quantum 

<0| 
<1| 

|0> 
|1> 

−1 

0 

1 




(2a) 

0 

0.5 

1 

<0| 
<1| 

|0> 
|1> 

−1 

0 

1 


<0| 
<1| 

|0> 
|1> 

−0.5 

0 

0.5 



(2b) 

−1 

−0.5 

0 

0.5 

1 

<0| 
<1| 

|0> 
|1> 

−0.5 

0 

0.5 





<0| 
<1| 

|0> 
|1> 

−1 

0 

1 




(2c) 

0.2 

0.4 

0.6 

0.8 

<0| 
<1| 

|0> 
|1> 

−1 

0 

1 


<0| 
<1| 

|0> 
|1> 

−0.5 

0 

0.5 




(2d) 

−0.05 

0 

0.05 

<0| 
<1| 

|0> 
|1> 

−0.5 

0 

0.5 




<0| 
<1| 

|0> 
|1> 

−1 

0 

1 




(2e) 

0 

0.5 

1 

<0| 
<1| 

|0> 
|1> 

−1 

0 

1 


<0| 
<1| 

|0> 
|1> 

−0.5 

0 

0.5 




(2f) 

−2 

0 

2 

x 10 
−3 

<0| 
<1| 

|0> 
|1> 

−0.5 

0 

0.5 




FIG. 8. Quantum cheque verification: Real (left) 
and imaginary (right) part of the reconstruct theoretical 
(2a,2b), run (2c,2d) and simulated (2e,2f) density matrix 
for the ancilla state. 

state tomography have be perform to check the 
accuracy of the implementation. It be observe that the 
quantum cheque transaction have be carry out with 
good fidelity. 

ACKNOWLEDGMENTS 

B.K.B. be financially support by DST Inspire 
Fellowship. We thank Subhayan Roy Moulick (Oxford) 
for contribution to the original concept of quantum 
cheque. We be extremely grateful to IBM team and 
IBM QE project. We thank IBM community for 
helpful suggestion regard circuit construction. The 
discussion and opinion developed in this paper be only 
those of the author and do not reflect the opinion of 
IBM or IBM QE team. 

[1] IBM Q, URL http://research.ibm.com/ibm-q/. 
[2] S. R. Moulick, P. K. Panigrahi “Quantum Cheques,” 

Quantum Inf. Process. 15, 2475-2486 (2016). 
[3] “Quantum compute get an API and SDK”. 

[4] Davide Castelvecchi, “IBM’s quantum cloud computer 
go commercial,” Nature News. 543, 159 (2017). 

[5] Peter Shor, “Algorithms for Quantum Computation: 
Discrete Logarithms and Factoring,” Proceeding SFCS 

http://research.ibm.com/ibm-q/ 
http://dx.doi.org/10.1007/s11128-016-1273-4 
https://developer.ibm.com/dwblog/2017/quantum-computing-api-sdk-david-lubensky/ 
http://dx.doi.org/10.1038/nature.2017.21585 


6 

’94 Proceedings of the 35th Annual Symposium on 
Foundations of Computer Science. Pages 124-134 (1994). 

[6] L. K. Grover, “A fast quantum mechanical algorithm 
for database search, ” (1996), arXiv:quant-ph/9605043. 

[7] Andris Ambainis, “Quantum search algorithms,” 
(2004), arXiv:quant-ph/0504012. 

[8] M. Mosca, “Quantum Algorithms,” (2008), 
arXiv:0808.0369. 

[9] Simon J. Devitt, “Performing quantum 
compute experiment in the cloud,” 
Phys. Rev. A. 94(3), 032329 (2016). 

[10] Emilie Huffman, and Ari Mizel, “Violation of 
noninvasive macrorealism by a superconducting qubit: 
Implementation of a Leggett-Garg test that address the 
clumsiness loophole,” Phys. Rev. A 95, 032131 (2017). 

[11] Daniel Alsina, and José Ignacio Latorre, “Experimental 
test of Mermin inequality on a five-qubit quantum 
computer,” Phys. Rev. A. 94(1), 012314 (2016). 

[12] Serguei Fedortchenko, “A quantum teleportation 
experiment for undergraduate students,” (2016), 
arXiv:1607.02398. 

[13] Mitali Sisodia, Abhishek Shukla, Kishore Thapliyal, and 
Anirban Pathak, “Design and experimental realization 
of an optimal scheme for teleportion of an n-qubit 
quantum state,” (2017), arXiv:1704.05294. 

[14] Sebastian Deffner, “Demonstration of entanglement 
assist invariance on IBM’s Quantum Experience,” 
(2016), arXiv:1609.07459. 

[15] James R Wootton, “Demonstrating 
non-Abelian braiding of surface code 
defect in a five qubit experiment,” 
Quantum Science and Technology. 2(1), 015006 (2017). 

[16] Mario Berta, Stephanie Wehner, and Mark M Wilde, 
“Entropic uncertainty and measurement reversibility,” 
New Journal of Physics. 18(7), 073004 (2016). 

[17] Norbert M. Linke, Dmitri Maslov, Martin Roetteler, 
Shantanu Debnath, Caroline Figgatt, 
Kevin A. Landsman, Kenneth Wright, and 
Christopher Monroe, “Experimental comparison 
of two quantum compute architectures,” 
Proceedings of the National Academy of Sciences . 114(13), 3305-3310 (2017). 

[18] Mitali Sisodia, Abhishek Shukla, and Anirban 
Pathak, “Experimental realization of nondestructive 
discrimination of Bell state use a five-qubit quantum 
computer,” (2017), arXiv:1705.00670. 

[19] Eli Biham, Bruno Huttner, and Tal Mor, “Quantum 
cryptographic network base on quantum memories,” 
Phys. Rev. A. 54(2651), (1996). 

[20] L. M. Duan, and C. Monroe, “Quantum network with 
trap ions,” Rev. Mod. Phys. 82(1209), (2010). 

[21] James H. Burrows (1996-04-29), “Electronic Data 
Interchange (EDI)”, National Institute of Standards and 
Technology, Retrieved 2008-05-13. 

[22] Karol Bartkiewicz, Antońın Černoch, 
Grzegorz Chimczak, Karel Lemr, Adam Miranowicz, 
and Franco Nori, “Experimental 
quantum forgery of quantum optical money,” 
npj Quantum Information. 3, 7 (2017). 

[23] Mathieu Bozzio, Adeline Orieux, Luis Trigo Vidarte, 
Isabelle Zaquine, Iordanis Kerenidis, and Eleni Diamanti, 
“Experimental demonstration of practical unforgeable 
quantum money,” (2017), arXiv:1705.01428. 

[24] C.A. Trugenberger, “Probabilistic Quantum 
Memories,” Phys. Rev. Lett. 87, 067901 (2001). 

[25] C. Simon, M. Afzelius, J. Appel, A. Boyer de la Giroday, 
S. Dewhurst, N. Gisin, C. Hu, F. Jelezko,S. Kröll, and 
J. Müller “Quantum Memories. A Review base on 
the European Integrated Project “Qubit Applications 
(QAP)”,” Eur. Phys. J. D. 58, 1-22 (2010). 

[26] W. Munro, A. Stephens, S. Devitt, K. Harrison, 
and K. Nemoto, “Quantum communication 
without the necessity of quantum memories,” 
Nature Photonics. 6, 777-781 (2012). 

[27] H. j. Kimble, “The quantum internet,” 
Nature. 453(1023), (2008). 

[28] S. Goldwasser, and M. Bellare, “Lecture Notes on 
Cryptography”. Summer course on cryptography, MIT, 
1996–2001. 

[29] M. Hillery, V. Bužek, and A. Berthiaume, “Quantum 
secret sharing,” Phys. Rev. A. 59, 1829 (1999). 

https://arxiv.org/abs/quant-ph/9605043 
https://arxiv.org/abs/quant-ph/0504012 
https://arxiv.org/abs/0808.0369 
http://dx.doi.org/10.1103/PhysRevA.94.032329 
http://dx.doi.org/10.1103/PhysRevA.95.032131 
http://dx.doi.org/10.1103/PhysRevA.94.012314 
https://arxiv.org/abs/1607.02398 
https://arxiv.org/abs/1704.05294 
https://arxiv.org/abs/1609.07459 
http://dx.doi.org/10.1088/2058-9565/aa5c73 
http://dx.doi.org/10.1088/1367-2630/18/7/073004 
http://dx.doi.org/10.1073/pnas.1618020114 
https://arxiv.org/abs/1705.00670 
http://dx.doi.org/10.1103/PhysRevA.54.2651 
http://dx.doi.org/10.1103/RevModPhys.82.1209 
http://dx.doi.org/10.1038/s41534-017-0010-x 
https://arxiv.org/abs/1705.01428 
http://dx.doi.org/10.1103/PhysRevLett.87.067901 
http://dx.doi.org/doi.org/10.1140/epjd/e2010-00103-y 
http://dx.doi.org/10.1038/nphoton.2012.243 
http://dx.doi.org/10.1038/nature07127 
http://dx.doi.org/10.1103/PhysRevA.59.1829 

